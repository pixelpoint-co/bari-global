{"version":3,"file":"static/js/8294.d4db3f79.chunk.js","mappings":"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","sources":["api/couponApi.js","components/CouponComponent.js","pages/member/CouponPage.js","../node_modules/antd/es/_util/colors.js","../node_modules/antd/es/theme/interface/presetColors.js","../node_modules/antd/es/theme/util/genPresetColor.js"],"sourcesContent":["import useCustomLogin from \"../hooks/useCustomLogin\";\nimport jwtAxios from \"../util/jwtUtil\";\nimport { API_SERVER_HOST } from \"./reviewApi\";\n\nconst host = `${API_SERVER_HOST}/api/mypage/coupon`;\n\n\nexport const getAvailableCoupons = async (email) => {\n  try {\n    const res = await jwtAxios.get(`${host}/available`, {\n      params: { email }, // Pass email as a query parameter\n    });\n    return res.data;\n  } catch (error) {\n    console.error(\"Error fetching available coupons:\", error);\n    throw error;\n  }\n};\n\nexport const addCouponToMyList = async (couponId, email) => {\n  try {\n\n    if (!email) {\n      throw new Error(\"User email not found in localStorage\");\n    }\n\n    await jwtAxios.post(`${host}/add/${email}`, null, {\n      params: { couponId },\n    });\n  } catch (error) {\n    if (error.response && error.response.status === 401) {\n      console.error(\"Authentication failed. Redirecting to login.\");\n      // Redirect to login or handle token refresh if applicable\n    } else {\n      console.error(\"Error adding coupon:\", error);\n    }\n    throw error; // Rethrow to handle it in the UI if necessary\n  }\n};\n\nexport const getMyCoupons = async (email) => {\n    \n  try {\n    \n    if (!email) {\n      throw new Error(\"User email not found in localStorage\");\n    }\n\n    const res = await jwtAxios.get(`${host}/myCoupons`, {\n      params: { email },\n    });\n    return res.data;\n  } catch (error) {\n    console.error(\"Error fetching my coupons:\", error);\n    throw error;\n  }\n};\n","import React, { useEffect, useState } from \"react\";\nimport { Button, Badge } from \"antd\";\nimport {\n  getAvailableCoupons,\n  addCouponToMyList,\n  getMyCoupons,\n} from \"../api/couponApi\";\nimport useCustomLogin from \"../hooks/useCustomLogin\";\n\nconst CouponComponent = () => {\n  const [availableCoupons, setAvailableCoupons] = useState([]);\n  const [myCoupons, setMyCoupons] = useState([]);\n  const { loginState } = useCustomLogin();\n\n  const email = loginState.email;\n  window.scrollTo(0, 0); \n  useEffect(() => {\n    \n    fetchAvailableCoupons();\n    fetchMyCoupons();\n  }, []);\n\n  const fetchAvailableCoupons = async () => {\n    try {\n      const userEmail = email; // Fetch user email from local storage or user object\n      const coupons = await getAvailableCoupons(userEmail); // Pass email as parameter\n      setAvailableCoupons(coupons);\n    } catch (error) {\n      console.error(\"Error fetching available coupons:\", error);\n    }\n  };\n\n  const fetchMyCoupons = async () => {\n    try {\n      const coupons = await getMyCoupons(email);\n      setMyCoupons(\n        coupons.map((coupon) => ({\n          ...coupon,\n          isUsed: coupon.useDate !== null, // Add isUsed property\n        }))\n      );\n    } catch (error) {\n      console.error(\"Error fetching my coupons:\", error);\n    }\n  };\n\n  const handleAddCoupon = async (couponId) => {\n    const coupon = myCoupons.find((coupon) => coupon.couponId === couponId);\n    if (coupon?.isUsed) {\n      alert(\"This coupon has already been used!\");\n      return;\n    }\n    if (coupon) {\n      alert(\"You already added this coupon!\");\n      return;\n    }\n\n    try {\n      await addCouponToMyList(couponId, email);\n      fetchMyCoupons();\n      alert(\"Coupon added to your list!\");\n    } catch (error) {\n      console.error(\"Error adding coupon to my list:\", error);\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen p-6 flex flex-col items-center bg-gray-100 mt-16 mb-10\">\n      <h1 className=\"text-2xl font-bold text-gray-800 text-center mb-10\">Coupons</h1>\n\n      {/* New Offers Section */}\n      <div className=\"w-full max-w-4xl bg-white rounded-lg shadow-md p-4 mb-8\">\n        <h2 className=\"text-lg font-semibold text-gray-700 mb-4\">New Offers</h2>\n        {availableCoupons.length > 0 ? (\n          <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-2 gap-4\">\n            {availableCoupons.map((coupon) => {\n              const isAlreadyAdded = myCoupons.some(\n                (myCoupon) => myCoupon.couponId === coupon.couponId\n              );\n\n              return (\n                <div\n                  key={coupon.couponId}\n                  className={`p-3 ${\n                    isAlreadyAdded ? \"bg-white\" : \"bg-gray-200\"\n                  } text-gray-900 rounded-md shadow-sm flex flex-col justify-between`}\n                >\n                  <div>\n                    <h3 className=\"text-base font-bold\">{coupon.couponName}</h3>\n                    <p className=\"text-xs\">Expires: {coupon.expirationDate}</p>\n                  </div>\n                  <div className=\"flex justify-between items-center mt-3\">\n                    <Badge\n                      count={`â‚©${coupon.discount}`}\n                      style={{ backgroundColor: \"#52c41a\" }}\n                    />\n                    <Button\n                      onClick={() => handleAddCoupon(coupon.couponId)}\n                      disabled={isAlreadyAdded}\n                      className={`${\n                        isAlreadyAdded\n                          ? \"bg-gray-300 text-gray-600\"\n                          : \"bg-yellow-500 text-white font-bold\"\n                      }`}\n                    >\n                      {isAlreadyAdded ? \"Added To My Coupon\" : \"Add\"}\n                    </Button>\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        ) : (\n          <p className=\"text-center text-gray-500\">No new offers available.</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default CouponComponent;\n","import React from \"react\";\nimport CouponComponent from \"../../components/CouponComponent\";\nimport BasicLayout from '../../layouts/BasicLayout'\n\nconst CouponPage = () => {\n  return (\n    <BasicLayout>\n      <div className=\"p-4 w-full bg-gray-100\">\n        <CouponComponent />\n      </div>\n    </BasicLayout>\n  );\n};\n\nexport default CouponPage;\n","import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport { PresetColors } from '../theme/interface';\nconst inverseColors = PresetColors.map(color => `${color}-inverse`);\nexport const PresetStatusColorTypes = ['success', 'processing', 'error', 'default', 'warning'];\n/**\n * determine if the color keyword belongs to the `Ant Design` {@link PresetColors}.\n * @param color color to be judged\n * @param includeInverse whether to include reversed colors\n */\nexport function isPresetColor(color) {\n  let includeInverse = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  if (includeInverse) {\n    return [].concat(_toConsumableArray(inverseColors), _toConsumableArray(PresetColors)).includes(color);\n  }\n  return PresetColors.includes(color);\n}\nexport function isPresetStatusColor(color) {\n  return PresetStatusColorTypes.includes(color);\n}","export const PresetColors = ['blue', 'purple', 'cyan', 'green', 'magenta', 'pink', 'red', 'orange', 'yellow', 'volcano', 'geekblue', 'lime', 'gold'];","import { PresetColors } from '../interface';\nexport default function genPresetColor(token, genCss) {\n  return PresetColors.reduce((prev, colorKey) => {\n    const lightColor = token[`${colorKey}1`];\n    const lightBorderColor = token[`${colorKey}3`];\n    const darkColor = token[`${colorKey}6`];\n    const textColor = token[`${colorKey}7`];\n    return Object.assign(Object.assign({}, prev), genCss(colorKey, {\n      lightColor,\n      lightBorderColor,\n      darkColor,\n      textColor\n    }));\n  }, {});\n}"],"names":["host","API_SERVER_HOST","CouponComponent","availableCoupons","setAvailableCoupons","useState","myCoupons","setMyCoupons","loginState","useCustomLogin","email","window","scrollTo","useEffect","fetchAvailableCoupons","fetchMyCoupons","async","userEmail","coupons","jwtAxios","get","params","data","error","console","getAvailableCoupons","Error","getMyCoupons","map","coupon","isUsed","useDate","handleAddCoupon","find","couponId","alert","post","response","status","addCouponToMyList","_jsxs","className","children","_jsx","length","isAlreadyAdded","some","myCoupon","couponName","expirationDate","Badge","count","discount","style","backgroundColor","Button","onClick","disabled","CouponPage","BasicLayout","inverseColors","PresetColors","color","isPresetColor","arguments","undefined","concat","_toConsumableArray","includes","genPresetColor","token","genCss","reduce","prev","colorKey","lightColor","lightBorderColor","darkColor","textColor","Object","assign"],"sourceRoot":""}