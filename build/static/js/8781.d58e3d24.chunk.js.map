{"version":3,"file":"static/js/8781.d58e3d24.chunk.js","mappings":"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","sources":["api/productsApi.js","components/common/FetchingModal.js","components/common/ResultModal.js","hooks/useCustomMove.js","components/products/ModifyComponent.js","pages/products/ModifyPage.js"],"sourcesContent":["import { API_SERVER_HOST } from \"./reviewApi\";\nimport jwtAxios from \"../util/jwtUtil\";\nimport axios from \"axios\";\n\nconst host = `${API_SERVER_HOST}/api/user/products`;\n\nexport const postAdd = async (product) => {\n  const header = { headers: { \"Content-Type\": \"multipart/form-data\" } };\n  const res = await jwtAxios.post(`${host}/`, product, header);\n  return res.data;\n};\n\n//p264, 서버에서 목록 데이터를 가져오기 위한 함수\nexport const getList = async ({ page, size, keyword = \"\", type = \"t\", category = \"\" }) => {\n  try {\n    const res = await jwtAxios.get(`${host}/list`, {\n      params: {\n        page,\n        size:9,\n        keyword, // Search keyword\n        type, // Search type\n        category\n      },\n    });\n    return res.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const getProductsByCategory = async ({ page, size, category }) => {\n  try {\n    const res = await jwtAxios.get(`${host}/listByCategory`, {\n      params: {\n        page,\n        size,\n        category,\n      },\n    });\n    return res.data;\n  } catch (error) {\n    console.error(\"Error fetching products by category:\", error);\n    throw error;\n  }\n};\n\nexport const getProductCategories = async () => {\n  try {\n    const response = await jwtAxios.get(`${host}/categories`);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching tour categories:\", error.message);\n    throw error;\n  }\n};\n\n//p273, Axios로 특정 상품 데이터 조회\nexport const getOne = async (pno) => {\n  const res = await jwtAxios.get(`${host}/${pno}`);\n  return res.data;\n};\n\n// p281, 수정/삭제\nexport const putOne = async (pno, product) => {\n  const header = { headers: { \"Content-Type\": \"multipart/form-data\" } };\n  const res = await jwtAxios.put(`${host}/${pno}`, product, header);\n  return res.data;\n};\n\nexport const deleteOne = async (pno) => {\n  const res = await jwtAxios.delete(`${host}/${pno}`);\n  return res.data;\n};\n\n//order : 처음에 유저정보와 유저의 쿠폰정보 가져올때 사용\n//product & tour 같이 사용\nexport const getOrderInfo = async () => {\n  const res = await jwtAxios.get(`${host}/orderinfo`);\n  return res.data;\n};\n  \n  \n//order : 유저의 order정보를 서버로 보냄\nexport const postOrderInfo = async (orderInfo) => {\n  console.log(\"보내는 정보 orderInfo\" , orderInfo)\n  const headers = { \"Content-Type\": \"application/json\" };\n\n  try {\n    const res = await jwtAxios.post(`${host}/orders`, orderInfo, { headers });\n    console.log(res);\n    return res.data;\n  } catch (error) {\n    throw new Error(error.response?.data?.message || \"Failed to Post order info\");\n  }\n};\n\n\n// payment: 유저의 결제 정보를 서버로 보냄 , impUid포함한 정보.\nexport const postPayInfo = async (orderInfoWithOrderId, impUid) => {\n  console.log(\"payment:\", orderInfoWithOrderId);\n  const headers = { \"Content-Type\": \"application/json\" };\n\n  try {\n    const res = await jwtAxios.post(\n      `${host}/payment/${impUid}`,\n        orderInfoWithOrderId,\n      { headers }\n    );\n    return res.data;\n  } catch (error) {\n    throw new Error(error.response?.data?.message || \"Failed to Post payment info\");\n  }\n};\n\nexport const getTopSellingProducts = async (limit = 3) => {\n  try {\n    const response = await jwtAxios.get(`${host}/top-selling`, {\n      params: { limit }, // Pass the limit as a query parameter\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching top-selling products:\", error.message);\n    throw error;\n  }\n};","import React from 'react'\n\nconst FetchingModal = () => {\n\n  return (\n    <div className={'fixed top-0 left-0 z-[1055] flex h-full w-full place-items-center justify-center bg-black bg-opacity-20'}>\n        <div className='bg-white rounded-3xl opacity-100 min-w-min h-1/4 min-w-[600px] flex justify-center items-center'>\n            <div className='text-4xl font-extrabold text-orange-400 m-20'>\n                Loading.....\n            </div>\n        </div>\n    </div>\n  )\n}\n\nexport default FetchingModal","import React from 'react'\n\nconst ResultModal = ({title, content, callbackFn}) => {\n  return (\n    <div className={`fixed top-0 left-0 z-[1055] flex h-full w-full justify-center bg-black bg-opacity-20`}\n        onClick={() => {\n            if(callbackFn) callbackFn()\n        }}>\n        <div className='absolute bg-white shadow dark:bg-gray-700 opacity-100 w-1/4 rounded mt-10 mb-10 px-6 min-w-[600px]'>\n            <div className='justify-center bg-warning-400 mt-6 mb-6 text-2xl border-b-4 border-gray-500'>\n                {title}\n            </div>\n            <div className='text-4xl border-orange-400 border-b-4 pt-4 pb-4'>\n                {content}\n            </div>\n            <div className='justify-end flex'>\n                <button className='rounded bg-blue-500 mt-4 mb-4 px-6 pt-4 pb-4 text-lg text-white'\n                    onClick={() => {\n                        if(callbackFn) callbackFn()\n                    }}>\n                    Close Modal    \n                </button>\n            </div>\n        </div>\n    </div>\n  )\n}\n\nexport default ResultModal","import  { useState } from 'react'\nimport { createSearchParams, useNavigate, useSearchParams } from 'react-router-dom'\n\nconst getNum = (param, defaultValue) => {\n    if (!param) {\n        return defaultValue\n    }\n    return parseInt(param)\n}\n\nconst useCustomMove = () => {\n    const navigate = useNavigate()\n    const [refresh, setRefresh] = useState(false)\n    const [queryParams] = useSearchParams()\n    const page = getNum(queryParams.get('page'), 1)\n    const size = getNum(queryParams.get('size'), 10)\n    const queryDefault = createSearchParams({ page, size }).toString()\n\n    const moveToList = (pageParam = {}) => {\n        console.log('pageParam:', pageParam)\n        console.log(pageParam ? 'pageParam = 참' : 'pageParam = 거짓')\n        // 목록으로 이동할때 pageParam에 아무것도 전달되지 않으면 비어 있는 기본 객체를 인자로 받아 pageParam 설정\n        // const { page = 1, size = 10 } = pageParam\n        // url에 현재 page와 페이지당 size가 destructuring으로 page와 size에 저장되고\n        // 아무것도 넘어오지 않으면 기본값 page = 1, size = 10으로 결정된다\n        // 프로젝트시에도 넘어오는 데이터가 없으면 터지므로 undefined 변수에 접근하려고 하면 터짐\n        // 그래서 사용하는 곳에서 전달되는 값이 없을 경우 객체이면 {}를 기본값으로 설정하고,\n        // 배열이면 []로 선언하면 터지는 문제는 해결 가능\n        // 기본 자료형은 터질일은 없지만 없는 변수에 index로 배열에 접근하면 터지고-[]\n        // 객체의 key에 접근하려고 하면 터짐\n        let queryStr = \"\"\n        if (pageParam) {\n\n            const pageNum = getNum(pageParam.page, 1)\n            const sizeNum = getNum(pageParam.size, 10)\n            queryStr = createSearchParams({ page: pageNum, size: sizeNum }).toString()\n        } else queryStr = queryDefault\n\n        console.log('queryStr:', queryStr)\n        navigate({ pathname: '../list', search: queryStr })\n        setRefresh(!refresh)\n        // 동일한 페이지 버튼을 누를때에도 호출될 수 있도록 값을 변경\n        // useEffect의 두번째 인자(배열의 값이 변경되면 첫번째 인자 호출)    \n    }\n\n    const moveToModify = (num) => { // 수정으로 이동\n        console.log(queryDefault)\n        navigate({ pathname: `../modify/${num}`, search: queryDefault })\n    }\n\n    const moveToProductRead = (num) => {\n        // 조회로 이동, 여기에서 navigate에 객체로 인자를 전달하면서 path와 검색어를 전달하고\n        // 그것을 나중에 사용하려고 하고 custom hook을 이용하여 재활용함\n        console.log(queryDefault)\n        navigate({ pathname: `/user/products/read/${num}`, search: queryDefault })\n    }\n\n    const moveToTourRead = (num) => {\n        // 조회로 이동, 여기에서 navigate에 객체로 인자를 전달하면서 path와 검색어를 전달하고\n        // 그것을 나중에 사용하려고 하고 custom hook을 이용하여 재활용함\n        console.log(queryDefault)\n        navigate({ pathname: `/user/tours/read/${num}`, search: queryDefault })\n    }\n    const moveToProductReadNU = (num) => {\n        // 조회로 이동, 여기에서 navigate에 객체로 인자를 전달하면서 path와 검색어를 전달하고\n        // 그것을 나중에 사용하려고 하고 custom hook을 이용하여 재활용함\n        console.log(queryDefault)\n        navigate({ pathname: `/products/read/${num}`, search: queryDefault })\n    }\n\n    const moveToTourReadNU = (num) => {\n        // 조회로 이동, 여기에서 navigate에 객체로 인자를 전달하면서 path와 검색어를 전달하고\n        // 그것을 나중에 사용하려고 하고 custom hook을 이용하여 재활용함\n        console.log(queryDefault)\n        navigate({ pathname: `/tours/read/${num}`, search: queryDefault })\n    }\n    const moveToReadProductFromMain = (num) => {\n        // 조회로 이동, 여기에서 navigate에 객체로 인자를 전달하면서 path와 검색어를 전달하고\n        // 그것을 나중에 사용하려고 하고 custom hook을 이용하여 재활용함\n        console.log(queryDefault)\n        \n        navigate({ pathname: `/products/read/${num}`, search: queryDefault }) \n    }\n\n     const moveToReadTourFromMain = (num) => {\n        // 조회로 이동, 여기에서 navigate에 객체로 인자를 전달하면서 path와 검색어를 전달하고\n        // 그것을 나중에 사용하려고 하고 custom hook을 이용하여 재활용함\n        console.log(queryDefault)\n        \n        navigate({ pathname: `/tours/read/${num}`, search: queryDefault }) \n    }\n\n    //여기에서 정의된 함수 객체를 컴포넌트에서 반환하므로 사용하는 곳에서 destructuring해서 호출가능함\n    return { moveToList, moveToModify, page, size, moveToProductRead, moveToTourRead, moveToProductReadNU, moveToTourReadNU, refresh, navigate, moveToReadProductFromMain,moveToReadTourFromMain }\n}\nexport default useCustomMove","import React, { useEffect, useRef, useState } from 'react'\nimport { getOne, putOne, deleteOne } from '../../api/productsApi'\nimport FetchingModal from '../common/FetchingModal'\nimport { API_SERVER_HOST } from '../../api/reviewApi'\nimport useCustomMove from '../../hooks/useCustomMove'\nimport ResultModal from '../common/ResultModal'\n\nconst host = API_SERVER_HOST\n\nconst initState = {\n    pno: 0,\n    pname: '',\n    pdesc: '',\n    pprice: 0,\n    uploadFileNames: []\n}\n\nconst ModifyComponent = ({ pno }) => {\n    const [product, setProduct] = useState(initState)\n    const [fetching, setFetching] = useState(false)\n    const [result, setResult] = useState(null)\n    const { moveToProductRead, moveToList, page, size } = useCustomMove()\n    const uploadRef = useRef()\n\n    useEffect(() => {\n        setFetching(true)\n        getOne(pno).then(data => {\n            setProduct(data)\n            setFetching(false)\n        })\n    }, [pno])\n\n    // p286 이벤트 처리\n    const handleChangeProduct = (e) => {\n        product[e.target.name] = e.target.value\n        setProduct({ ...product })\n    }\n\n    // p289 기존 이미지 삭제\n    const deleteOldImages = (imageName) => {\n        const resultFileNames = product.uploadFileNames.filter(\n            fileName => fileName !== imageName)\n        product.uploadFileNames = resultFileNames\n\n        setProduct({ ...product })\n    }\n\n    // p290 이미지 추가 및 수정 submit\n    const handleClickModify = () => {\n        const files = uploadRef.current.files\n        const formData = new FormData()\n\n        for (let i = 0; i < files.length; i++) {\n            formData.append(\"files\", files[i]);\n        }\n\n        // other Data\n        formData.append(\"pname\", product.pname)\n        formData.append(\"pdesc\", product.pdesc)\n        formData.append(\"price\", product.pprice)\n        formData.append(\"delFlag\", product.delFlag)\n\n        for (let i = 0; i < product.uploadFileNames.length; i++) {\n            formData.append(\"uploadFileNames\", product.uploadFileNames[i]);\n        }\n\n        // fetching\n        setFetching(true)\n        // 수정 처리\n        putOne(pno, formData).then(data => {\n            setResult('Modified')\n            setFetching(false)\n        })\n\n    }\n\n    const handleClickDelete = () => {\n        setFetching(true)\n        deleteOne(pno).then(data => {\n            setResult('Deleted')\n            setFetching(false)\n        })\n    }\n\n    const closeModal = () => {\n        if (result === 'Modified') {\n            moveToProductRead(pno)\n        } else if (result === 'Deleted') {\n            // moveToList({ page: 1 })\n            moveToList({ page, size })\n        }\n        setResult(null)\n    }\n\n    return (\n        <div className='border-2 border-sky-200 mt-10 m-2 p-4'>\n            {fetching ? <FetchingModal /> : <></>}\n            {result ? <ResultModal\n                title={`${result}`}\n                content={'정상적으로 처리되었습니다.'}\n                callbackFn={closeModal}\n            /> : <></>}\n            <div className='flex justify-center'>\n                <div className='relative mb-4 flex w-full flex-wrap items-stretch'>\n                    <div className='w-1/5 p-6 text-right font-bold'>Product Name</div>\n                    <input className='w-4/5 p-6 rounded-r border border-solid border-neutral-300 shadow-md'\n                        name='pname'\n                        type={'text'}\n                        value={product.pname}\n                        onChange={handleChangeProduct}></input>\n                </div>\n            </div>\n            <div className='flex justify-center'>\n                <div className='relative mb-4 flex w-full flex-wrap items-stretch'>\n                    <div className='w-1/5 p-6 text-right font-bold'>DESC</div>\n                    <textarea className='w-4/5 p-6 rounded-r border border-solid border-neutral-300 shadow-md resize-y'\n                        name='pdesc'\n                        rows='4'\n                        onChange={handleChangeProduct}\n                        value={product.pdesc}></textarea>\n                </div>\n            </div>\n            <div className='flex justify-center'>\n                <div className='relative mb-4 flex w-full flex-wrap items-stretch'>\n                    <div className='w-1/5 p-6 text-right font-bold'>Price</div>\n                    <input className='w-4/5 p-6 rounded-r border border-solid border-neutral-300 shadow-md'\n                        name='price'\n                        type={'number'}\n                        value={product.pprice}\n                        onChange={handleChangeProduct}></input>\n                </div>\n            </div>\n            <div className='flex justify-center'>\n                <div className='relative mb-4 flex w-full flex-wrap items-stretch'>\n                    <div className='w-1/5 p-6 text-right font-bold'>Delete</div>\n                    <select className='w-4/5 p-6 rounded-r border border-solid border-neutral-300 shadow-md'\n                        name='delFlag'\n                        value={product.delFlag}\n                        onChange={handleChangeProduct}>\n                        <option value={false}>사용</option>\n                        <option value={true}>삭제</option>\n                    </select>\n                </div>\n            </div>\n            <div className='flex justify-center'>\n                <div className='relative mb-4 flex w-full flex-wrap items-stretch'>\n                    <div className='w-1/5 p-6 text-right font-bold'>Files</div>\n                    <input className='w-4/5 p-6 rounded-r border border-solid border-neutral-300 shadow-md'\n                        ref={uploadRef}\n                        multiple={true}\n                        type={'file'}></input>\n                </div>\n            </div>\n            <div className='flex justify-center'>\n                <div className='relative mb-4 flex w-full flex-wrap items-stretch'>\n                    <div className='w-1/5 p-6 text-right font-bold'>Images</div>\n                    <div className='w-4/5 justify-center flex flex-wrap items-start'>\n                        {product.uploadFileNames.map((imgFile, i) =>\n                            <div className='flex justify-center flex-col w-1/3 m-1 align-baseline' key={i}>\n                                <button className='bg-blue-500 text-3xl text-white'\n                                    onClick={() => deleteOldImages(imgFile)}>Delete</button>\n                                <img src={`${host}/api/products/view/s_${imgFile}`} alt='img' />\n                            </div>\n                        )}</div>\n                </div>\n            </div>\n            <div className='flex justify-end p-4'>\n                <button type='button' className='inline-block rounded p-4 m-2 text-xl w-32 text-white bg-red-500'\n                    onClick={handleClickDelete}>Delete</button>\n                <button type='button' className='inline-block rounded p-4 m-2 text-xl w-32 text-white bg-orange-500'\n                    onClick={handleClickModify}>Modify</button>\n                <button type='button' className='rounded p-4 m-2 text-xl w-32 text-white bg-blue-500'\n                    onClick={() => moveToList({ page, size })}>List</button>\n            </div>\n        </div>\n    );\n}\n\nexport default ModifyComponent","import React from 'react'\nimport ModifyComponent from '../../components/products/ModifyComponent'\nimport { useParams } from 'react-router-dom'\n\nconst ModifyPage = () => {\n\n  const { pno } = useParams()\n\n  return (\n    <div className='p-4 w-full bg-white'>\n      <div className='text-3xl font-extrabold'>\n        Products Modify Page\n\n      </div>\n      <ModifyComponent pno={pno} />\n    </div>\n  )\n}\n\nexport default ModifyPage"],"names":["host","API_SERVER_HOST","postAdd","async","jwtAxios","post","product","headers","data","getList","page","size","keyword","type","category","_ref","get","params","error","getProductsByCategory","_ref2","console","getProductCategories","message","getOne","pno","putOne","put","deleteOne","delete","getOrderInfo","postOrderInfo","log","orderInfo","res","_error$response","_error$response$data","Error","response","postPayInfo","orderInfoWithOrderId","impUid","_error$response2","_error$response2$data","getTopSellingProducts","limit","arguments","length","undefined","FetchingModal","_jsx","className","children","title","content","callbackFn","onClick","_jsxs","getNum","param","defaultValue","parseInt","useCustomMove","navigate","useNavigate","refresh","setRefresh","useState","queryParams","useSearchParams","queryDefault","createSearchParams","toString","moveToList","pageParam","queryStr","pageNum","sizeNum","pathname","search","moveToModify","num","moveToProductRead","moveToTourRead","moveToProductReadNU","moveToTourReadNU","moveToReadProductFromMain","moveToReadTourFromMain","initState","pname","pdesc","pprice","uploadFileNames","setProduct","fetching","setFetching","result","setResult","uploadRef","useRef","useEffect","then","handleChangeProduct","e","target","name","value","_Fragment","ResultModal","closeModal","onChange","rows","delFlag","ref","multiple","map","imgFile","i","imageName","resultFileNames","filter","fileName","deleteOldImages","src","alt","handleClickDelete","handleClickModify","files","current","formData","FormData","append","ModifyPage","useParams","ModifyComponent"],"sourceRoot":""}