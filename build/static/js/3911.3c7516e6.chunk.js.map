{"version":3,"file":"static/js/3911.3c7516e6.chunk.js","mappings":"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","sources":["components/admin/AdminOrderComponents.js","pages/admin/AdminOrder.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  Table,\n  Button,\n  Card,\n  Drawer,\n  Space,\n  Input,\n  Select,\n  message,\n} from 'antd';\nimport { SearchOutlined } from '@ant-design/icons';\nimport { fetchOrders } from '../../api/AdminApi';\n\nconst { Option } = Select;\n\n// const initState = {\n//   dtoList: [],\n//   pageNumList: [],\n//   pageRequestDTO: null,\n//   prev: false,\n//   next: false,\n//   totalCount: 0,\n//   prevPage: 0,\n//   nextPage: 0,\n//   totalPage: 0,\n//   current: 1,\n// };\n\nconst AdminOrderComponents = () => {\n  const [orders, setOrders] = useState([]);\n  const [filteredOrders, setFilteredOrders] = useState([]);\n  const [selectedOrder, setSelectedOrder] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [drawerVisible, setDrawerVisible] = useState(false);\n  const [searchType, setSearchType] = useState('all');\n  const [searchValue, setSearchValue] = useState('');\n\n  // Fetch order data from API\n  const loadOrders = async () => {\n    setLoading(true);\n    try {\n      const data = await fetchOrders();\n      setOrders(data);\n      setFilteredOrders(data);\n    } catch (error) {\n      message.error('주문 정보를 불러오는데 실패했습니다.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadOrders();\n  }, []);\n\n  // Handle Search and Filter\n  useEffect(() => {\n    const filtered = orders.filter((item) => {\n      const lowerValue = searchValue.toLowerCase();\n\n      // All Fields Search\n      const matchesAllFields =\n        `${item.orderId}`.toLowerCase().includes(lowerValue) ||\n        `${item.firstname} ${item.lastname}`.toLowerCase().includes(lowerValue) ||\n        item.porderItems.some((order) =>\n          order.pname.toLowerCase().includes(lowerValue)\n        );\n\n      // Specific Field Search\n      const matchesSpecificField =\n        searchType === 'ProductOrderId'\n          ? `${item.orderId}`.toLowerCase().includes(lowerValue)\n          : searchType === 'customerName'\n            ? `${item.firstname} ${item.lastname}`.toLowerCase().includes(lowerValue)\n            : searchType === 'productName'\n              ? item.porderItems.some((order) =>\n                order.pname.toLowerCase().includes(lowerValue)\n              )\n              : false;\n\n      return searchType === 'all' ? matchesAllFields : matchesSpecificField;\n    });\n\n    setFilteredOrders(filtered);\n  }, [searchValue, searchType, orders]);\n\n  const columns = [\n    {\n      title: '주문 번호',\n      dataIndex: 'orderId',\n      key: 'orderId',\n    },\n    {\n      title: '고객명',\n      dataIndex: 'firstname',\n      key: 'firstname',\n      render: (_, record) => `${record.firstname} ${record.lastname}`,\n    },\n    {\n      title: '상품명',\n      dataIndex: 'porderItems',\n      key: 'productName',\n      render: (porderItems) => porderItems.map((item) => item.pname).join(', '),\n    },\n    {\n      title: '총 금액',\n      dataIndex: 'totalPrice',\n      key: 'totalPrice',\n      render: (price) => `₩${price.toLocaleString()}`,\n    },\n    {\n      title: '작업',\n      key: 'action',\n      render: (_, record) => (\n        <Space>\n          <Button\n            onClick={() => {\n              setSelectedOrder(record);\n              setDrawerVisible(true);\n            }}\n          >\n            상세정보\n          </Button>\n        </Space>\n      ),\n    },\n  ];\n\n  return (\n    <div className=\"p-8 bg-gray-100\">\n      <Card style={{ marginBottom: '16px' }}>\n        <Space>\n          <Select\n            defaultValue=\"all\"\n            style={{\n              width: 150,\n              height: 34,\n              display: 'inline-flex',\n              alignItems: 'center',\n            }}\n            onChange={(value) => setSearchType(value)}\n          >\n            <Option value=\"all\">전체</Option>\n            <Option value=\"productOrderId\">주문 번호</Option>\n            <Option value=\"customerName\">고객명</Option>\n            <Option value=\"productName\">상품명</Option>\n          </Select>\n\n          <Input\n            placeholder=\"검색어를 입력하세요\"\n            prefix={<SearchOutlined />}\n            onChange={(e) => setSearchValue(e.target.value)}\n            style={{\n              width: 230,\n              height: 34,\n              display: 'inline-flex',\n              alignItems: 'center',\n              verticalAlign: 'middle',\n            }}\n          />\n        </Space>\n      </Card>\n\n      <Table\n        columns={columns}\n        dataSource={filteredOrders}\n        rowKey=\"orderId\"\n        loading={loading}\n      />\n\n      <Drawer\n        title=\"주문 상세 정보\"\n        placement=\"right\"\n        onClose={() => setDrawerVisible(false)}\n        visible={drawerVisible}\n        width={400}\n      >\n        {selectedOrder && (\n          <div>\n            <p>\n              <strong>주문 번호:</strong> {selectedOrder.orderId}\n            </p>\n            <p>\n              <strong>고객명:</strong> {selectedOrder.firstname} {selectedOrder.lastname}\n            </p>\n            <p>\n              <strong>연락처:</strong> {selectedOrder.phoneNumber}\n            </p>\n            <p>\n              <strong>국가:</strong> {selectedOrder.country}\n            </p>\n            <p>\n              <strong>총 금액:</strong> ₩{selectedOrder.totalPrice.toLocaleString()}\n            </p>\n\n            <p>\n              <strong>주문 상품:</strong>\n            </p>\n            <ul>\n              {selectedOrder.porderItems.map((item, idx) => (\n                <li key={idx}>\n                  {item.pname} - ₩{item.pprice.toLocaleString()} , {item.pqty} 개\n                </li>\n              ))}\n            </ul>\n          </div>\n        )}\n      </Drawer>\n    </div>\n  );\n};\n\nexport default AdminOrderComponents;\n","import React from 'react'\nimport AdminOrderComponents from '../../components/admin/AdminOrderComponents'\n\nconst AdminOrderPage = () => {\n    return (\n        <div className='w-full'>\n            <AdminOrderComponents />\n        </div>\n    )\n}\n\nexport default AdminOrderPage"],"names":["Option","Select","AdminOrderComponents","orders","setOrders","useState","filteredOrders","setFilteredOrders","selectedOrder","setSelectedOrder","loading","setLoading","drawerVisible","setDrawerVisible","searchType","setSearchType","searchValue","setSearchValue","useEffect","async","data","fetchOrders","error","message","loadOrders","filtered","filter","item","lowerValue","toLowerCase","matchesAllFields","orderId","includes","firstname","lastname","porderItems","some","order","pname","matchesSpecificField","columns","title","dataIndex","key","render","_","record","map","join","price","toLocaleString","_jsx","Space","children","Button","onClick","_jsxs","className","Card","style","marginBottom","defaultValue","width","height","display","alignItems","onChange","value","Input","placeholder","prefix","SearchOutlined","e","target","verticalAlign","Table","dataSource","rowKey","Drawer","placement","onClose","visible","phoneNumber","country","totalPrice","idx","pprice","pqty","AdminOrderPage"],"sourceRoot":""}