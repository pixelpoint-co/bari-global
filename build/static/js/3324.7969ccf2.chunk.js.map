{"version":3,"file":"static/js/3324.7969ccf2.chunk.js","mappings":"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","sources":["api/nuTourApi.js","api/tourApi.js","components/cartAndReservation/ReservationItemComponent.js","components/menus/ReservationComponent.js","components/review/ReviewModal.js","components/review/ReviewsSection.js","components/tours/TourDetails.js","components/tours/TourReadComponent.js","hooks/useCustomReservation.js","hooks/useCustomTourFav.js"],"sourcesContent":["import axios from \"axios\";\nimport { API_SERVER_HOST } from \"./reviewApi\";\n\nconst host = `${API_SERVER_HOST}/api/tours`;\n\n//서버에서 목록데이터 가져옴\nexport const getListTNU = async ({ page, size = 9, keyword = \"\", type = \"t\", category = \"\" }) => {\n    try {\n        console.log(\"API params:\", { page, size, keyword, type, category });\n        const res = await axios.get(`${host}/list`, {\n            params: {\n              page,\n              size: 9,\n              keyword, // Search keyword\n                type,\n              category  // Search type\n            },\n        });\n        console.log(\"API response:\", res.data);\n        return res.data;\n    } catch (error) {\n        console.error(\"API Error:\", error.message);\n        throw error;\n    }\n};\n\nexport const getTopReservedToursNU = async (limit) => {\n  try {\n    const response = await axios.get(`${host}/top`, { params: { limit } });\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching top reserved tours:\", error);\n    throw error;\n  }\n};\n\nexport const getTourCategoriesTNU = async () => {\n    try {\n      const response = await axios.get(`${host}/categories`);\n      return response.data;\n    } catch (error) {\n      console.error(\"Error fetching tour categories:\", error.message);\n      throw error;\n    }\n  };\n\n//특정 상품 데이터 조회\nexport const getOneTNU = async (tno) => {\n    const res = await axios.get(`${host}/${tno}`)\n    return res.data;\n}\n\nexport const getAvailableCapacity = async (tno,selectedDate) => {\n  const res = await axios.get(`${host}/available`,{ params: { tno, selectedDate } });\n  return res.data;\n};\n","import jwtAxios from \"../util/jwtUtil\";\nimport { API_SERVER_HOST } from \"./reviewApi\";\n\nconst host = `${API_SERVER_HOST}/api/user/tours`;\n\n// Function to fetch the list of tours with pagination and search functionality\nexport const getList = async ({ page, size = 9, keyword = \"\", type = \"t\", category = \"\" }) => {\n    try {\n        console.log(\"API params:\", { page, size, keyword, type, category });\n        const res = await jwtAxios.get(`${host}/list`, {\n            params: {\n              page,\n              size: 9,\n              keyword, // Search keyword\n                type,\n              category  // Search type\n            },\n        });\n        console.log(\"API response:\", res.data);\n        return res.data;\n    } catch (error) {\n        console.error(\"API Error:\", error.message);\n        throw error;\n    }\n};\n\nexport const getTopReservedTours = async (limit) => {\n  try {\n    const response = await jwtAxios.get(`${host}/top`, { params: { limit } });\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching top reserved tours:\", error);\n    throw error;\n  }\n};\n\nexport const getTourCategories = async () => {\n  try {\n    const response = await jwtAxios.get(`${host}/categories`);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching tour categories:\", error.message);\n    throw error;\n  }\n};\n\n// Add remaining tour API functions below\n\n// Register a new tour\nexport const postAdd = async (tour) => {\n  const header = { headers: { \"Content-Type\": \"multipart/form-data\" } };\n  const res = await jwtAxios.post(`${host}/`, tour, header);\n  return res.data;\n};\n\n// Retrieve a specific tour by ID\nexport const getOne = async (tno) => {\n  const res = await jwtAxios.get(`${host}/${tno}`);\n  return res.data;\n};\n\n// Update a specific tour\nexport const putOne = async (tno, tour) => {\n  const header = { headers: { \"Content-Type\": \"multipart/form-data\" } };\n  const res = await jwtAxios.put(`${host}/${tno}`, tour, header);\n  return res.data;\n};\n\n// Delete a specific tour\nexport const deleteOne = async (tno) => {\n  const res = await jwtAxios.delete(`${host}/${tno}`);\n  return res.data;\n};\n\n// book : 유저의 booking정보를 서버로 보냄\nexport const postBookInfo = async (filteredBookInfo) => {\n  console.log(\"filteredBookInfo:\", filteredBookInfo);\n  const headers = { \"Content-Type\": \"application/json\" };\n\n  try {\n    const res = await jwtAxios.post(`${host}/orders`, filteredBookInfo, {\n      headers,\n    });\n    return res.data;\n  } catch (error) {\n    throw new Error(\n      error.response?.data?.message || \"Failed to Post order info\"\n    );\n  }\n};\n\n// payment: 유저의 결제 정보를 서버로 보냄 , impUid포함한 정보.\nexport const postPayInfo = async (orderInfoWithOrderId, impUid) => {\n  console.log(impUid);\n  const headers = { \"Content-Type\": \"application/json\" };\n\n  try {\n    const res = await jwtAxios.post(\n      `${host}/payment/${impUid}`,\n      orderInfoWithOrderId,\n      { headers }\n    );\n    return res.data;\n  } catch (error) {\n    throw new Error(\n      error.response?.data?.message || \"Failed to Post payment info\"\n    );\n  }\n};\n\n","import React from 'react';\nimport { API_SERVER_HOST } from '../../api/reviewApi';\nimport { DeleteOutlined } from \"@ant-design/icons\";\nimport { Link } from 'react-router-dom';\n\nconst host = API_SERVER_HOST;\n\nconst ReservationItemComponent = ({ rino, tname, tprice, tdate, tno, tqty, tfiles, changeReservation, email,availableCapacity}) => {\n    console.log(\"여기는 Reservation Items\");\n\n\n    const handleClickQty = (amount) => {\n        // const newQty = tqty + amount;\n        \n        // // 수량이 최대 인원수를 초과하지 않도록 제한\n        // if (newQty > availableCapacity || newQty < 0) return; \n\n        changeReservation({ email, rino, tno, tdate, tqty: tqty + amount , availableCapacity });\n    };\n\n \n\n    return (\n        <div key={rino} className=\"bg-white shadow-md rounded-lg p-5 mb-5 transition duration-300 hover:shadow-xl\">\n            {/* Title and Delete Button */}\n            <div className=\"flex justify-between items-center mb-4\">\n                <div className=\"text-gray-900 text-lg font-semibold\">{tname}</div>\n                <button\n                    className=\"flex items-center space-x-2 px-2 py-1 bg-red-100 text-red-500 rounded-md hover:bg-red-200 transition-all duration-200\"\n                    onClick={() => handleClickQty(-1 * tqty)}\n                >\n                    <DeleteOutlined className=\"text-lg\" />\n                </button>\n            </div>\n\n            {/* Image and Date Side-by-Side */}\n            <div className=\"flex items-start space-x-4 mb-4\">\n                <Link to={`/user/tours/read/${tno}?page=1&size=10`} className=\"overflow-hidden rounded-md shadow-sm flex-1\">\n                    <img className=\"w-full h-20 object-cover rounded-md\" src={`${host}/api/tours/view/s_${tfiles}`} alt={tname} />\n                </Link>\n                <div className=\"flex flex-col justify-center flex-1\">\n                    <span className=\"text-sm text-gray-600 font-semibold mb-1\">📅 Date</span>\n                    <span className=\"text-gray-900 text-md font-bold bg-gray-100 p-2 rounded-md text-center\">{tdate}</span>\n                </div>\n            </div>\n\n            {/* Quantity Selection */}\n            <div>\n                <label className=\"block text-gray-700 font-medium mb-1\">How Many Participants?</label>\n                <p className=\"text-xs text-gray-500 mb-3\">Add your participants below and get ready for an unforgettable experience!</p>\n\n                <div className=\"flex items-center justify-between bg-gray-50 border border-gray-300 rounded-md p-2 mb-4\">\n                    <span className=\"text-gray-700 text-sm font-semibold\">Adult</span>\n                    <div className=\"flex items-center space-x-3\">\n                        <button\n                            onClick={() => handleClickQty(-1)}\n                            className=\"w-8 h-8 px-3 py-1 text-gray-600 bg-gray-200 rounded-md hover:bg-gray-300 transition duration-200\"\n                        >\n                            -\n                        </button>\n                        <span className=\"text-gray-800 font-semibold\">{tqty}</span>\n                        <button\n                            onClick={() => handleClickQty(1)}\n                            disabled={tqty >= availableCapacity} // 최대 인원 수에 도달하면 비활성화\n                            className={`px-3 py-1 rounded-md ${\n                                tqty >= availableCapacity ? \"bg-gray-300 text-gray-400\" : \"text-gray-700 bg-gray-200 hover:bg-gray-300\"\n                            }`}\n                        >\n                            +\n                        </button>\n\n                       \n                    </div>\n                </div>\n            </div>\n\n            {/* Price Display */}\n            <div className=\"flex justify-end p-2 border-t border-gray-200 mt-4\">\n                <div className=\"text-lg font-bold text-gray-900\">₩{tqty * tprice}</div>\n            </div>\n        </div>\n    );\n};\n\nexport default ReservationItemComponent;\n","import useCustomLogin from \"../../hooks/useCustomLogin\";\nimport { useEffect, useMemo } from \"react\";\nimport useCustomReservation from \"../../hooks/useCustomReservation\";\nimport { SolutionOutlined} from \"@ant-design/icons\";\nimport ReservationItemComponent from \"../cartAndReservation/ReservationItemComponent\";\nimport { useNavigate } from \"react-router-dom\";\n\n\nconst ReservationComponent = () => {\n    const { isLogin, loginState } = useCustomLogin();\n    const { refreshReservation, reservationItems, changeReservation } = useCustomReservation();\n    const navigate = useNavigate();\n\n    const total = useMemo(() => {\n        let total = 0;\n        if (reservationItems.length === 0) { //토큰 에러 조건 제외\n            return total;\n        } else {\n            for (const titem of reservationItems) {\n                total += titem.tprice * titem.tqty;\n            }\n            return total;\n        }\n    }, [reservationItems]);\n\n    useEffect(() => {\n        if (isLogin) {\n            refreshReservation();\n        }\n\n        console.log(reservationItems)\n    }, [isLogin]);\n\n    const handleClickBook = () =>{\n        console.log(reservationItems.length)\n        if(reservationItems.length !== 0){\n            navigate('/user/tours/book') \n        }else{\n            alert(\"The reservation is empty. Please select at least one tour.\")      \n        }\n    }\n\n    return (\n        <div className=\"flex flex-col items-center w-full px-4\">\n            {isLogin ? (\n                <div className=\"w-full max-w-lg bg-white p-6 rounded-lg shadow-lg\">\n                    {/* Header */}\n                    <div className=\"mb-6 border-b pb-4 flex items-center space-x-2\">\n                         <SolutionOutlined className=\"text-gray-500 text-2xl\" />\n                        <h2 className=\"text-xl sm:text-2xl font-bold text-gray-800\">Reservation Options</h2>\n                    </div>\n\n                    {/* Reservation Items */}\n                    <div className=\"mb-6 space-y-4\">\n                        {reservationItems.length > 0 ? (\n                            reservationItems.map((titem) => (\n                                <ReservationItemComponent\n                                    email={loginState.email}\n                                    {...titem}\n                                    key={titem.rino}\n                                    changeReservation={changeReservation}\n                                />\n                            ))\n                        ) : (\n                            <p className=\"text-center text-gray-500\">Your reservation is empty.</p>\n                        )}\n                    </div>\n\n                    {/* Total Amount */}\n                    <div className=\"flex justify-between items-center mt-6 pt-4 border-t\">\n                        {total && (\n                            <p className=\"text-lg sm:text-xl font-bold text-gray-800\">\n                                Total: ₩{total.toLocaleString()}\n                            </p>\n                        )}\n                        <p className=\"text-gray-500\">{reservationItems.length} items</p>\n                    </div>\n\n                    {/* Book Now Button */}\n                    <div className=\"text-center mt-6\">\n                        <button className=\"text-white font-semibold py-2 px-6 rounded-lg bg-stone-400 hover:bg-stone-600 transition duration-300 shadow-md w-full sm:w-auto\"\n                            // onClick={()=> navigate('/user/tours/book')}\n                            onClick={handleClickBook}\n                        >\n                            Book now\n                        </button>\n                    </div>\n                </div>\n            ) : (\n                <p className=\"text-center text-gray-500 mt-6\">Please log in to see your reservation.</p>\n            )}\n\n        </div>\n    );\n};\n\nexport default ReservationComponent;\n","import React, { useState } from \"react\";\nimport { StarFilled, StarOutlined } from \"@ant-design/icons\";\nimport useCustomLogin from \"../../hooks/useCustomLogin\";\n\nconst ReviewModal = ({ selectedReview, closeEditModal, deleteOne ,putOne}) => {\n  console.log(\"selectedReview.trid\",selectedReview.trid)\n  const { loginState } = useCustomLogin();\n  const [isEditMode, setIsEditMode] = useState(false);\n  const [editData, setEditData] = useState({\n    prid: selectedReview.prid,\n    trid: selectedReview.trid,\n    title: selectedReview.title,\n    reviewContent: selectedReview.reviewContent,\n    rating: selectedReview.rating,\n  });\n\n  if (!selectedReview) return null;\n\n  const handleClickDelete = (rid) => {\n    console.log(\"rid\" ,rid)\n    deleteOne(rid).then(() => {\n      closeEditModal();\n    });\n  };\n\n  // 수정 핸들러\n  const handleClickModify = () => {\n    setIsEditMode(true); \n  };\n\n  // 수정 폼 제출 핸들러\n  const handleSubmitEdit = () => {\n    console.log(\"editData.trid\",editData.trid)\n    console.log(editData.reviewContent)\n    putOne(editData).then(() => {\n      closeEditModal();\n    });\n  };\n\n  // 입력값 핸들러\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setEditData((prev) => ({\n      ...prev,\n      [name]: value,\n    }));\n  };\n\n  // 평점 업데이트 핸들러\n  const handleRatingChange = (rating) => {\n    setEditData((prev) => ({\n      ...prev,\n      rating,\n    }));\n  };\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n      <div className=\"relative bg-white p-6 rounded-lg shadow-lg w-full max-w-md\">\n         {selectedReview.email === loginState.email && (\n                <div className=\"absolute top-5 right-5 px-3 py-1 text-sm font-semibold text-white bg-teal-500 rounded-lg shadow-md\">\n                  My Review\n                </div>\n              )}\n        {!isEditMode ? (\n          <>\n            {/* 읽기 모드 */}\n            <div className=\" flex items-center mb-4\">\n              \n              <div className=\"bg-stone-400 text-white rounded-full w-12 h-12 flex items-center justify-center font-bold text-lg\">\n                {selectedReview.nickName[0]}\n              </div>\n              <div className=\"ml-4\">\n                <h3 className=\"text-lg font-semibold text-gray-800\">{selectedReview.nickName}</h3>\n                <p className=\"text-sm text-gray-500\">{selectedReview.dueDate}</p>\n                <p className=\"text-sm text-gray-500\">{selectedReview.itemName}</p>\n              </div>\n            </div>\n            <div className=\"flex items-center mb-4\">\n              {[1, 2, 3, 4, 5].map((star) => (\n                <span key={star}>\n                  {selectedReview.rating >= star ? (\n                    <StarFilled className=\"text-yellow-400 text-2xl\" />\n                  ) : (\n                    <StarOutlined className=\"text-gray-300 text-2xl\" />\n                  )}\n                </span>\n              ))}\n            </div>\n              <h4 className=\"text-xl font-semibold text-gray-800 mb-2\">{selectedReview.title}</h4>\n            <p className=\"bg-gray-50 p-4 rounded-lg border border-gray-200 text-gray-800 leading-relaxed\">\n              {selectedReview.reviewContent}\n            </p>\n            <div className=\"flex justify-end mt-6\">\n              {selectedReview.email === loginState.email && (\n                <>\n                  <button\n                    className=\"px-4 py-2 bg-yellow-400 text-white rounded-lg mr-2 hover:bg-yellow-500\"\n                    onClick={handleClickModify}\n                  >\n                    Modify\n                  </button>\n                  <button\n                    className=\"px-4 py-2 bg-stone-400 text-white rounded-lg mr-2 hover:bg-stone-500\"\n                    onClick={() => handleClickDelete(selectedReview.prid||selectedReview.trid)}\n                  >\n                    Delete\n                  </button>\n                </>\n              )}\n              <button\n                className=\"px-4 py-2 bg-gray-300 text-gray-800 rounded-lg hover:bg-gray-400\"\n                onClick={closeEditModal}\n              >\n                Close\n              </button>\n            </div>\n          </>\n        ) : (\n          <>\n            {/* 수정 모드 */}\n            <div className=\"flex items-center mb-4\">\n              <div className=\"bg-stone-400 text-white rounded-full w-12 h-12 flex items-center justify-center font-bold text-lg\">\n                {selectedReview.nickName[0]}\n              </div>\n              <div className=\"ml-4\">\n                <h3 className=\"text-lg font-semibold text-gray-800\">{selectedReview.nickName}</h3>\n                <p className=\"text-sm text-gray-500\">{selectedReview.itemName}</p>\n              </div>\n            </div>\n            <div className=\"flex flex-col items-center mb-4\">\n              <p className=\"text-gray-600 font-medium\">Update your rating:</p>\n              <div className=\"flex items-center\">\n                {[1, 2, 3, 4, 5].map((star) => (\n                  <span\n                    key={star}\n                    onClick={() => handleRatingChange(star)}\n                    className=\"cursor-pointer\"\n                  >\n                    {editData.rating >= star ? (\n                      <StarFilled className=\"text-yellow-400 text-2xl\" />\n                    ) : (\n                      <StarOutlined className=\"text-gray-300 text-2xl\" />\n                    )}\n                  </span>\n                ))}\n              </div>\n            </div>\n            <div className=\"flex flex-row justify-between mb-4\">\n            \n              <input\n                type=\"text\"\n                name=\"title\"\n                value={editData.title}\n                onChange={handleChange}\n                className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-yellow-500\"\n                placeholder=\"Enter title\"\n              />\n            </div>\n            <div className=\"mb-4\">\n              <textarea\n                name=\"reviewContent\"\n                value={editData.reviewContent}\n                onChange={handleChange}\n                className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-yellow-500\"\n                placeholder=\"Enter review content\"\n              />\n            </div>\n            <div className=\"flex justify-end mt-6\">\n              <button\n                className=\"px-4 py-2 bg-yellow-400 text-white rounded-lg mr-2 hover:bg-yellow-500\"\n                onClick={handleSubmitEdit}\n              >\n                Save\n              </button>\n              <button\n                className=\"px-4 py-2 bg-gray-300 text-gray-800 rounded-lg hover:bg-gray-400\"\n                onClick={() => setIsEditMode(false)}\n              >\n                Cancel\n              </button>\n            </div>\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ReviewModal;\n","import React, { useState } from 'react';\nimport { ChevronRight, ChevronLeft } from 'lucide-react';\nimport { StarFilled, StarOutlined } from '@ant-design/icons';\nimport { useNavigate } from 'react-router-dom';\nimport ReviewModal from './ReviewModal'; \nimport useCustomLogin from '../../hooks/useCustomLogin';\n\nconst ReviewsSection = ({ refresh,\n  setRefresh,\n  reviews,\n  putOne, \n  deleteOne }) => {\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const navigate = useNavigate();\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n  const [selectedReview, setSelectedReview] = useState(null); \n  const [isModalOpen, setIsModalOpen] = useState(false); \n  const { isLogin,loginState } = useCustomLogin();\n\n  console.log(reviews)\n  // Update layout on window resize\n  React.useEffect(() => {\n    const handleResize = () => setWindowWidth(window.innerWidth);\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  const reviewsPerSlide = windowWidth >= 1024 ? 2 : 1; // 2 reviews on large screens, 1 on small screens\n\n  const handleNavigation = () => {\n    navigate('/mypage/review'); \n};\n\n  const nextSlide = () => {\n    setCurrentIndex((prevIndex) =>\n      prevIndex + reviewsPerSlide < reviews.length ? prevIndex + reviewsPerSlide : 0\n    );\n  };\n\n  const prevSlide = () => {\n    setCurrentIndex((prevIndex) =>\n      prevIndex - reviewsPerSlide >= 0 ? prevIndex - reviewsPerSlide : reviews.length - reviewsPerSlide\n    );\n  };\n\n  const openModal = (review) => {\n    setSelectedReview(review);\n    setIsModalOpen(true);\n};\n\nconst closeModal = () => {\n    setSelectedReview(null);\n    setIsModalOpen(false);\n    setRefresh(!refresh)\n};\n\n  return (\n    <div className=\"mt-10 bg-gray-50 p-6 border border-gray-200 rounded-lg shadow-lg\">\n      <div className=\"flex justify-between items-center mb-6\">\n        <h2 className=\"text-xl font-bold text-gray-800\">What Customers Say About This Item</h2>\n        {isLogin?\n            (<button\n                className=\"px-4 py-2 text-gray-500 underline hover:text-gray-600\"\n                onClick={handleNavigation}\n            >\n                Go to Your Review List\n            </button>):''}\n      </div>\n\n      <div className=\"relative flex items-center\">\n        <button\n          className=\"absolute left-[-20px] z-10 bg-white border border-gray-300 rounded-full w-8 h-8 flex items-center justify-center shadow-md hover:bg-gray-100\"\n          onClick={prevSlide}\n        >\n          <ChevronLeft className=\"h-5 w-5 text-gray-700\" />\n        </button>\n\n        <div className=\"flex space-x-4 overflow-hidden w-full\">\n          {reviews &&reviews.slice(currentIndex, currentIndex + reviewsPerSlide).map((review) => (\n            <div\n              key={review.prid || review.trid}\n              className=\"relative bg-white rounded-lg shadow-md p-4 w-full lg:w-1/2 border border-gray-200\"\n              onClick={() => openModal(review)} \n            >\n              <div className=\"flex items-center mb-2\">\n                <div className=\"bg-stone-400 text-white rounded-full w-8 h-8 flex items-center justify-center font-bold\">\n                  {review.nickName[0]}\n                </div>\n                <div className=\"ml-3\">\n                  <h3 className=\"text-sm font-semibold text-gray-800\">{review.nickName}</h3>\n                  <p className=\"text-xs text-gray-500\">{review.dueDate}</p>\n                </div>\n              </div>\n              {isLogin && review.email === loginState.email && (\n                                <div className=\"absolute top-5 right-5 px-3 py-1 text-sm font-semibold text-white bg-teal-500 rounded-lg shadow-md\">\n                                My Review\n                                </div>\n                            )}\n              <div className=\"flex items-center\">\n                {[1, 2, 3, 4, 5].map((star) => (\n                  <span key={star}>\n                    {review.rating >= star ? (\n                      <StarFilled className=\"text-yellow-400 text-xl\" />\n                    ) : (\n                      <StarOutlined className=\"text-gray-300 text-xl\" />\n                    )}\n                  </span>\n                ))}\n              </div>\n              <h3 className=\"text-gray-800 leading-relaxed mb-2 font-semibold\">{review.title}</h3>\n              <p className=\"text-sm text-gray-700\">{review.reviewContent}</p>\n            </div>\n          ))}\n        </div>\n\n        <button\n          className=\"absolute right-[-20px] z-10 bg-white border border-gray-300 rounded-full w-8 h-8 flex items-center justify-center shadow-md hover:bg-gray-100\"\n          onClick={nextSlide}\n        >\n          <ChevronRight className=\"h-5 w-5 text-gray-700\" />\n        </button>\n      </div>\n      {isModalOpen && (\n                <ReviewModal\n                    selectedReview={selectedReview}\n                    closeEditModal={closeModal}\n                    putOne={putOne}\n                    deleteOne={deleteOne}\n                />\n            )}\n    </div>\n  );\n};\n\nexport default ReviewsSection;\n","import React from \"react\";\nimport { CalendarOutlined, CreditCardOutlined, ClockCircleOutlined, UserOutlined, AudioOutlined, AccessibilityOutlined } from \"@ant-design/icons\";\n\nconst TourDetails = () => {\n  \n    const details = [\n        { icon: <CalendarOutlined className=\"text-2xl text-blue-500\" />, title: \"Easy Cancellation\", description: \"Full refund if canceled up to 24 hours in advance\" },\n        { icon: <CreditCardOutlined className=\"text-2xl text-blue-500\" />, title: \"Reserve Now, Pay Later\", description: \"Keep your travel plans flexible. Reserve your spot now and pay later.\" },\n        { icon: <ClockCircleOutlined className=\"text-2xl text-blue-500\" />, title: \"Duration: 1.5 Hours\", description: \"Check availability to see start times.\" },\n        { icon: <UserOutlined className=\"text-2xl text-blue-500\" />, title: \"Guided Language\", description: \"English\" },\n        { icon: <AudioOutlined className=\"text-2xl text-blue-500\" />, title: \"Audio Guide Included\", description: \"Available in Spanish, Thai, Chinese, English, French, German, Indonesian, Italian, Arabic, Japanese, Norwegian\" },\n        { icon: <UserOutlined className=\"text-2xl text-blue-500\" />, title: \"Wheelchair Accessible\", description: \"\" }\n    ];\n    \n  \n\n  return (\n    <div className=\"space-y-4\">\n      {details.map((detail, index) => (\n        <div key={index} className=\"flex items-start space-x-4\">\n          {detail.icon}\n          <div>\n            <h3 className=\"text-lg font-semibold text-gray-800\">{detail.title}</h3>\n            <p className=\"text-gray-600\">{detail.description}</p>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default TourDetails;\n","import React, { useEffect, useState } from \"react\";\nimport { API_SERVER_HOST, getTourItemReview, putTourOne, deleteTourOne, } from \"../../api/reviewApi\";\nimport ReviewsSection from \"../review/ReviewsSection\";\nimport { HeartIcon, ShoppingCart } from \"lucide-react\";\nimport { Calendar, Popover, Badge } from \"antd\";\nimport { UserOutlined, CalendarOutlined, StarFilled, StarOutlined } from \"@ant-design/icons\";\nimport ReservationComponent from \"../menus/ReservationComponent\";\nimport useCustomReservation from \"../../hooks/useCustomReservation\";\nimport useCustomLogin from \"../../hooks/useCustomLogin\";\nimport { getOne } from \"../../api/tourApi\";\nimport TourDetails from \"./TourDetails\";\nimport useCustomTourFav from \"../../hooks/useCustomTourFav\";\nimport { getAvailableCapacity } from \"../../api/nuTourApi\";\n\nconst initState = {\n  tno: 0,\n  tname: \"\",\n  categoryName: \"\",\n  tdesc: \"\",\n  tprice: 0,\n  taddress: '',\n  uploadFileNames: [],\n  tdate: [],\n  maxCapacity: 0,\n  // availableCapacity: 0,\n};\n\nconst TourReadComponent = ({ tno }) => {\n  const [tour, setTour] = useState(initState);\n  const [selectedDate, setSelectedDate] = useState(\"\");\n  const [selectedQuantity, setSelectedQuantity] = useState(0);\n  const [currentImage, setCurrentImage] = useState(0);\n  const [cartVisible, setCartVisible] = useState(false);\n  const [detailsVisible, setDetailsVisible] = useState(false); // For toggling tour details\n  const { favItems, changeFav, refreshFav } = useCustomTourFav();\n  const { reservationItems, changeReservation } = useCustomReservation();\n  const [reviewAvg, setReviewAvg] = useState(0)\n  const [reviews, setReviews] = useState([]);\n  const [refresh, setRefresh] = useState(false)\n  const [availableCapacity, setAvailableCapacity] = useState(0);\n  const { loginState } = useCustomLogin();\n\n  console.log(reservationItems)\n\n  const calculateAverage = (reviews) => {\n    if (reviews.length === 0) return 0;\n    const sum = reviews.reduce((acc, review) => acc + review.rating, 0);\n    const avg = sum / reviews.length; \n    return Number(avg.toFixed(1));\n  };\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    getOne(tno).then((data) => {\n      setTour(data);\n    });\n\n    getTourItemReview(tno).then((reviews) => {\n      setReviews(reviews);\n      setReviewAvg(calculateAverage(reviews))\n    });\n  }, [tno, refresh]);\n\n  useEffect(() => {\n    if (selectedDate) {\n      setSelectedQuantity(0);\n      setCartVisible(false)\n      getAvailableCapacity(tno, selectedDate).then((data) => {\n        console.log(data)\n        setTour({ ...tour, availableCapacity: data })\n        setAvailableCapacity(data)\n      });\n    }\n  }, [selectedDate, tno]);\n\n  const calendarContent = (\n    <div style={{ width: 300 }}>\n      <Calendar\n        fullscreen={false}\n        onSelect={(e) => setSelectedDate(e.format(\"YYYY-MM-DD\"))} //문자열로 포맷\n        disabledDate={(current) =>\n          !tour.tdate.some(\n            (date) => date === current.format(\"YYYY-MM-DD\")\n          )\n        }\n      />\n      <div style={{ textAlign: \"center\", marginTop: 10, color: \"#888\" }}>\n        Only available dates can be selected\n      </div>\n    </div>\n  );\n\n  const handleAddToCart = () => {\n    if (availableCapacity === 0) {\n      alert(\"This tour is fully booked.\");\n      return;\n    }\n\n    if (!selectedDate || selectedQuantity <= 0) {\n      alert(\"Please select a valid date and quantity.\");\n      return;\n    }\n\n    const existingItem = reservationItems.find((item) => item.tno === tour.tno);\n\n    // 추가 가능 수량 계산 함수\n    const calculateMaxAddable = (capacity, currentQty) => capacity - currentQty;\n\n    // 장바구니 업데이트 함수\n    const updateCart = (quantity, date) => {\n      changeReservation({\n        email: loginState.email,\n        tno: tour.tno,\n        tqty: quantity,\n        tdate: date,\n      });\n      setCartVisible(true);\n    };\n\n    // 새로운 투어 추가\n    if (!existingItem) {\n      if (selectedQuantity > availableCapacity) {\n        alert(`You can only add up to ${availableCapacity} for this tour.`);\n        return;\n      }\n      updateCart(selectedQuantity, selectedDate);\n      return;\n    }\n\n    const currentQuantity = existingItem.tqty || 0;\n    const totalQuantity = currentQuantity + selectedQuantity;\n\n    // 같은 날짜의 경우\n    if (selectedDate === existingItem.tdate) {\n      const maxAddable = calculateMaxAddable(existingItem.availableCapacity, currentQuantity);\n\n      if (totalQuantity > existingItem.availableCapacity) {\n        if (maxAddable > 0) {\n          alert(`You can only add ${maxAddable} more of this tour.`);\n          updateCart(currentQuantity + maxAddable, selectedDate);\n        } else {\n          alert(`You already have the maximum quantity of ${existingItem.availableCapacity} in your cart.`);\n        }\n      } else {\n        updateCart(totalQuantity, selectedDate);\n      }\n    } else {\n      // 날짜 변경 처리\n      if (window.confirm(\"Would you like to change to a different date?\")) {\n        if (selectedQuantity > availableCapacity) {\n          alert(`You can only add up to ${availableCapacity} for the selected date.`);\n        } else {\n          updateCart(selectedQuantity, selectedDate);\n        }\n      }\n    }\n  };\n\n  const handleAddToFavorites = async () => {\n    if (!loginState.email) {\n      alert(\"Please log in to add favorites.\");\n      return;\n    }\n\n    const isAlreadyFavorite = favItems.some((item) => item.tno === tour.tno);\n    if (isAlreadyFavorite) {\n      alert(\"You already liked this tour!\");\n      return;\n    }\n\n    try {\n      await changeFav({ email: loginState.email, tno: tour.tno });\n      alert(\"Product added to favorites!\");\n      refreshFav();\n    } catch (error) {\n      console.error(\"Failed to add favorite:\", error);\n      alert(\"Could not add to favorites. Please try again.\");\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen py-12 px-4 sm:px-14 lg:px-20 lg:py-32 mt-20\">\n      <div className=\"flex flex-col lg:flex-row items-start space-y-8 lg:space-y-0 lg:space-x-8\">\n        {/* Left Section: Image Gallery */}\n        <div className=\"lg:flex-1\">\n          <div className=\"relative\">\n            <img\n              src={`${API_SERVER_HOST}/api/tours/view/${tour.uploadFileNames[currentImage]}`}\n              alt=\"Tour\"\n              className=\"w-full h-60 md:h-80 lg:h-[500px] object-contain\"\n            />\n            <div className=\"flex mt-4 space-x-2 overflow-x-auto\">\n              {tour.uploadFileNames.map((image, index) => (\n                <button\n                  key={index}\n                  onClick={() => setCurrentImage(index)}\n                  className={`w-16 h-16 md:w-20 md:h-20 overflow-hidden ${currentImage === index ? \"ring-2 ring-blue-500\" : \"\"\n                    }`}\n                >\n                  <img\n                    src={`${API_SERVER_HOST}/api/tours/view/${image}`}\n                    alt=\"Thumbnail\"\n                    className=\"w-full h-full object-cover\"\n                  />\n                </button>\n              ))}\n            </div>\n          </div>\n        </div>\n\n        {/* Right Section: Tour Details */}\n        <div className=\"lg:flex-1\">\n          <h1 className=\"text-3xl md:text-4xl font-light text-gray-900 mb-4\">\n            {tour.tname}\n          </h1>\n          <div className=\"flex items-center mb-4\">\n            {[...Array(5)].map((_, star) =>\n            (\n              <span key={star}>\n                {reviewAvg >= star + 1 ? (\n                  <StarFilled className=\"text-yellow-400 text-xl\" />\n                ) : (\n                  <StarOutlined className=\"text-gray-300 text-xl\" />\n                )}\n              </span>\n            )\n            )}\n            <span className=\"ml-2 text-gray-600\">({reviewAvg}) {reviews.length}  reviews</span>\n          </div>\n          <p className=\"text-xl md:text-2xl font-light text-gray-900 mb-6\">\n            ₩{tour.tprice.toLocaleString()}\n          </p>\n          <p className=\"text-gray-700 mb-2\"><strong>Tour Address:</strong> {tour.taddress}</p>\n          <p className=\"text-gray-700 mb-6\">{tour.tdesc}</p>\n\n          {/* Date and Quantity Selection */}\n          <div className=\"grid grid-cols-2 gap-4 mt-6\">\n            <div>\n              <label className=\"block text-gray-700 mb-2\">\n                <CalendarOutlined className=\"mr-2\" />\n                Date\n              </label>\n              <Popover content={calendarContent} trigger=\"click\">\n                <button className=\"w-full border rounded-lg p-3 text-left\">\n                  {selectedDate || \"Select a date\"}\n                </button>\n              </Popover>\n            </div>\n            <div>\n              <label className=\"block text-gray-700 mb-2\">\n                <UserOutlined className=\"mr-2\" />\n                Person\n              </label>\n              <input\n                type=\"number\"\n                min=\"0\"\n                max={availableCapacity}\n                value={selectedQuantity}\n                onChange={(e) => setSelectedQuantity(Number(e.target.value))}\n                className=\"w-full border rounded-lg p-3 text-center\"\n                placeholder=\"0\"\n              />\n            </div>\n          </div>\n\n          {/* 실제 예약 가능 인원 정보 */}\n          <div className=\"p-2 rounded-lg flex justify-end items-center space-x-3\">\n            <div className=\"text-sm text-gray-600 flex items-center\">\n              <span>Available</span>\n              <Badge\n                count={selectedDate ? availableCapacity > 0\n                  ? availableCapacity\n                  : \"Full\"\n                  : \"Select a Date\"\n                }\n                style={{\n                  backgroundColor: !selectedDate\n                    ? \"#d9d9d9\"\n                    : availableCapacity > 0\n                      ? \"#14b8a6\"\n                      : \"#ef4444\",\n                  color: \"white\",\n                  marginLeft: \"5px\",\n                }}\n              />\n            </div>\n            <div className=\"text-sm text-gray-600 flex items-center\">\n              <span>Max</span>\n              <Badge\n                count={tour.maxCapacity}\n                style={{\n                  backgroundColor: \"#3b82f6\",\n                  color: \"white\",\n                  marginLeft: \"5px\",\n                }}\n              />\n            </div>\n          </div>\n\n          {/* Action Buttons */}\n          <div className=\"flex flex-col md:flex-row space-y-4 md:space-y-0 md:space-x-4 mt-6\">\n            <button\n              onClick={handleAddToCart}\n              className=\"bg-stone-400 hover:bg-stone-600 text-white py-3 px-6 rounded-lg flex items-center justify-center\"\n            >\n              <CalendarOutlined className=\"mr-2\" />\n              Update Availability\n            </button>\n            <button\n              onClick={handleAddToFavorites}\n              className=\"flex-1 border text-gray-700 py-3 rounded-lg flex items-center justify-center hover:bg-gray-100\"\n            >\n              <HeartIcon className=\"mr-2 text-red-500\" />\n              Add to Favorites\n            </button>\n          </div>\n\n          {/* Tour Details Section */}\n          <div className=\"mt-10 bg-gray-100 p-6 rounded-lg\">\n            <div className=\"flex justify-between items-center\">\n              <h2 className=\"text-lg font-semibold text-gray-900\">\n                Tour Policies\n              </h2>\n              <button\n                onClick={() => setDetailsVisible(!detailsVisible)}\n                className=\"text-gray-500 hover:text-gray-700 text-2xl\"\n              >\n                {detailsVisible ? \"-\" : \"+\"}\n              </button>\n            </div>\n            {detailsVisible && <TourDetails />}\n          </div>\n        </div>\n      </div>\n\n      {/* Reservation Cart Button */}\n      <div className=\"fixed top-24 right-10\">\n        <Badge count={reservationItems.length} offset={[0, 10]}>\n          <button\n            onClick={() => setCartVisible(!cartVisible)}\n            className=\"bg-stone-400 hover:bg-stone-600 text-white p-3 rounded-full shadow-lg flex items-center justify-center\"\n          >\n            <ShoppingCart className=\"h-6 w-6\" />\n          </button>\n        </Badge>\n      </div>\n\n      {/* Reservation Drawer */}\n      <div\n        className={`z-50 fixed top-0 right-0 h-[70%] w-96 mt-40 p-6 overflow-auto transform ${cartVisible ? \"translate-x-0\" : \"translate-x-full\"\n          } transition-transform duration-300`}\n      >\n        <ReservationComponent />\n      </div>\n      {/* Reviews Section */}\n      <div className=\"mt-5\">\n        <ReviewsSection\n          refresh={refresh}\n          setRefresh={setRefresh}\n          reviews={reviews}\n          putOne={putTourOne}\n          deleteOne={deleteTourOne}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default TourReadComponent;\n","\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getReservationItemsAsync, postChangeReservationAsync } from '../slices/reservationSlice'\n\nconst useCustomReservation = () => {\n    const reservationItems = useSelector(state => state.reservationSlice)\n    const dispatch = useDispatch()\n\n    const refreshReservation = () => {\n      console.log(\"useCustomReservation: refresh\")\n         dispatch(getReservationItemsAsync())\n    }\n\n    const changeReservation = (param) => {\n        dispatch(postChangeReservationAsync(param))\n    }\n\n  return (\n    {reservationItems, refreshReservation, changeReservation}\n  )\n}\n\nexport default useCustomReservation","import { useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  getFavTourItemsAsync,\n  postChangeTourFavAsync,\n  deleteTourFavItemAsync,\n  deleteBulkTourFavItemAsync,\n} from \"../slices/favTourSlice\";\nimport useCustomLogin from \"../hooks/useCustomLogin\";\n\nconst useCustomTourFav = () => {\n  const { loginState } = useCustomLogin();\n  const email = loginState.email; \n  const favItems = useSelector((state) => state.favTour.items || []);\n  const dispatch = useDispatch();\n\n  const refreshFav = useCallback(() => {\n    dispatch(getFavTourItemsAsync(email)); // Pass email when refreshing favorites\n  }, [dispatch, email]);\n\n  const changeFav = useCallback(\n    async (favItem) => {\n      const isAlreadyFavorite = favItems.some(\n        (item) => item.tno === favItem.tno\n      );\n      if (isAlreadyFavorite) {\n        alert(\"This tour is already in your favorites!\");\n        return;\n      }\n      await dispatch(postChangeTourFavAsync(favItem));\n      refreshFav();\n    },\n    [dispatch, favItems, refreshFav]\n  );\n\n  const deleteFav = useCallback(\n    async (ftino) => {\n      await dispatch(deleteTourFavItemAsync(ftino));\n      refreshFav();\n    },\n    [dispatch, refreshFav]\n  );\n\n  const deleteBulkFav = useCallback(\n    (ftinoList) => {\n      dispatch(deleteBulkTourFavItemAsync(ftinoList)).then(() => refreshFav());\n    },\n    [dispatch, refreshFav]\n  );\n\n  return { favItems, refreshFav, changeFav, deleteFav, deleteBulkFav };\n};\n\nexport default useCustomTourFav;\n"],"names":["host","API_SERVER_HOST","getListTNU","async","page","size","keyword","type","category","_ref","console","log","res","axios","get","params","data","error","message","getTopReservedToursNU","limit","getTourCategoriesTNU","getOneTNU","tno","getAvailableCapacity","selectedDate","getList","jwtAxios","getTopReservedTours","getTourCategories","postAdd","post","tour","headers","getOne","putOne","put","deleteOne","delete","postBookInfo","filteredBookInfo","_error$response","_error$response$data","Error","response","postPayInfo","orderInfoWithOrderId","impUid","_error$response2","_error$response2$data","rino","tname","tprice","tdate","tqty","tfiles","changeReservation","email","availableCapacity","handleClickQty","amount","_jsxs","className","children","_jsx","onClick","DeleteOutlined","Link","to","src","alt","disabled","ReservationComponent","isLogin","loginState","useCustomLogin","refreshReservation","reservationItems","useCustomReservation","navigate","useNavigate","total","useMemo","length","titem","useEffect","SolutionOutlined","map","_createElement","ReservationItemComponent","key","toLocaleString","handleClickBook","alert","selectedReview","closeEditModal","trid","isEditMode","setIsEditMode","useState","editData","setEditData","prid","title","reviewContent","rating","handleChange","e","name","value","target","prev","_Fragment","nickName","itemName","star","handleRatingChange","StarFilled","StarOutlined","onChange","placeholder","handleSubmitEdit","then","dueDate","handleClickModify","handleClickDelete","rid","refresh","setRefresh","reviews","currentIndex","setCurrentIndex","windowWidth","setWindowWidth","window","innerWidth","setSelectedReview","isModalOpen","setIsModalOpen","React","handleResize","addEventListener","removeEventListener","reviewsPerSlide","handleNavigation","prevSlide","prevIndex","ChevronLeft","slice","review","openModal","nextSlide","ChevronRight","ReviewModal","closeModal","TourDetails","details","icon","CalendarOutlined","description","CreditCardOutlined","ClockCircleOutlined","UserOutlined","AudioOutlined","detail","index","initState","categoryName","tdesc","taddress","uploadFileNames","maxCapacity","setTour","setSelectedDate","selectedQuantity","setSelectedQuantity","currentImage","setCurrentImage","cartVisible","setCartVisible","detailsVisible","setDetailsVisible","favItems","changeFav","refreshFav","useCustomTourFav","reviewAvg","setReviewAvg","setReviews","setAvailableCapacity","scrollTo","getTourItemReview","avg","reduce","acc","Number","toFixed","calculateAverage","calendarContent","style","width","Calendar","fullscreen","onSelect","format","disabledDate","current","some","date","textAlign","marginTop","color","image","Array","_","Popover","content","trigger","min","max","Badge","count","backgroundColor","marginLeft","handleAddToCart","existingItem","find","item","updateCart","quantity","currentQuantity","totalQuantity","maxAddable","confirm","HeartIcon","offset","ShoppingCart","ReviewsSection","putTourOne","deleteTourOne","useSelector","state","reservationSlice","dispatch","useDispatch","getReservationItemsAsync","param","postChangeReservationAsync","favTour","items","useCallback","getFavTourItemsAsync","favItem","postChangeTourFavAsync","deleteFav","deleteTourFavItemAsync","ftino","deleteBulkFav","ftinoList","deleteBulkTourFavItemAsync"],"sourceRoot":""}