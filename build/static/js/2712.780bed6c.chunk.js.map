{"version":3,"file":"static/js/2712.780bed6c.chunk.js","mappings":"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","sources":["api/tourApi.js","components/common/FetchingModal.js","components/common/ResultModal.js","hooks/useCustomMove.js","components/tours/TourAddComponent.js","pages/tours/TourAddPage.js"],"sourcesContent":["import jwtAxios from \"../util/jwtUtil\";\nimport { API_SERVER_HOST } from \"./reviewApi\";\n\nconst host = `${API_SERVER_HOST}/api/user/tours`;\n\n// Function to fetch the list of tours with pagination and search functionality\nexport const getList = async ({ page, size = 9, keyword = \"\", type = \"t\", category = \"\" }) => {\n    try {\n        console.log(\"API params:\", { page, size, keyword, type, category });\n        const res = await jwtAxios.get(`${host}/list`, {\n            params: {\n              page,\n              size: 9,\n              keyword, // Search keyword\n                type,\n              category  // Search type\n            },\n        });\n        console.log(\"API response:\", res.data);\n        return res.data;\n    } catch (error) {\n        console.error(\"API Error:\", error.message);\n        throw error;\n    }\n};\n\nexport const getTopReservedTours = async (limit) => {\n  try {\n    const response = await jwtAxios.get(`${host}/top`, { params: { limit } });\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching top reserved tours:\", error);\n    throw error;\n  }\n};\n\nexport const getTourCategories = async () => {\n  try {\n    const response = await jwtAxios.get(`${host}/categories`);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching tour categories:\", error.message);\n    throw error;\n  }\n};\n\n// Add remaining tour API functions below\n\n// Register a new tour\nexport const postAdd = async (tour) => {\n  const header = { headers: { \"Content-Type\": \"multipart/form-data\" } };\n  const res = await jwtAxios.post(`${host}/`, tour, header);\n  return res.data;\n};\n\n// Retrieve a specific tour by ID\nexport const getOne = async (tno) => {\n  const res = await jwtAxios.get(`${host}/${tno}`);\n  return res.data;\n};\n\n// Update a specific tour\nexport const putOne = async (tno, tour) => {\n  const header = { headers: { \"Content-Type\": \"multipart/form-data\" } };\n  const res = await jwtAxios.put(`${host}/${tno}`, tour, header);\n  return res.data;\n};\n\n// Delete a specific tour\nexport const deleteOne = async (tno) => {\n  const res = await jwtAxios.delete(`${host}/${tno}`);\n  return res.data;\n};\n\n// book : 유저의 booking정보를 서버로 보냄\nexport const postBookInfo = async (filteredBookInfo) => {\n  console.log(\"filteredBookInfo:\", filteredBookInfo);\n  const headers = { \"Content-Type\": \"application/json\" };\n\n  try {\n    const res = await jwtAxios.post(`${host}/orders`, filteredBookInfo, {\n      headers,\n    });\n    return res.data;\n  } catch (error) {\n    throw new Error(\n      error.response?.data?.message || \"Failed to Post order info\"\n    );\n  }\n};\n\n// payment: 유저의 결제 정보를 서버로 보냄 , impUid포함한 정보.\nexport const postPayInfo = async (orderInfoWithOrderId, impUid) => {\n  console.log(impUid);\n  const headers = { \"Content-Type\": \"application/json\" };\n\n  try {\n    const res = await jwtAxios.post(\n      `${host}/payment/${impUid}`,\n      orderInfoWithOrderId,\n      { headers }\n    );\n    return res.data;\n  } catch (error) {\n    throw new Error(\n      error.response?.data?.message || \"Failed to Post payment info\"\n    );\n  }\n};\n\n","import React from 'react'\n\nconst FetchingModal = () => {\n\n  return (\n    <div className={'fixed top-0 left-0 z-[1055] flex h-full w-full place-items-center justify-center bg-black bg-opacity-20'}>\n        <div className='bg-white rounded-3xl opacity-100 min-w-min h-1/4 min-w-[600px] flex justify-center items-center'>\n            <div className='text-4xl font-extrabold text-orange-400 m-20'>\n                Loading.....\n            </div>\n        </div>\n    </div>\n  )\n}\n\nexport default FetchingModal","import React from 'react'\n\nconst ResultModal = ({title, content, callbackFn}) => {\n  return (\n    <div className={`fixed top-0 left-0 z-[1055] flex h-full w-full justify-center bg-black bg-opacity-20`}\n        onClick={() => {\n            if(callbackFn) callbackFn()\n        }}>\n        <div className='absolute bg-white shadow dark:bg-gray-700 opacity-100 w-1/4 rounded mt-10 mb-10 px-6 min-w-[600px]'>\n            <div className='justify-center bg-warning-400 mt-6 mb-6 text-2xl border-b-4 border-gray-500'>\n                {title}\n            </div>\n            <div className='text-4xl border-orange-400 border-b-4 pt-4 pb-4'>\n                {content}\n            </div>\n            <div className='justify-end flex'>\n                <button className='rounded bg-blue-500 mt-4 mb-4 px-6 pt-4 pb-4 text-lg text-white'\n                    onClick={() => {\n                        if(callbackFn) callbackFn()\n                    }}>\n                    Close Modal    \n                </button>\n            </div>\n        </div>\n    </div>\n  )\n}\n\nexport default ResultModal","import  { useState } from 'react'\nimport { createSearchParams, useNavigate, useSearchParams } from 'react-router-dom'\n\nconst getNum = (param, defaultValue) => {\n    if (!param) {\n        return defaultValue\n    }\n    return parseInt(param)\n}\n\nconst useCustomMove = () => {\n    const navigate = useNavigate()\n    const [refresh, setRefresh] = useState(false)\n    const [queryParams] = useSearchParams()\n    const page = getNum(queryParams.get('page'), 1)\n    const size = getNum(queryParams.get('size'), 10)\n    const queryDefault = createSearchParams({ page, size }).toString()\n\n    const moveToList = (pageParam = {}) => {\n        console.log('pageParam:', pageParam)\n        console.log(pageParam ? 'pageParam = 참' : 'pageParam = 거짓')\n        // 목록으로 이동할때 pageParam에 아무것도 전달되지 않으면 비어 있는 기본 객체를 인자로 받아 pageParam 설정\n        // const { page = 1, size = 10 } = pageParam\n        // url에 현재 page와 페이지당 size가 destructuring으로 page와 size에 저장되고\n        // 아무것도 넘어오지 않으면 기본값 page = 1, size = 10으로 결정된다\n        // 프로젝트시에도 넘어오는 데이터가 없으면 터지므로 undefined 변수에 접근하려고 하면 터짐\n        // 그래서 사용하는 곳에서 전달되는 값이 없을 경우 객체이면 {}를 기본값으로 설정하고,\n        // 배열이면 []로 선언하면 터지는 문제는 해결 가능\n        // 기본 자료형은 터질일은 없지만 없는 변수에 index로 배열에 접근하면 터지고-[]\n        // 객체의 key에 접근하려고 하면 터짐\n        let queryStr = \"\"\n        if (pageParam) {\n\n            const pageNum = getNum(pageParam.page, 1)\n            const sizeNum = getNum(pageParam.size, 10)\n            queryStr = createSearchParams({ page: pageNum, size: sizeNum }).toString()\n        } else queryStr = queryDefault\n\n        console.log('queryStr:', queryStr)\n        navigate({ pathname: '../list', search: queryStr })\n        setRefresh(!refresh)\n        // 동일한 페이지 버튼을 누를때에도 호출될 수 있도록 값을 변경\n        // useEffect의 두번째 인자(배열의 값이 변경되면 첫번째 인자 호출)    \n    }\n\n    const moveToModify = (num) => { // 수정으로 이동\n        console.log(queryDefault)\n        navigate({ pathname: `../modify/${num}`, search: queryDefault })\n    }\n\n    const moveToProductRead = (num) => {\n        // 조회로 이동, 여기에서 navigate에 객체로 인자를 전달하면서 path와 검색어를 전달하고\n        // 그것을 나중에 사용하려고 하고 custom hook을 이용하여 재활용함\n        console.log(queryDefault)\n        navigate({ pathname: `/user/products/read/${num}`, search: queryDefault })\n    }\n\n    const moveToTourRead = (num) => {\n        // 조회로 이동, 여기에서 navigate에 객체로 인자를 전달하면서 path와 검색어를 전달하고\n        // 그것을 나중에 사용하려고 하고 custom hook을 이용하여 재활용함\n        console.log(queryDefault)\n        navigate({ pathname: `/user/tours/read/${num}`, search: queryDefault })\n    }\n    const moveToProductReadNU = (num) => {\n        // 조회로 이동, 여기에서 navigate에 객체로 인자를 전달하면서 path와 검색어를 전달하고\n        // 그것을 나중에 사용하려고 하고 custom hook을 이용하여 재활용함\n        console.log(queryDefault)\n        navigate({ pathname: `/products/read/${num}`, search: queryDefault })\n    }\n\n    const moveToTourReadNU = (num) => {\n        // 조회로 이동, 여기에서 navigate에 객체로 인자를 전달하면서 path와 검색어를 전달하고\n        // 그것을 나중에 사용하려고 하고 custom hook을 이용하여 재활용함\n        console.log(queryDefault)\n        navigate({ pathname: `/tours/read/${num}`, search: queryDefault })\n    }\n    const moveToReadProductFromMain = (num) => {\n        // 조회로 이동, 여기에서 navigate에 객체로 인자를 전달하면서 path와 검색어를 전달하고\n        // 그것을 나중에 사용하려고 하고 custom hook을 이용하여 재활용함\n        console.log(queryDefault)\n        \n        navigate({ pathname: `/products/read/${num}`, search: queryDefault }) \n    }\n\n     const moveToReadTourFromMain = (num) => {\n        // 조회로 이동, 여기에서 navigate에 객체로 인자를 전달하면서 path와 검색어를 전달하고\n        // 그것을 나중에 사용하려고 하고 custom hook을 이용하여 재활용함\n        console.log(queryDefault)\n        \n        navigate({ pathname: `/tours/read/${num}`, search: queryDefault }) \n    }\n\n    //여기에서 정의된 함수 객체를 컴포넌트에서 반환하므로 사용하는 곳에서 destructuring해서 호출가능함\n    return { moveToList, moveToModify, page, size, moveToProductRead, moveToTourRead, moveToProductReadNU, moveToTourReadNU, refresh, navigate, moveToReadProductFromMain,moveToReadTourFromMain }\n}\nexport default useCustomMove","import React, { useRef, useState } from 'react'\nimport FetchingModal from '../common/FetchingModal'\nimport ResultModal from '../common/ResultModal'\nimport { postAdd } from '../../api/tourApi'\nimport useCustomMove from '../../hooks/useCustomMove'\n\n\nconst initState = {\n    tname: '',\n    tdesc: '',\n    price: 0,\n    files:[]\n}\n\nconst TourAddComponent = () => {\n    const [tour, setTour] = useState({ ...initState })\n    const [fetching, setFetching] = useState(false)\n    const [result, setResult] = useState(null)\n    const uploadRef = useRef()\n    const { moveToList, page, size } = useCustomMove()\n\n    const handleChangeTour = (e) => {\n        tour[e.target.name] = e.target.value\n        setTour({...tour})\n    }\n\n    const handleClickAdd = (e) => {\n        const files = uploadRef.current.files\n        const formData = new FormData()\n\n        for (let i = 0; i < files.length; i++){\n            formData.append(\"files\",files[i])\n        }\n\n        //other data\n        formData.append(\"tname\", tour.tname)\n        formData.append(\"tdesc\", tour.tdesc)\n        formData.append(\"price\", tour.price)\n\n        console.log(formData)\n\n        //ADD버튼 클릭시 모달창 띄움\n        setFetching(true)\n\n        //ADD버튼 클릭시 toursApi 의 postAdd()호출\n        postAdd(formData).then(data => {\n            setFetching(false)\n            console.log(data.result)\n            setResult(data.result)\n        })\n    }\n\n     const closeModal = () => {\n            setResult(null)\n         // moveToList({page:1})\n            moveToList({page:page, size:size})\n        }\n\n    return (\n      <div className='border-2 border-sky-200 mt-10 m-2 p-4'>\n          {fetching ? <FetchingModal /> : <></>}\n          {result ? \n              <ResultModal  \n                title={'Tour Add Result'}\n                content={`${result}번 등록 완료`}\n                    callbackFn={closeModal} /> : <></>}\n            <div className='flex justify-center'>\n                <div className='relative mb-4 flex w-full flex-wrap items-stretch'>\n                    <div className='w-1/5 p-6 text-right font-bold'>Tour Name</div>\n                    <input className='w-4/5 p-6 rounded-r border border-solid border-neutral-300 shadow-md'\n                        name='tname'\n                        type=\"text\"\n                        value={tour.tname}\n                        onChange={handleChangeTour}\n                    ></input>\n                </div>\n            </div>\n            <div className='flex justify-center'>\n                <div className='relative mb-4 flex w-full flex-wrap items-stretch'>\n                    <div className='w-1/5 p-6 text-right font-bold'>Desc</div>\n                    <textarea className='w-4/5 p-6 rounded-r border border-solid border-neutral-300 shadow-md resize-y'\n                        name=\"tdesc\"\n                        rows='4'\n                        onChange={handleChangeTour}\n                        value={tour.tdesc}>{tour.tdesc}\n                    </textarea>\n                </div>\n            </div>\n            <div className='flex justify-center'>\n                <div className='relative mb-4 flex w-full flex-wrap items-stretch'>\n                    <div className='w-1/5 p-6 text-right font-bold'>Price</div>\n                    <input className='w-4/5 p-6 rounded-r border border-solid border-neutral-300 shadow-md'\n                        name='price'\n                        type={'number'}\n                        value={tour.price}\n                        onChange={handleChangeTour}\n                        ></input>\n                </div>\n            </div>\n            <div className='flex justify-center'>\n                <div className='relative mb-4 flex w-full flex-wrap items-stretch'>\n                    <div className='w-1/5 p-6 text-right font-bold'>Files</div>\n                    <input ref={uploadRef}\n                        className='w-4/5 p-6 rounded-r border border-solid border-neutral-300 shadow-md'\n                        type={'file' } multiple={true} />\n                </div>\n            </div>\n            <div className='flex justify-end'>\n                <div className='relative mb-4 flex w-full flex-wrap items-stretch'>\n                    <button type='button'\n                        className='rounded p-4 w-36 bg-blue-500 text-xl text-white'\n                        onClick={handleClickAdd}\n                    >ADD</button>\n                </div>\n            </div>\n    </div>\n  )\n}\n\nexport default TourAddComponent","import React from 'react'\nimport TourAddComponent from '../../components/tours/TourAddComponent'\n\n\nconst TourAddPage = () => {\n  return (\n      <div className='p-4 w-full bg-white'>\n          <div className='text-3xl font-extrabold'>\n            TourAddPage\n          </div>\n          <TourAddComponent/>\n      </div>\n  )\n}\n\nexport default TourAddPage"],"names":["host","API_SERVER_HOST","getList","async","page","size","keyword","type","category","_ref","console","log","res","jwtAxios","get","params","data","error","message","getTopReservedTours","limit","getTourCategories","postAdd","post","tour","headers","getOne","tno","putOne","put","deleteOne","delete","postBookInfo","filteredBookInfo","_error$response","_error$response$data","Error","response","postPayInfo","orderInfoWithOrderId","impUid","_error$response2","_error$response2$data","FetchingModal","_jsx","className","children","title","content","callbackFn","onClick","_jsxs","getNum","param","defaultValue","parseInt","useCustomMove","navigate","useNavigate","refresh","setRefresh","useState","queryParams","useSearchParams","queryDefault","createSearchParams","toString","moveToList","pageParam","arguments","length","undefined","queryStr","pageNum","sizeNum","pathname","search","moveToModify","num","moveToProductRead","moveToTourRead","moveToProductReadNU","moveToTourReadNU","moveToReadProductFromMain","moveToReadTourFromMain","initState","tname","tdesc","price","files","TourAddComponent","setTour","fetching","setFetching","result","setResult","uploadRef","useRef","handleChangeTour","e","target","name","value","_Fragment","ResultModal","closeModal","onChange","rows","ref","multiple","current","formData","FormData","i","append","then","TourAddPage"],"sourceRoot":""}