{"version":3,"file":"static/js/5746.f67cc0ba.chunk.js","mappings":"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","sources":["components/tours/NUTourReadComponent.js","pages/tours/NUTourReadPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {API_SERVER_HOST,getTourItemReview,} from \"../../api/reviewApi\";\nimport ReviewsSection from '../review/ReviewsSection';\nimport { Calendar, Popover, Badge } from \"antd\";\nimport { UserOutlined, CalendarOutlined,StarFilled, StarOutlined } from \"@ant-design/icons\";\nimport { useNavigate } from 'react-router-dom';\nimport { getAvailableCapacity, getOneTNU } from '../../api/nuTourApi';\n\nimport TourDetails from './TourDetails';\n\nconst initState = {\n    tno: 0,\n    tname: '',\n    categoryName: '',\n    tdesc: '',\n    tprice: 0,\n    tlocation: '',\n    uploadFileNames: [],\n    tdate: [],\n    maxCapacity: 0,\n    // availableCapacity:0\n};\nconst host = API_SERVER_HOST;\n\nconst NUTourReadComponent = ({ tno }) => {\n    // const { moveToList, moveToModify, page, size } = useCustomMove();\n    const [tour, setTour] = useState(initState);\n    const [fetching, setFetching] = useState(false);\n    const [selectedDate, setSelectedDate] = useState('');\n    const [selectedQuantity, setSelectedQuantity] = useState(0);\n    const [currentImage, setCurrentImage] = useState(0)\n    const [detailsVisible, setDetailsVisible] = useState(false); // For toggling tour details\n    const [reviewAvg, setReviewAvg] = useState(0)\n    const [reviews, setReviews] = useState([]);\n    const [refresh, setRefresh] = useState(false)\n    const [availableCapacity, setAvailableCapacity] = useState(0);\n    const navigate = useNavigate();\n\n    const calculateAverage = (reviews) => {\n      if (reviews.length === 0) return 0;\n      const sum = reviews.reduce((acc, review) => acc + review.rating, 0);\n      const avg = sum / reviews.length; \n      return Number(avg.toFixed(1));\n    };\n  \n    useEffect(() => {\n      // Fetch tour data\n      window.scrollTo(0, 0);\n      setFetching(true);\n      getOneTNU(tno).then((data) => {\n        setTour(data);\n        setFetching(false);\n      });\n  \n      console.log(tour)\n  \n      // Review 데이터 가져오기\n      getTourItemReview(tno).then((reviews) => {\n          console.log(reviews);\n          setReviews(reviews);\n          setReviewAvg(calculateAverage(reviews))\n      });\n   \n    }, [tno,refresh]);\n\n    useEffect(() => {\n      console.log(selectedDate)\n      if (selectedDate) {\n        setSelectedQuantity(0);\n        getAvailableCapacity(tno, selectedDate).then((data) => {\n          console.log(data)\n          setAvailableCapacity(data)\n        });\n      }\n    }, [selectedDate, tno]);  \n\n\n    const handleClickAddReservation = () => {\n      \n        const answer = window.confirm(\"Please log in first to book the tour.\")\n        if(answer){\n          navigate('/member/login')\n        }\n        return\n      };\n\n    // // 팝업을 보여주고 닫는 핸들러\n    // const handleVisibleChange = (visible) => {\n    //     setVisible(visible);\n    // };\n\n    const calendarContent = (\n      <div style={{ width: 300 }}>\n        <Calendar\n          fullscreen={false}\n          onSelect={(e) => setSelectedDate(e.format(\"YYYY-MM-DD\"))} //문자열로 포맷\n          disabledDate={(current) =>\n            !tour.tdate.some(\n              (date) => date === current.format(\"YYYY-MM-DD\") \n            )\n          }\n        />\n        <div style={{ textAlign: \"center\", marginTop: 10, color: \"#888\" }}>\n          Only available dates can be selected\n        </div>\n      </div>\n    );\n\n\n    return (\n        <div className=\"min-h-screen py-12 px-4 sm:px-14 lg:px-20 lg:py-32 mt-20\">\n        <div className=\"flex flex-col lg:flex-row items-start space-y-8 lg:space-y-0 lg:space-x-8\">\n          {/* Left Section: Image Gallery */}\n          <div className=\"lg:flex-1\">\n            <div className=\"relative\">\n              <img\n                src={`${API_SERVER_HOST}/api/tours/view/${tour.uploadFileNames[currentImage]}`}\n                alt=\"Tour\"\n                className=\"w-full h-60 md:h-80 lg:h-[500px] object-cover\"\n              />\n              <div className=\"flex mt-4 space-x-2 overflow-x-auto\">\n                {tour.uploadFileNames.map((image, index) => (\n                  <button\n                    key={index}\n                    onClick={() => setCurrentImage(index)}\n                    className={`w-16 h-16 md:w-20 md:h-20 overflow-hidden ${\n                      currentImage === index ? \"ring-2 ring-blue-500\" : \"\"\n                    }`}\n                  >\n                    <img\n                      src={`${API_SERVER_HOST}/api/tours/view/${image}`}\n                      alt=\"Thumbnail\"\n                      className=\"w-full h-full object-cover\"\n                    />\n                  </button>\n                ))}\n              </div>\n            </div>\n          </div>\n  \n          {/* Right Section: Tour Details */}\n          <div className=\"lg:flex-1\">\n            <h1 className=\"text-3xl md:text-4xl font-light text-gray-900 mb-4\">\n              {tour.tname}\n            </h1>\n            <div className=\"flex items-center mb-4\">\n            {[...Array(5)].map((_, star) => \n            (\n            <span key={star}>\n              {reviewAvg >= star+1 ? (\n                        <StarFilled className=\"text-yellow-400 text-xl\" />\n                    ) : (\n                        <StarOutlined className=\"text-gray-300 text-xl\" />\n                    )}\n              </span>\n            )\n            )}\n               <span className=\"ml-2 text-gray-600\">({reviewAvg}) {reviews.length}  reviews</span>\n            </div>\n            <p className=\"text-xl md:text-2xl font-light text-gray-900 mb-6\">\n              ₩{tour.tprice.toLocaleString()}\n            </p>\n            <p className=\"text-gray-700 mb-2\"><strong>Tour Address:</strong> {tour.taddress}</p>\n            <p className=\"text-gray-700 mb-6\">{tour.tdesc}</p>\n  \n            {/* Date and Quantity Selection */}\n            <div className=\"grid grid-cols-2 gap-4 mt-6\">\n              <div>\n                <label className=\"block text-gray-700 mb-2\">\n                  <CalendarOutlined className=\"mr-2\" />\n                  Date\n                </label>\n                <Popover content={calendarContent} trigger=\"click\">\n                  <button className=\"w-full border rounded-lg p-3 text-left\">\n                    {selectedDate || \"Select a date\"}\n                  </button>\n                </Popover>\n              </div>\n              <div>\n                <label className=\"block text-gray-700 mb-2\">\n                  <UserOutlined className=\"mr-2\" />\n                  Person\n                </label>\n                <input\n                  type=\"number\"\n                  min=\"0\"\n                  max={availableCapacity}\n                  value={selectedQuantity}\n                  onChange={(e) => setSelectedQuantity(Number(e.target.value))}\n                  className=\"w-full border rounded-lg p-3 text-center\"\n                  placeholder=\"0\"\n                />\n              </div>\n            </div>\n  \n           {/* 실제 예약 가능 인원 정보 */}\n          <div className=\"p-2 rounded-lg flex justify-end items-center space-x-3\">\n            <div className=\"text-sm text-gray-600 flex items-center\">\n              <span>Available</span>\n              <Badge\n                count={selectedDate? availableCapacity > 0\n                      ? availableCapacity\n                      : \"Full\"\n                    : \"Select a Date\"\n                }\n                style={{backgroundColor: !selectedDate\n                    ? \"#d9d9d9\"\n                    : availableCapacity > 0\n                    ? \"#14b8a6\" \n                    : \"#ef4444\", \n                  color: \"white\",\n                  marginLeft: \"5px\", \n                }}\n              />\n            </div>\n            <div className=\"text-sm text-gray-600 flex items-center\">\n              <span>Max</span>\n              <Badge\n                count={tour.maxCapacity}\n                style={{\n                  backgroundColor: \"#3b82f6\", \n                  color: \"white\",\n                  marginLeft: \"5px\",\n                }}\n              />\n            </div>\n          </div>\n\n            {/* Action Buttons */}\n            <div className=\"flex flex-col md:flex-row space-y-4 md:space-y-0 md:space-x-4 mt-6\">\n              <button\n                onClick={handleClickAddReservation}\n                className=\"bg-stone-400 hover:bg-stone-600 text-white py-3 px-6 rounded-lg flex items-center justify-center\"\n              >\n                <CalendarOutlined className=\"mr-2\" />\n                Update Availability\n              </button>\n             \n            </div>\n  \n            {/* Tour Details Section */}\n            <div className=\"mt-10 bg-gray-100 p-6 rounded-lg\">\n              <div className=\"flex justify-between items-center\">\n                <h2 className=\"text-lg font-semibold text-gray-900\">\n                  Tour Policies\n                </h2>\n                <button\n                  onClick={() => setDetailsVisible(!detailsVisible)}\n                  className=\"text-gray-500 hover:text-gray-700 text-2xl\"\n                >\n                  {detailsVisible ? \"-\" : \"+\"}\n                </button>\n              </div>\n              {detailsVisible && <TourDetails />}\n            </div>\n          </div>\n        </div>\n  \n        {/* Reviews Section */}\n        <div className=\"mt-5\">\n          <ReviewsSection\n            refresh={refresh}\n            setRefresh={setRefresh}\n            reviews={reviews}\n          />\n        </div>\n      </div>\n    )\n}\n\nexport default NUTourReadComponent;\n","import React, { useEffect } from 'react'\nimport TourReadComponent from '../../components/tours/TourReadComponent'\nimport { useParams } from 'react-router-dom'\nimport NUTourReadComponent from '../../components/tours/NUTourReadComponent'\n\nconst NUTourReadPage = () => {\n\n  const {tno} = useParams()\n  \n  return (\n    <div className='p-4 w-full bg-white'>\n        <NUTourReadComponent tno={tno}></NUTourReadComponent>\n    </div>\n  )\n}\n\nexport default NUTourReadPage"],"names":["initState","tno","tname","categoryName","tdesc","tprice","tlocation","uploadFileNames","tdate","maxCapacity","_ref","tour","setTour","useState","fetching","setFetching","selectedDate","setSelectedDate","selectedQuantity","setSelectedQuantity","currentImage","setCurrentImage","detailsVisible","setDetailsVisible","reviewAvg","setReviewAvg","reviews","setReviews","refresh","setRefresh","availableCapacity","setAvailableCapacity","navigate","useNavigate","useEffect","window","scrollTo","getOneTNU","then","data","console","log","getTourItemReview","length","avg","reduce","acc","review","rating","Number","toFixed","calculateAverage","getAvailableCapacity","calendarContent","_jsxs","style","width","children","_jsx","Calendar","fullscreen","onSelect","e","format","disabledDate","current","some","date","textAlign","marginTop","color","className","src","API_SERVER_HOST","alt","map","image","index","onClick","Array","_","star","StarFilled","StarOutlined","toLocaleString","taddress","CalendarOutlined","Popover","content","trigger","UserOutlined","type","min","max","value","onChange","target","placeholder","Badge","count","backgroundColor","marginLeft","handleClickAddReservation","confirm","TourDetails","ReviewsSection","NUTourReadPage","useParams","NUTourReadComponent"],"sourceRoot":""}