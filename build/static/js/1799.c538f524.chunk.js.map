{"version":3,"file":"static/js/1799.c538f524.chunk.js","mappings":"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","sources":["components/admin/AdminMainComponents.js","pages/admin/AdminDashBoard.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  LineChart,\n  Line,\n  ResponsiveContainer,\n} from \"recharts\";\nimport { Settings, Search, Calendar, Users, Bell } from \"lucide-react\";\nimport { fetchDashboardStats, fetchTopItems } from \"../../api/AdminApi\";\n\nconst host = \"http://localhost:8080/api\";\n\nconst weeklyData = [\n  { name: \"월\", tours: 80, products: 60, revenue: 320 },\n  { name: \"화\", tours: 75, products: 55, revenue: 290 },\n  { name: \"수\", tours: 90, products: 65, revenue: 380 },\n  { name: \"목\", tours: 70, products: 50, revenue: 275 },\n  { name: \"금\", tours: 85, products: 60, revenue: 340 },\n  { name: \"토\", tours: 95, products: 70, revenue: 420 },\n  { name: \"일\", tours: 80, products: 55, revenue: 310 },\n];\n\nconst timeData = Array.from({ length: 13 }, (_, i) => ({\n  time: `${(i + 8) % 12 || 12}${i + 8 < 12 ? \"AM\" : \"PM\"}`,\n  visitors: 25 + Math.random() * 50,\n}));\n\nconst CircularProgress = ({ value, total, color, size = 64 }) => {\n  const strokeWidth = 8;\n  const radius = (size - strokeWidth) / 2;\n  const circumference = radius * 2 * Math.PI;\n  const progress = (value / total) * 100;\n  const offset = progress >= 100 ? 0 : circumference - (progress / 100) * circumference;\n\n  return (\n    <div className=\"relative\" style={{ width: size, height: size }}>\n      {/* Background circle */}\n      <svg className=\"rotate-[-90deg]\" width={size} height={size}>\n        <circle\n          stroke=\"#e5e7eb\"\n          strokeWidth={strokeWidth}\n          fill=\"none\"\n          cx={size / 2}\n          cy={size / 2}\n          r={radius}\n        />\n        {/* Progress circle */}\n        <circle\n          stroke={color}\n          strokeWidth={strokeWidth}\n          strokeDasharray={circumference}\n          strokeDashoffset={offset}\n          strokeLinecap=\"round\"\n          fill=\"none\"\n          cx={size / 2}\n          cy={size / 2}\n          r={radius}\n        >\n          <animate\n            attributeName=\"stroke-dashoffset\"\n            from={circumference}\n            to={offset}\n            dur=\"1s\"\n            fill=\"freeze\"\n          />\n        </circle>\n      </svg>\n      {/* Percentage text */}\n      <div className=\"absolute inset-0 flex items-center justify-center\">\n        <span className=\"text-sm font-semibold text-gray-700\">\n          {Math.round(progress)}%\n        </span>\n      </div>\n    </div>\n  );\n};\n\nconst AdminMainComponents = () => {\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth >= 1280);\n  const [statistics, setStatistics] = useState({\n    totalRevenue: 0,\n    tourCount: 0,\n    productCount: 0,\n    revenueGrowth: 0,\n    topSellingProducts: [],\n    topReservedTours: []\n  });\n\n  useEffect(() => {\n    const handleResize = () => {\n      setWindowWidth(window.innerWidth >= 1280);\n    };\n\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.addEventListener(\"resize\", handleResize);\n  }, []);\n\n  useEffect(() => {\n    const loadDashboardData = async () => {\n      try {\n        // 기본 통계 데이터 로드\n        const statsData = await fetchDashboardStats();\n        setStatistics(statsData);\n\n        const topItemsData = await fetchTopItems();\n        setStatistics(prevStats => ({\n          ...prevStats,\n          topSellingProducts: topItemsData.products || [],\n          topReservedTours: topItemsData.tours || []\n        }));\n      } catch (error) {\n        console.error('대시보드 데이터 로드 실패:', error);\n      }\n    };\n\n    loadDashboardData();\n  }, []);\n\n  const renderTopItems = () => {\n    // null 체크 추가\n    const { topReservedTours = [], topSellingProducts = [] } = statistics || {};\n\n    return (\n      <div className=\"space-y-4\">\n        {topReservedTours.map((tour, index) => (\n          <div key={`tour-${index}`} className=\"bg-orange-100 p-4 rounded-xl\">\n            <div className=\"flex justify-between items-center\">\n              <span className=\"text-2xl font-bold\">{tour?.reservationCount || 0}건</span>\n              <div className=\"w-12 h-6 bg-white rounded-full flex items-center justify-center\">\n                <Calendar size={16} className=\"text-orange-500\" />\n              </div>\n            </div>\n            <p className=\"font-medium\">{tour?.tourName || '이름 없음'}</p>\n            <p className=\"text-sm text-gray-500\">이번 주 예약</p>\n          </div>\n        ))}\n\n        {topSellingProducts.map((product, index) => (\n          <div key={`product-${index}`} className=\"bg-blue-100 p-4 rounded-xl\">\n            <div className=\"flex justify-between items-center\">\n              <span className=\"text-2xl font-bold\">{product?.salesCount || 0}개</span>\n              <div className=\"w-12 h-6 bg-white rounded-full flex items-center justify-center\">\n                <Users size={16} className=\"text-blue-500\" />\n              </div>\n            </div>\n            <p className=\"font-medium\">{product.productName}</p>\n            <p className=\"text-sm text-gray-500\">이번 주 판매</p>\n          </div>\n        ))}\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 flex\">\n      <div className=\"flex-1 p-8\">\n        {/* Header */}\n        <div className=\"flex justify-between items-center mb-8\">\n          <h1 className=\"text-2xl font-bold flex\">대시보드</h1>\n          <div className=\"items-center gap-4\">\n            {/* <div className=\"relative\">\n                            <input\n                                type=\"text\"\n                                placeholder=\"검색\"\n                                className=\"pl-10 pr-4 py-2 bg-blue-50 rounded-lg w-64\"\n                            />\n                            <Search className=\"absolute left-3 top-2.5 text-gray-400\" size={20} />\n                        </div>\n                        <button className=\"p-2 hover:bg-gray-100 rounded-lg\">\n                            <Settings size={20} />\n                        </button> */}\n          </div>\n        </div>\n\n        {/* Stats Cards */}\n        <div className=\"grid xl:grid-cols-3 lg:grid-cols-2 gap-6 mb-8\">\n          <div className=\"bg-white p-6 rounded-xl\">\n            <div className=\"flex justify-between items-center\">\n              <div>\n                <h3 className=\"text-gray-500 mb-2\">총 매출액</h3>\n                <p className=\"text-3xl font-bold\">\n                  {statistics.totalRevenue ? `${(statistics.totalRevenue).toLocaleString()}원` : '0원'}\n                </p>\n                <p className=\"text-green-500 text-sm\">\n                  {isNaN(statistics.revenueGrowth) ? '0% 증가' : `+${statistics.revenueGrowth.toFixed(2)}% 증가`}\n                </p>\n              </div>\n              <div className=\"ml-4\">\n                <CircularProgress value={isNaN(statistics.revenueGrowth) ? 0 : statistics.revenueGrowth} total={100} color=\"#3B82F6\" />\n              </div>\n            </div>\n          </div>\n          <div className=\"bg-white p-6 rounded-xl\">\n            <div className=\"flex justify-between items-center\">\n              <div>\n                <h3 className=\"text-gray-500 mb-2\">투어 예약</h3>\n                <p className=\"text-3xl font-bold\">\n                  {statistics.tourCount ? `${statistics.tourCount}건` : '0건'}\n                </p>\n                <p className=\"text-yellow-500 text-sm\">+40% 증가</p>\n              </div>\n              <div className=\"ml-4\">\n                <CircularProgress value={40} total={100} color=\"#F59E0B\" />\n              </div>\n            </div>\n          </div>\n          <div className=\"bg-white p-6 rounded-xl\">\n            <div className=\"flex justify-between items-center\">\n              <div>\n                <h3 className=\"text-gray-500 mb-2\">상품 판매</h3>\n                <p className=\"text-3xl font-bold\">\n                  {statistics.productCount ? `${statistics.productCount}개` : '0개'}\n                </p>\n                <p className=\"text-green-500 text-sm\">+16% 증가</p>\n              </div>\n              <div className=\"ml-4\">\n                <CircularProgress value={16} total={100} color=\"#10B981\" />\n              </div>\n            </div>\n          </div>\n        </div>\n        {/* Charts */}\n        <div className=\"grid lg:grid-cols-2 md:grid-cols-1 gap-6\">\n          <div className=\"bg-white p-6 rounded-xl\">\n            <div className=\"flex justify-between items-center mb-6\">\n              <h3 className=\"font-semibold\">주간 판매 현황</h3>\n              <select className=\"bg-blue-50 px-4 py-2 rounded-lg\">\n                <option>이번 주</option>\n                <option>지난 주</option>\n                <option>이번 달</option>\n              </select>\n            </div>\n            <ResponsiveContainer width=\"100%\" height={300}>\n              <BarChart data={weeklyData}>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"name\" />\n                <YAxis />\n                <Bar dataKey=\"tours\" fill=\"#3B82F6\" name=\"투어\" />\n                <Bar dataKey=\"products\" fill=\"#10B981\" name=\"상품\" />\n                <Bar dataKey=\"revenue\" fill=\"#F59E0B\" name=\"매출(만원)\" />\n              </BarChart>\n            </ResponsiveContainer>\n          </div>\n\n          <div className=\"bg-white p-6 rounded-xl\">\n            <div className=\"flex justify-between items-center mb-6\">\n              <h3 className=\"font-semibold\">시간대별 방문자 수</h3>\n              <select className=\"bg-blue-50 px-4 py-2 rounded-lg\">\n                <option>오늘</option>\n                <option>어제</option>\n                <option>이번 주</option>\n              </select>\n            </div>\n            <ResponsiveContainer width=\"100%\" height={300}>\n              <LineChart data={timeData}>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"time\" />\n                <YAxis />\n                <Line\n                  type=\"monotone\"\n                  dataKey=\"visitors\"\n                  stroke=\"#3B82F6\"\n                  strokeWidth={2}\n                  name=\"방문자 수\"\n                />\n              </LineChart>\n            </ResponsiveContainer>\n          </div>\n        </div>\n      </div>\n\n      {/* {windowWidth && ( */}\n      {/* Right Sidebar */}\n      <div className=\"hidden lg:block w-80 bg-white p-6 border-l\">\n        <div className=\"mb-8\">\n          <div className=\"flex justify-between items-center mb-4\">\n            <h3 className=\"font-semibold\">인기 상품/투어</h3>\n            <button className=\"bg-blue-600 text-white px-3 py-1 rounded-lg text-sm\">\n              + 추가\n            </button>\n          </div>\n\n          <div className=\"space-y-4\">\n            {renderTopItems()}\n          </div>\n        </div>\n\n        <div>\n          <div className=\"flex justify-between items-center mb-4\">\n            <h3 className=\"font-semibold\">알림</h3>\n            <Bell size={20} className=\"text-gray-500\" />\n          </div>\n\n          <div className=\"space-y-4\">\n            {[\n              {\n                color: \"bg-blue-100\",\n                time: \"18:30\",\n                text: \"한강 야경 투어 예약 10건 대기 중\",\n              },\n              {\n                color: \"bg-yellow-100\",\n                time: \"17:30\",\n                text: '인기 상품 \"명동 기념품 세트\" 재고 부족 (5개 남음)',\n              },\n              {\n                color: \"bg-red-100\",\n                time: \"17:00\",\n                text: \"고객 문의 3건이 답변 대기 중입니다.\",\n              },\n              {\n                color: \"bg-green-100\",\n                time: \"16:45\",\n                text: \"새로운 상품 등록이 완료되었습니다.\",\n              },\n            ].map((item, i) => (\n              <div key={i} className={`${item.color} p-4 rounded-xl`}>\n                <p className=\"text-sm\">{item.text}</p>\n                <p className=\"text-xs text-gray-500 mt-1\">{item.time}</p>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n      {/* )} */}\n    </div>\n  );\n};\n\nexport default AdminMainComponents;\n","import React from 'react'\nimport AdminMainComponents from '../../components/admin/AdminMainComponents'\n\nconst AdminDashBoard = () => {\n    return (\n        <div className='w-full overflow-y-auto' style={{ height: '100vh' }}>\n            <AdminMainComponents />\n        </div>\n    )\n}\n\nexport default AdminDashBoard"],"names":["weeklyData","name","tours","products","revenue","timeData","Array","from","length","_","i","time","visitors","Math","random","CircularProgress","_ref","value","total","color","size","radius","circumference","PI","progress","offset","_jsxs","className","style","width","height","children","_jsx","stroke","strokeWidth","fill","cx","cy","r","strokeDasharray","strokeDashoffset","strokeLinecap","attributeName","to","dur","round","AdminMainComponents","windowWidth","setWindowWidth","useState","window","innerWidth","statistics","setStatistics","totalRevenue","tourCount","productCount","revenueGrowth","topSellingProducts","topReservedTours","useEffect","handleResize","addEventListener","async","statsData","fetchDashboardStats","topItemsData","fetchTopItems","prevStats","error","console","loadDashboardData","toLocaleString","isNaN","toFixed","ResponsiveContainer","BarChart","data","CartesianGrid","XAxis","dataKey","YAxis","Bar","LineChart","Line","type","renderTopItems","map","tour","index","reservationCount","Calendar","tourName","product","salesCount","Users","productName","Bell","text","item","AdminDashBoard"],"sourceRoot":""}