{"version":3,"file":"static/js/307.3c7914e0.chunk.js","mappings":"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","sources":["components/ui/Button.js","components/ui/Input.js","hooks/useCustomTourFav.js","lib/utils.js","components/tours/TourListComponent.js","pages/tours/TourListPage.js"],"sourcesContent":["import React from \"react\";\n\nconst Button = ({ children, variant = \"default\", size = \"default\", className = \"\", ...props }) => {\n  const baseStyle = \"inline-flex items-center justify-center rounded-md transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-offset-2\";\n  const variantStyle = {\n    default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n    destructive: \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n    outline: \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n    secondary: \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n    ghost: \"hover:bg-accent hover:text-accent-foreground\",\n    link: \"text-primary underline-offset-4 hover:underline\",\n  }[variant];\n\n  const sizeStyle = {\n    default: \"h-10 px-4 py-2\",\n    sm: \"h-9 rounded-md px-3\",\n    lg: \"h-11 rounded-md px-8\",\n    icon: \"h-10 w-10\",\n  }[size];\n\n  return (\n    <button className={`${baseStyle} ${variantStyle} ${sizeStyle} ${className}`} {...props}>\n      {children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from \"react\";\nimport { cn } from \"../../lib/utils\";\n\nconst Input = React.forwardRef(( { className, type = \"text\", ...props }, ref) => {\n  return (\n    <input\n      type={type}\n      className={cn(\n        \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  );\n});\n\nInput.displayName = \"Input\";\n\nexport default Input;\n","import { useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  getFavTourItemsAsync,\n  postChangeTourFavAsync,\n  deleteTourFavItemAsync,\n  deleteBulkTourFavItemAsync,\n} from \"../slices/favTourSlice\";\nimport useCustomLogin from \"../hooks/useCustomLogin\";\n\nconst useCustomTourFav = () => {\n  const { loginState } = useCustomLogin();\n  const email = loginState.email; \n  const favItems = useSelector((state) => state.favTour.items || []);\n  const dispatch = useDispatch();\n\n  const refreshFav = useCallback(() => {\n    dispatch(getFavTourItemsAsync(email)); // Pass email when refreshing favorites\n  }, [dispatch, email]);\n\n  const changeFav = useCallback(\n    async (favItem) => {\n      const isAlreadyFavorite = favItems.some(\n        (item) => item.tno === favItem.tno\n      );\n      if (isAlreadyFavorite) {\n        alert(\"This tour is already in your favorites!\");\n        return;\n      }\n      await dispatch(postChangeTourFavAsync(favItem));\n      refreshFav();\n    },\n    [dispatch, favItems, refreshFav]\n  );\n\n  const deleteFav = useCallback(\n    async (ftino) => {\n      await dispatch(deleteTourFavItemAsync(ftino));\n      refreshFav();\n    },\n    [dispatch, refreshFav]\n  );\n\n  const deleteBulkFav = useCallback(\n    (ftinoList) => {\n      dispatch(deleteBulkTourFavItemAsync(ftinoList)).then(() => refreshFav());\n    },\n    [dispatch, refreshFav]\n  );\n\n  return { favItems, refreshFav, changeFav, deleteFav, deleteBulkFav };\n};\n\nexport default useCustomTourFav;\n","import { clsx } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\n\nexport function cn(...inputs) {\n  return twMerge(clsx(inputs));\n}\n","import React, { useEffect, useState } from \"react\";\nimport useCustomMove from \"../../hooks/useCustomMove\";\nimport FetchingModal from \"../common/FetchingModal\";\nimport { API_SERVER_HOST } from \"../../api/reviewApi\";\nimport PageComponent from \"../common/PageComponent\";\nimport useCustomLogin from \"../../hooks/useCustomLogin\";\nimport Button from \"../ui/Button\";\nimport { getList, getTourCategories } from \"../../api/tourApi\"; // Fetch categories\nimport Input from \"../ui/Input\";\nimport { HeartIcon, SearchIcon } from \"lucide-react\";\nimport useCustomTourFav from \"../../hooks/useCustomTourFav\";\n\nconst host = API_SERVER_HOST;\n\nconst initState = {\n  dtoList: [],\n  pageNumList: [],\n  pageRequestDTO: null,\n  prev: false,\n  next: false,\n  totalCount: 0,\n  prevPage: 0,\n  nextPage: 0,\n  totalPage: 0,\n  current: 0,\n};\n\nconst TourListComponent = () => {\n  const { exceptionHandle } = useCustomLogin();\n  const { page, size, refresh, moveToList, moveToTourRead } = useCustomMove();\n  const [serverData, setServerData] = useState(initState);\n  const [fetching, setFetching] = useState(false);\n  const { isLogin, loginState } = useCustomLogin();\n  const email = loginState.email; // Get email from login state\n  const { favItems, changeFav, deleteFav, refreshFav } = useCustomTourFav(email);\n\n  const [keyword, setKeyword] = useState(\"\");\n  const [type, setType] = useState(\"t\");\n  const [categories, setCategories] = useState([]); // Store fetched categories\n  const [selectedCategory, setSelectedCategory] = useState(\"\"); // Selected category\n\n    \n    useEffect(() => {\n        if (isLogin && email) {\n            refreshFav();\n        }\n  }, [isLogin, email, refreshFav]);\n\n  useEffect(() => {\n    // Fetch categories\n    getTourCategories()\n      .then((data) => {\n        if (data && Array.isArray(data)) {\n          setCategories(data);\n        } else {\n          console.log(\"No categories found\");\n          setCategories([]);\n        }\n      })\n      .catch((err) => {\n        exceptionHandle(err);\n        setCategories([]);\n      });\n  }, []);\n\n  const handleCategoryChange = (e) => {\n    setSelectedCategory(e.target.value);\n  };\n\n  const handleSearch = () => {\n    setFetching(true);\n    getList({ page: 1, size, keyword, type, category: selectedCategory })\n      .then((data) => {\n        setServerData(data && Array.isArray(data.dtoList) ? data : initState);\n        setFetching(false);\n      })\n      .catch((err) => {\n        exceptionHandle(err);\n        setFetching(false);\n      });\n  };\n\n  const handleToggleFavorite = async (tour) => {\n    if (!loginState.email) {\n      window.alert(\"Please log in to manage favorites.\");\n      return;\n    }\n\n    const isFavorite = favItems.some((item) => item.tno === tour.tno);\n\n    if (isFavorite) {\n      const favoriteItem = favItems.find((item) => item.tno === tour.tno);\n      await deleteFav(favoriteItem.ftino);\n    } else {\n      await changeFav({ email: loginState.email, tno: tour.tno });\n    }\n  };\n\n  useEffect(() => {\n    setFetching(true);\n    getList({ page, size, keyword, type, category: selectedCategory })\n      .then((data) => {\n        setServerData(data && Array.isArray(data.dtoList) ? data : initState);\n        setFetching(false);\n      })\n      .catch((err) => {\n        exceptionHandle(err);\n        setFetching(false);\n      });\n  }, [page, size, refresh, keyword, type, favItems, selectedCategory]);\n\n  return (\n    <div className=\"py-20\">\n      <section className=\"max-w-5xl mx-auto\">\n        <h2 className=\"mb-10 text-2xl font-bold uppercase text-center text-gray-700 tracking-wide\">\n          Explore Curated Tours\n        </h2>\n\n        {/* Search Bar with Category Dropdown */}\n        <div className=\"mt-8 flex justify-center items-center space-x-4\">\n          {/* Dropdown for Categories */}\n          <select\n            className=\"bg-white border border-gray-300 rounded-lg p-3 text-sm\"\n            value={selectedCategory}\n            onChange={handleCategoryChange}\n          >\n            <option value=\"\">All Categories</option>\n            {categories.map((categoryName, index) => (\n              <option key={index} value={categoryName}>\n                {categoryName}\n              </option>\n            ))}\n          </select>\n\n          {/* Search Input */}\n          <div className=\"flex w-full max-w-xl bg-white rounded-lg shadow-lg overflow-hidden border border-gray-200\">\n            <Input\n              placeholder=\"Search experiences...\"\n              className=\"flex-grow border-0 focus:ring-0 text-lg py-6 px-6\"\n              value={keyword}\n              onChange={(e) => {\n                console.log(\"Keyword updated:\", e.target.value);\n                setKeyword(e.target.value);\n              }}\n            />\n\n            <Button\n              className=\"hidden sm:flex bg-orange-800 hover:bg-orange-700 text-white font-medium tracking-wide py-6 \"\n              onClick={handleSearch}\n            >\n              <SearchIcon className=\"h-5 w-5\" />\n            </Button>\n          </div>\n        </div>\n\n        {/* Tour Cards */}\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-12 mt-10\">\n          {serverData.dtoList && serverData.dtoList.length > 0 ? (\n            serverData.dtoList.map((tour) => {\n              const isFavorite = favItems.some((item) => item.tno === tour.tno);\n              return (\n                <div\n                  key={tour.tno}\n                  className=\"flex flex-col items-center text-center\"\n                  onClick={() => moveToTourRead(tour.tno)}\n                >\n                  {/* Image with Heart Icon */}\n                  <div className=\"relative w-full max-w-xs h-52 overflow-hidden\">\n                    <img\n                      src={`${host}/api/tours/view/${tour.uploadFileNames[0]}`}\n                      alt={tour.tname}\n                      className=\"w-full h-full object-cover opacity-80 hover:opacity-90\"\n                    />\n                    <button\n                      className={`absolute top-2 right-2 ${isFavorite ? \"text-red-500\" : \"text-white\"\n                        }`}\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        handleToggleFavorite(tour);\n                      }}\n                    >\n                      <HeartIcon\n                        className={`h-6 w-6 ${isFavorite ? \"fill-current\" : \"\"\n                          }`}\n                      />\n                    </button>\n                  </div>\n                  {/* Tour Details */}\n                  <div className=\"mt-4\">\n                    <p className=\"text-xs text-gray-500\">{tour.categoryName}</p>\n                    <h3 className=\"text-md font-bold text-gray-600\">\n                      {tour.tname}\n                    </h3>\n                    <p className=\"text-sm text-gray-500 mt-1\">₩{tour.tprice}</p>\n                  </div>\n                </div>\n              );\n            })\n          ) : (\n            <p className=\"text-center text-gray-500\">No tours available.</p>\n          )}\n        </div>\n      </section>\n\n      <PageComponent serverData={serverData} movePage={moveToList} />\n    </div>\n  );\n};\n\nexport default TourListComponent;\n","import React, { useRef, useState, useEffect } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faMapLocationDot,\n  faCircleInfo,\n  faMagnifyingGlass,\n  faFire\n} from \"@fortawesome/free-solid-svg-icons\";\nimport TourListComponent from \"../../components/tours/TourListComponent\";\nimport TourImage from \"../../layouts/TourImage\";\nimport TourMap from \"../../components/TourMap\";\nimport MostPopularTour from \"../../components/tours/MostPopularTour\";\nimport AboutToursComponent from \"../../components/tours/AboutToursComponent \";\n\n\nconst TourListPage = () => {\n  // Refs for each component\n  const aboutRef = useRef(null);\n  const tourMapRef = useRef(null);\n  const tourListRef = useRef(null);\n  const tourPopularRef = useRef(null);\n  const tourImageRef = useRef(null);\n\n  // State to track visibility of the navigation bar\n  const [showNav, setShowNav] = useState(false);\n\n  // Scroll functions\n  const scrollToAbout = () => {\n    if (aboutRef.current) {\n      aboutRef.current.scrollIntoView({ behavior: \"smooth\" });\n    }\n  };\n\n  const scrollToTourMap = () => {\n    if (tourMapRef.current) {\n      tourMapRef.current.scrollIntoView({ behavior: \"smooth\" });\n    }\n  };\n\n  const scrollToTourList = () => {\n    if (tourListRef.current) {\n      tourListRef.current.scrollIntoView({ behavior: \"smooth\" });\n    }\n  };\n\n  const scrollToPopularTour = () => {\n    if (tourPopularRef.current) {\n      tourPopularRef.current.scrollIntoView({ behavior: \"smooth\" });\n    }\n  };\n\n  // Track scrolling to toggle navigation bar visibility\n  useEffect(() => {\n    const handleScroll = () => {\n      if (tourImageRef.current) {\n        const tourImageBottom = tourImageRef.current.getBoundingClientRect().bottom;\n        setShowNav(tourImageBottom <= 0); // Show navigation bar when TourImage scrolls out of view\n      }\n    };\n\n    window.addEventListener(\"scroll\", handleScroll);\n    return () => window.removeEventListener(\"scroll\", handleScroll);\n  }, []);\n\n  return (\n    <div className=\"relative p-4 w-full\" style={{ backgroundColor: \"#E0DCD0\" }}>\n      {/* TourImage with scroll-to functions */}\n      <div ref={tourImageRef}>\n        <TourImage\n          onScrollToAbout={scrollToAbout}\n          onScrollToTourMap={scrollToTourMap}\n          onScrollToTourList={scrollToTourList}\n        />\n      </div>\n\n      {/* Other components */}\n      <div ref={tourMapRef}>\n        <TourMap />\n      </div>\n      <div ref={tourPopularRef}>\n        <MostPopularTour />\n        </div>\n      <div ref={aboutRef}>\n        <AboutToursComponent />\n      </div>\n      <div ref={tourListRef}>\n        <TourListComponent />\n      </div>\n\n      {/* Right-Side Navigation */}\n      {showNav && (\n        <nav className=\"fixed top-1/2 right-4 transform -translate-y-1/2 z-50 p-4\">\n          <ul className=\"space-y-4\">\n            <li>\n              <button\n                onClick={scrollToTourMap}\n                title=\"Map\"\n                className=\"px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600\"\n              >\n                <FontAwesomeIcon icon={faMapLocationDot} />\n              </button>\n            </li>\n            <li>\n              <button\n                onClick={scrollToPopularTour}\n                title=\"Popular Tour\"\n                className=\"px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600\"\n              >\n                <FontAwesomeIcon icon={faFire} />\n              </button>\n            </li>\n            <li>\n              <button\n                onClick={scrollToAbout}\n                title=\"About Our Tour\"\n                className=\"px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600\"\n              >\n                <FontAwesomeIcon icon={faCircleInfo} />\n              </button>\n            </li>\n            <li>\n              <button\n                onClick={scrollToTourList}\n                title=\"Search Tour\"\n                className=\"px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600\"\n              >\n                <FontAwesomeIcon icon={faMagnifyingGlass} />\n              </button>\n            </li>\n          </ul>\n        </nav>\n      )}\n    </div>\n  );\n};\n\nexport default TourListPage;\n"],"names":["_ref","children","variant","size","className","props","variantStyle","default","destructive","outline","secondary","ghost","link","sizeStyle","sm","lg","icon","_jsx","Input","React","ref","type","cn","displayName","useCustomTourFav","loginState","useCustomLogin","email","favItems","useSelector","state","favTour","items","dispatch","useDispatch","refreshFav","useCallback","getFavTourItemsAsync","changeFav","async","some","item","tno","favItem","alert","postChangeTourFavAsync","deleteFav","deleteTourFavItemAsync","ftino","deleteBulkFav","ftinoList","deleteBulkTourFavItemAsync","then","_len","arguments","length","inputs","Array","_key","twMerge","clsx","host","API_SERVER_HOST","initState","dtoList","pageNumList","pageRequestDTO","prev","next","totalCount","prevPage","nextPage","totalPage","current","TourListComponent","exceptionHandle","page","refresh","moveToList","moveToTourRead","useCustomMove","serverData","setServerData","useState","fetching","setFetching","isLogin","keyword","setKeyword","setType","categories","setCategories","selectedCategory","setSelectedCategory","useEffect","getTourCategories","data","isArray","console","log","catch","err","getList","category","_jsxs","value","onChange","e","target","map","categoryName","index","placeholder","Button","onClick","handleSearch","SearchIcon","tour","isFavorite","src","uploadFileNames","alt","tname","stopPropagation","window","favoriteItem","find","handleToggleFavorite","HeartIcon","tprice","PageComponent","movePage","TourListPage","aboutRef","useRef","tourMapRef","tourListRef","tourPopularRef","tourImageRef","showNav","setShowNav","scrollToAbout","scrollIntoView","behavior","scrollToTourMap","scrollToTourList","handleScroll","tourImageBottom","getBoundingClientRect","bottom","addEventListener","removeEventListener","style","backgroundColor","TourImage","onScrollToAbout","onScrollToTourMap","onScrollToTourList","TourMap","MostPopularTour","AboutToursComponent","title","FontAwesomeIcon","faMapLocationDot","scrollToPopularTour","faFire","faCircleInfo","faMagnifyingGlass"],"sourceRoot":""}