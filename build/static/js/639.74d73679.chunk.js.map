{"version":3,"file":"static/js/639.74d73679.chunk.js","mappings":"8LAGA,MAAMA,EAAOC,EAAAA,YACX,CAAAC,EAA0BC,KAAG,IAA5B,UAAEC,KAAcC,GAAOH,EAAA,OACtBI,EAAAA,EAAAA,KAAA,OACEH,IAAKA,EACLC,WAAWG,EAAAA,EAAAA,IACT,2DACAH,MAEEC,GACJ,IAGNL,EAAKQ,YAAc,OAEnB,MAAMC,EAAaR,EAAAA,YACjB,CAAAS,EAA0BP,KAAG,IAA5B,UAAEC,KAAcC,GAAOK,EAAA,OACtBJ,EAAAA,EAAAA,KAAA,OACEH,IAAKA,EACLC,WAAWG,EAAAA,EAAAA,IAAG,gCAAiCH,MAC3CC,GACJ,IAGNI,EAAWD,YAAc,aAEzB,MAAMG,EAAYV,EAAAA,YAChB,CAAAW,EAA0BT,KAAG,IAA5B,UAAEC,KAAcC,GAAOO,EAAA,OACtBN,EAAAA,EAAAA,KAAA,MACEH,IAAKA,EACLC,WAAWG,EAAAA,EAAAA,IACT,qDACAH,MAEEC,GACJ,IAGNM,EAAUH,YAAc,YAEAP,EAAAA,YACtB,CAAAY,EAA0BV,KAAG,IAA5B,UAAEC,KAAcC,GAAOQ,EAAA,OACtBP,EAAAA,EAAAA,KAAA,KACEH,IAAKA,EACLC,WAAWG,EAAAA,EAAAA,IAAG,gCAAiCH,MAC3CC,GACJ,IAGUG,YAAc,kBAE9B,MAAMM,EAAcb,EAAAA,YAClB,CAAAc,EAA0BZ,KAAG,IAA5B,UAAEC,KAAcC,GAAOU,EAAA,OACtBT,EAAAA,EAAAA,KAAA,OAAKH,IAAKA,EAAKC,WAAWG,EAAAA,EAAAA,IAAG,WAAYH,MAAgBC,GAAS,IAGtES,EAAYN,YAAc,cAE1B,MAAMQ,EAAaf,EAAAA,YACjB,CAAAgB,EAA0Bd,KAAG,IAA5B,UAAEC,KAAcC,GAAOY,EAAA,OACtBX,EAAAA,EAAAA,KAAA,OACEH,IAAKA,EACLC,WAAWG,EAAAA,EAAAA,IAAG,6BAA8BH,MACxCC,GACJ,IAGNW,EAAWR,YAAc,Y,6DClElB,SAASD,IAAe,IAAD,IAAAW,EAAAC,UAAAC,OAARC,EAAM,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAANF,EAAME,GAAAJ,UAAAI,GAC1B,OAAOC,EAAAA,EAAAA,KAAQC,EAAAA,EAAAA,GAAKJ,GACtB,C,kQCOA,MAAMK,EAAOC,EAAAA,GAEPC,EAAY,CAChBC,QAAS,GACTC,YAAa,GACbC,eAAgB,KAChBC,MAAM,EACNC,MAAM,EACNC,WAAY,EACZC,SAAU,EACVC,SAAU,EACVC,UAAW,EACXC,QAAS,GAyJX,EAtJwBC,KACtB,MAAM,KAAEC,EAAI,KAAEC,EAAI,QAAEC,EAAO,WAAEC,EAAU,oBAAEC,IAAwBC,EAAAA,EAAAA,MAC1DC,EAAYC,IAAiBC,EAAAA,EAAAA,UAASpB,IACtCqB,EAAOC,IAAYF,EAAAA,EAAAA,UAAS,OAC5BG,EAAUC,IAAeJ,EAAAA,EAAAA,WAAS,IAClCK,EAAYC,IAAiBN,EAAAA,EAAAA,UAAS,KACtCO,EAAkBC,IAAuBR,EAAAA,EAAAA,UAAS,KAGlDS,EAASC,IAAcV,EAAAA,EAAAA,UAAS,KAChCW,EAAMC,IAAWZ,EAAAA,EAAAA,UAAS,MAEjCa,EAAAA,EAAAA,YAAU,MAERC,EAAAA,EAAAA,MACGC,MAAMC,IACLV,EAAcU,GAAQ,GAAG,GACzB,GACH,KAMHH,EAAAA,EAAAA,YAAU,KACRT,GAAY,IACZa,EAAAA,EAAAA,IAAU,CAAEzB,OAAMC,OAAMgB,UAASE,OAAMO,SAAUX,IAC9CQ,MAAMC,IACDA,GAAQ1C,MAAM6C,QAAQH,EAAKnC,SAC7BkB,EAAciB,GAEdjB,EAAcnB,GAEhBwB,GAAY,EAAM,IAEnBgB,OAAM,KACLhB,GAAY,EAAM,GAClB,GACH,CAACZ,EAAMC,EAAMC,EAASe,EAASE,EAAMJ,IAiBxC,OACEc,EAAAA,EAAAA,MAAA,OAAKjE,UAAU,QAAOkE,SAAA,EACpBD,EAAAA,EAAAA,MAAA,WAASjE,UAAU,yBAAwBkE,SAAA,EACzChE,EAAAA,EAAAA,KAAA,MAAIF,UAAU,6EAA4EkE,SAAC,kBAK3FD,EAAAA,EAAAA,MAAA,OAAKjE,UAAU,kDAAiDkE,SAAA,EAE9DD,EAAAA,EAAAA,MAAA,UACEjE,UAAU,yDACVmE,MAAOhB,EACPiB,SAhDoBC,IAC5BjB,EAAoBiB,EAAEC,OAAOH,MAAM,EA+CID,SAAA,EAE/BhE,EAAAA,EAAAA,KAAA,UAAQiE,MAAM,GAAED,SAAC,mBAChBjB,EAAWsB,KAAI,CAACC,EAAcC,KAC7BvE,EAAAA,EAAAA,KAAA,UAAoBiE,MAAOK,EAAaN,SACrCM,GADUC,SAOjBR,EAAAA,EAAAA,MAAA,OAAKjE,UAAU,iGAAgGkE,SAAA,EAC7GhE,EAAAA,EAAAA,KAACwE,EAAAA,EAAK,CACJC,YAAY,wBACZ3E,UAAU,oDACVmE,MAAOd,EACPe,SAAWC,IACTO,QAAQC,IAAI,mBAAoBR,EAAEC,OAAOH,OACzCb,EAAWe,EAAEC,OAAOH,MAAM,KAI9BjE,EAAAA,EAAAA,KAAC4E,EAAAA,EAAM,CACL9E,UAAU,8FACV+E,QAlDaC,KACnBzC,EAAW,GACXS,GAAY,IACZa,EAAAA,EAAAA,IAAU,CAAEzB,KAAM,EAAGC,OAAMgB,UAASE,OAAMO,SAAUX,IACjDQ,MAAMC,IACLjB,EAAciB,GAAQ1C,MAAM6C,QAAQH,EAAKnC,SAAWmC,EAAOpC,GAC3DwB,GAAY,EAAM,IAEnBgB,OAAM,KACLhB,GAAY,EAAM,GAClB,EAwCwBkB,UAEtBhE,EAAAA,EAAAA,KAAC+E,EAAAA,EAAU,CAACjF,UAAU,qBAM5BE,EAAAA,EAAAA,KAAA,OAAKF,UAAU,6DAA4DkE,SACxExB,EAAWjB,SAAWiB,EAAWjB,QAAQT,OAAS,EACjD0B,EAAWjB,QAAQ8C,KAAKW,IAIpBjB,EAAAA,EAAAA,MAAA,OAEEjE,UAAU,6BACV+E,QAASA,IAAMvC,EAAoB0C,EAAQC,KAAKjB,SAAA,EAGhDD,EAAAA,EAAAA,MAAA,OAAKjE,UAAU,qCAAoCkE,SAAA,EACjDhE,EAAAA,EAAAA,KAAA,KAAGF,UAAU,uCAAsCkE,SAChDgB,EAAQV,gBAEXtE,EAAAA,EAAAA,KAAA,OACEkF,IAAK,GAAG9D,uBAA0B4D,EAAQG,gBAAgB,KAC1DC,IAAKJ,EAAQK,MACbvF,UAAU,+DAKdiE,EAAAA,EAAAA,MAAA,OAAKjE,UAAU,sBAAqBkE,SAAA,CACjC,KAEDhE,EAAAA,EAAAA,KAAA,QAAMF,UAAU,wCAAuCkE,SACpDgB,EAAQK,SAEXtB,EAAAA,EAAAA,MAAA,QAAMjE,UAAU,8BAA6BkE,SAAA,CAAC,SAC1CgB,EAAQM,OAAOC,yBAxBhBP,EAAQC,QA+BnBjF,EAAAA,EAAAA,KAAA,KAAGF,UAAU,0CAAyCkE,SAAC,iCAO7DhE,EAAAA,EAAAA,KAACwF,EAAAA,EAAa,CAAChD,WAAYA,EAAYiD,SAAUpD,MAC7C,E,0BCvJV,MA6IA,EA7ImBqD,KAEjB,MAAMC,GAAWC,EAAAA,EAAAA,QAAO,MAClBC,GAAYD,EAAAA,EAAAA,QAAO,MACnBE,GAASF,EAAAA,EAAAA,QAAO,MAChBG,GAAaH,EAAAA,EAAAA,QAAO,MACpBI,GAAaJ,EAAAA,EAAAA,QAAO,MACpBK,GAAiBL,EAAAA,EAAAA,QAAO,MACxBM,GAAUN,EAAAA,EAAAA,QAAO,MACjBO,GAAWP,EAAAA,EAAAA,QAAO,OAGjBQ,EAASC,IAAc3D,EAAAA,EAAAA,WAAS,GAGjC4D,EAAezG,IACfA,EAAImC,SACNnC,EAAImC,QAAQuE,eAAe,CAAEC,SAAU,UACzC,EAgBF,OAZAjD,EAAAA,EAAAA,YAAU,KACR,MAAMkD,EAAeA,KACnB,GAAIN,EAASnE,QAAS,CACpB,MAAM0E,EAAcP,EAASnE,QAAQ2E,wBAAwBC,OAC7DP,EAAWK,GAAe,EAC5B,GAIF,OADAG,OAAOC,iBAAiB,SAAUL,GAC3B,IAAMI,OAAOE,oBAAoB,SAAUN,EAAa,GAC9D,KAGD1C,EAAAA,EAAAA,MAAA,OAAKjE,UAAU,aAAakH,MAAO,CAAEC,gBAAiB,WAAYjD,SAAA,EAEhEhE,EAAAA,EAAAA,KAAA,OAAKH,IAAKsG,EAASnC,UACjBhE,EAAAA,EAAAA,KAACkH,EAAAA,EAAY,CACXC,gBAAiBA,IAAMb,EAAYX,GACnCyB,iBAAkBA,IAAMd,EAAYT,GACpCwB,cAAeA,IAAMf,EAAYR,GACjCwB,kBAAmBA,IAAMhB,EAAYP,GACrCwB,kBAAmBA,IAAMjB,EAAYN,GACrCwB,sBAAuBA,IAAMlB,EAAYL,GACzCwB,eAAgBA,IAAMnB,EAAYJ,QAKtClG,EAAAA,EAAAA,KAAC0H,EAAAA,EAAY,KACb1H,EAAAA,EAAAA,KAAA,OAAKH,IAAKoG,EAAejC,UACvBhE,EAAAA,EAAAA,KAAC2H,EAAAA,EAAkB,OAErB3H,EAAAA,EAAAA,KAAA,OAAKH,IAAK8F,EAAS3B,UACjBhE,EAAAA,EAAAA,KAAC4H,EAAAA,EAAY,OAEf5H,EAAAA,EAAAA,KAAA,OAAKH,IAAKgG,EAAU7B,UAClBhE,EAAAA,EAAAA,KAAC6H,EAAAA,EAAqB,OAExB7H,EAAAA,EAAAA,KAAA,OAAKH,IAAKiG,EAAO9B,UACfhE,EAAAA,EAAAA,KAAC8H,EAAAA,EAAkB,OAErB9H,EAAAA,EAAAA,KAAA,OAAKH,IAAKkG,EAAW/B,UACnBhE,EAAAA,EAAAA,KAAC+H,EAAAA,EAAsB,OAEzB/H,EAAAA,EAAAA,KAAA,OAAKH,IAAKmG,EAAWhC,UACnBhE,EAAAA,EAAAA,KAACgI,EAAAA,EAAsB,OAEzBhI,EAAAA,EAAAA,KAAA,OAAKH,IAAKqG,EAAQlC,UAChBhE,EAAAA,EAAAA,KAACiC,EAAe,MAIjBmE,IACCpG,EAAAA,EAAAA,KAAA,OAAKF,UAAU,4DAA2DkE,UACxED,EAAAA,EAAAA,MAAA,MAAIjE,UAAU,YAAWkE,SAAA,EACzBhE,EAAAA,EAAAA,KAAA,MAAAgE,UACIhE,EAAAA,EAAAA,KAAA,UACE6E,QAASA,IAAMyB,EAAYL,GAC3BgC,MAAM,uBACNnI,UAAU,gEAA+DkE,UAEzEhE,EAAAA,EAAAA,KAACkI,EAAAA,EAAe,CAACC,KAAMC,EAAAA,WAG3BpI,EAAAA,EAAAA,KAAA,MAAAgE,UACEhE,EAAAA,EAAAA,KAAA,UACE6E,QAASA,IAAMyB,EAAYX,GAC3B7F,UAAU,gEAA+DkE,UAEzEhE,EAAAA,EAAAA,KAACkI,EAAAA,EAAe,CAACC,KAAME,EAAAA,WAG3BrI,EAAAA,EAAAA,KAAA,MAAAgE,UACEhE,EAAAA,EAAAA,KAAA,UACE6E,QAASA,IAAMyB,EAAYT,GAC3B/F,UAAU,gEAA+DkE,UAEzEhE,EAAAA,EAAAA,KAACkI,EAAAA,EAAe,CAACC,KAAMG,EAAAA,WAG3BtI,EAAAA,EAAAA,KAAA,MAAAgE,UACEhE,EAAAA,EAAAA,KAAA,UACE6E,QAASA,IAAMyB,EAAYR,GAC3BhG,UAAU,gEAA+DkE,UAEzEhE,EAAAA,EAAAA,KAACkI,EAAAA,EAAe,CAACC,KAAMI,EAAAA,WAG3BvI,EAAAA,EAAAA,KAAA,MAAAgE,UACEhE,EAAAA,EAAAA,KAAA,UACE6E,QAASA,IAAMyB,EAAYP,GAC3BjG,UAAU,gEAA+DkE,UAEzEhE,EAAAA,EAAAA,KAACkI,EAAAA,EAAe,CAACC,KAAMK,EAAAA,WAG3BxI,EAAAA,EAAAA,KAAA,MAAAgE,UACEhE,EAAAA,EAAAA,KAAA,UACE6E,QAASA,IAAMyB,EAAYN,GAC3BlG,UAAU,gEAA+DkE,UAEzEhE,EAAAA,EAAAA,KAACkI,EAAAA,EAAe,CAACC,KAAMM,EAAAA,WAGjBzI,EAAAA,EAAAA,KAAA,MAAAgE,UACRhE,EAAAA,EAAAA,KAAA,UACE6E,QAASA,IAAMyB,EAAYJ,GAC3BpG,UAAU,gEAA+DkE,UAEzEhE,EAAAA,EAAAA,KAACkI,EAAAA,EAAe,CAACC,KAAMO,EAAAA,iBAM7B,C","sources":["components/ui/Card.js","lib/utils.js","components/products/NUListComponent.js","pages/products/NUListPage.js"],"sourcesContent":["import * as React from \"react\";\nimport { cn } from \"../../lib/utils\"; // Adjust the import path if necessary\n\nconst Card = React.forwardRef(\n  ({ className, ...props }, ref) => (\n    <div\n      ref={ref}\n      className={cn(\n        \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n);\nCard.displayName = \"Card\";\n\nconst CardHeader = React.forwardRef(\n  ({ className, ...props }, ref) => (\n    <div\n      ref={ref}\n      className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n      {...props}\n    />\n  )\n);\nCardHeader.displayName = \"CardHeader\";\n\nconst CardTitle = React.forwardRef(\n  ({ className, ...props }, ref) => (\n    <h3\n      ref={ref}\n      className={cn(\n        \"text-2xl font-semibold leading-none tracking-tight\",\n        className\n      )}\n      {...props}\n    />\n  )\n);\nCardTitle.displayName = \"CardTitle\";\n\nconst CardDescription = React.forwardRef(\n  ({ className, ...props }, ref) => (\n    <p\n      ref={ref}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n);\nCardDescription.displayName = \"CardDescription\";\n\nconst CardContent = React.forwardRef(\n  ({ className, ...props }, ref) => (\n    <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n  )\n);\nCardContent.displayName = \"CardContent\";\n\nconst CardFooter = React.forwardRef(\n  ({ className, ...props }, ref) => (\n    <div\n      ref={ref}\n      className={cn(\"flex items-center p-6 pt-0\", className)}\n      {...props}\n    />\n  )\n);\nCardFooter.displayName = \"CardFooter\";\n\nexport default Card;\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardDescription,\n  CardContent,\n};\n","import { clsx } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\n\nexport function cn(...inputs) {\n  return twMerge(clsx(inputs));\n}\n","import React, { useEffect, useState } from \"react\";\nimport useCustomMove from \"../../hooks/useCustomMove\";\nimport FetchingModal from \"../common/FetchingModal\";\nimport PageComponent from \"../common/PageComponent\";\nimport { Card, CardTitle, CardDescription } from \"../ui/Card\";\nimport Button from \"../ui/Button\";\nimport { getListNU, getProductCategoriesNU } from \"../../api/nuProductApi\";\nimport \"../../Product.css\";\nimport { Input } from \"antd\";\nimport { SearchIcon } from \"lucide-react\";\nimport { API_SERVER_HOST } from \"../../api/reviewApi\";\n\nconst host = API_SERVER_HOST;\n\nconst initState = {\n  dtoList: [],\n  pageNumList: [],\n  pageRequestDTO: null,\n  prev: false,\n  next: false,\n  totalCount: 0,\n  prevPage: 0,\n  nextPage: 0,\n  totalPage: 0,\n  current: 0,\n};\n\nconst NUListComponent = () => {\n  const { page, size, refresh, moveToList, moveToProductReadNU } = useCustomMove();\n  const [serverData, setServerData] = useState(initState);\n  const [error, setError] = useState(null);\n  const [fetching, setFetching] = useState(false);\n  const [categories, setCategories] = useState([]); // Store fetched categories\n  const [selectedCategory, setSelectedCategory] = useState(\"\"); // Selected category\n \n  // New states for search\n  const [keyword, setKeyword] = useState(\"\");\n  const [type, setType] = useState(\"t\"); // Default type; adjust based on your needs\n\n  useEffect(() => {\n    // Fetch categories\n    getProductCategoriesNU()\n      .then((data) => {\n        setCategories(data || [])\n      })\n  }, []);\n\n  const handleCategoryChange = (e) => {\n    setSelectedCategory(e.target.value);\n  };\n\n  useEffect(() => {\n    setFetching(true);\n    getListNU({ page, size, keyword, type, category: selectedCategory })\n      .then((data) => {\n        if (data && Array.isArray(data.dtoList)) {\n          setServerData(data);\n        } else {\n          setServerData(initState);\n        }\n        setFetching(false);\n      })\n      .catch(() => {\n        setFetching(false);\n      });\n  }, [page, size, refresh, keyword, type, selectedCategory]);\n\n    \n      // Handle search submission\n      const handleSearch = () => {\n        moveToList(1);\n        setFetching(true);\n        getListNU({ page: 1, size, keyword, type, category: selectedCategory })\n          .then((data) => {\n            setServerData(data && Array.isArray(data.dtoList) ? data : initState);\n            setFetching(false);\n          })\n          .catch(() => {\n            setFetching(false);\n          });\n      };\n\n  return (\n    <div className=\"py-12\">\n      <section className=\"px-4 max-w-6xl mx-auto\">\n        <h2 className=\"mb-10 text-3xl font-bold text-center text-gray-800 tracking-wide uppercase\">\n          Our Products\n        </h2>\n\n        {/* Search Bar with Category Dropdown */}\n        <div className=\"mt-8 flex justify-center items-center space-x-4\">\n          {/* Dropdown for Categories */}\n          <select\n            className=\"bg-white border border-gray-300 rounded-lg p-3 text-sm\"\n            value={selectedCategory}\n            onChange={handleCategoryChange}\n          >\n            <option value=\"\">All Categories</option>\n            {categories.map((categoryName, index) => (\n              <option key={index} value={categoryName}>\n                {categoryName}\n              </option>\n            ))}\n          </select>\n\n          {/* Search Input */}\n          <div className=\"flex w-full h-12 max-w-xl bg-white rounded-lg shadow-lg overflow-hidden border border-gray-200\">\n            <Input\n              placeholder=\"Search experiences...\"\n              className=\"flex-grow border-0 focus:ring-0 text-lg py-6 px-6\"\n              value={keyword}\n              onChange={(e) => {\n                console.log(\"Keyword updated:\", e.target.value);\n                setKeyword(e.target.value);\n              }}\n            />\n\n            <Button\n              className=\"hidden sm:flex bg-orange-800 hover:bg-orange-700 text-white font-medium tracking-wide py-6 \"\n              onClick={handleSearch}\n            >\n              <SearchIcon className=\"h-5 w-5\" />\n            </Button>\n          </div>\n        </div>\n\n        {/* Product Cards */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 mt-10\">\n          {serverData.dtoList && serverData.dtoList.length > 0 ? (\n            serverData.dtoList.map((product) => {\n               \n\n              return (\n                <div\n                  key={product.pno}\n                  className=\"flex flex-col items-center\"\n                  onClick={() => moveToProductReadNU(product.pno)}\n                >\n                  {/* Product Image */}\n                  <div className=\"relative w-56 h-80 overflow-hidden\">\n                    <p className=\"py-1 text-gray-700 text-xs text-left\">\n                      {product.categoryName}\n                    </p>\n                    <img\n                      src={`${host}/api/products/view/${product.uploadFileNames[0]}`}\n                      alt={product.pname}\n                      className=\"w-full h-full object-cover opacity-80 hover:opacity-90\"\n                    />\n                  </div>\n\n                  {/* Product Details */}\n                  <div className=\"w-56 text-left mt-2\">\n                    {\" \"}\n                    {/* Width matches the image */}\n                    <span className=\"block text-sm font-bold text-gray-700\">\n                      {product.pname}\n                    </span>\n                    <span className=\"block text-sm text-gray-500\">\n                      ₩{product.pprice.toLocaleString()}\n                    </span>\n                  </div>\n                </div>\n              );\n            })\n          ) : (\n            <p className=\"text-center text-gray-500 col-span-full\">\n              No products available.\n            </p>\n          )}\n        </div>\n      </section>\n\n      <PageComponent serverData={serverData} movePage={moveToList} />\n    </div>\n  );\n};\n\nexport default NUListComponent;\n","import React, { useRef, useState, useEffect } from \"react\";\nimport ProductImage from \"../../layouts/ProductImage\";\nimport ProcessSteps from \"../../layouts/ProcessSteps\";\nimport AboutProduct from \"../../components/products/AboutProduct\";\nimport MostPopularProduct from \"../../components/products/MostpopularProduct\";\nimport ProductCategoryBeauty from \"../../components/products/category/ProductCategoryBeauty\";\nimport ProductCategoryTea from \"../../components/products/category/ProductCategoryTea\";\nimport ProductCategoryFashion from \"../../components/products/category/ProductCategoryFashion\";\nimport ProductCategoryGourmet from \"../../components/products/category/ProductCategoryGourmet\";\nimport NUListComponent from \"../../components/products/NUListComponent\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faHeart,\n  faLeaf,\n  faTshirt,\n  faUtensils,\n  faCircleInfo,\n  faGift,\n  faMagnifyingGlass,\n  faFire,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nconst NUListPage = () => {\n  // Refs for each section\n  const aboutRef = useRef(null);\n  const beautyRef = useRef(null);\n  const teaRef = useRef(null);\n  const fashionRef = useRef(null);\n  const gourmetRef = useRef(null);\n  const mostPopularRef = useRef(null);\n  const listRef = useRef(null);\n  const imageRef = useRef(null);\n\n  // State to track navbar visibility\n  const [showNav, setShowNav] = useState(false);\n\n  // Scroll function\n  const scrollToRef = (ref) => {\n    if (ref.current) {\n      ref.current.scrollIntoView({ behavior: \"smooth\" });\n    }\n  };\n\n  // Track scrolling to toggle navigation bar visibility\n  useEffect(() => {\n    const handleScroll = () => {\n      if (imageRef.current) {\n        const imageBottom = imageRef.current.getBoundingClientRect().bottom;\n        setShowNav(imageBottom <= 0); // Show navbar when ProductImage scrolls out of view\n      }\n    };\n\n    window.addEventListener(\"scroll\", handleScroll);\n    return () => window.removeEventListener(\"scroll\", handleScroll);\n  }, []);\n\n  return (\n    <div className=\"p-4 w-full\" style={{ backgroundColor: \"#E0DCD0\" }}>\n      {/* ProductImage with scroll-to functions */}\n      <div ref={imageRef}>\n        <ProductImage\n          onScrollToAbout={() => scrollToRef(aboutRef)}\n          onScrollToBeauty={() => scrollToRef(beautyRef)}\n          onScrollToTea={() => scrollToRef(teaRef)}\n          onScrollToFashion={() => scrollToRef(fashionRef)}\n          onScrollToGourmet={() => scrollToRef(gourmetRef)}\n          onScrollToMostPopular={() => scrollToRef(mostPopularRef)}\n          onScrollToList={() => scrollToRef(listRef)}\n        />\n      </div>\n\n      {/* Sections */}\n      <ProcessSteps />\n      <div ref={mostPopularRef}>\n        <MostPopularProduct />\n      </div>\n      <div ref={aboutRef}>\n        <AboutProduct />\n      </div>\n      <div ref={beautyRef}>\n        <ProductCategoryBeauty />\n      </div>\n      <div ref={teaRef}>\n        <ProductCategoryTea />\n      </div>\n      <div ref={fashionRef}>\n        <ProductCategoryFashion />\n      </div>\n      <div ref={gourmetRef}>\n        <ProductCategoryGourmet />\n      </div>\n      <div ref={listRef}>\n        <NUListComponent />\n      </div>\n\n      {/* Floating Navbar */}\n      {showNav && (\n        <nav className=\"z-50 fixed top-1/2 right-4 transform -translate-y-1/2 p-4\">\n          <ul className=\"space-y-4\">\n          <li>\n              <button\n                onClick={() => scrollToRef(mostPopularRef)}\n                title=\"Most Popular Product\"\n                className=\"px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600\"\n              >\n                <FontAwesomeIcon icon={faFire} />\n              </button>\n            </li>\n            <li>\n              <button\n                onClick={() => scrollToRef(aboutRef)}\n                className=\"px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600\"\n              >\n                <FontAwesomeIcon icon={faCircleInfo} />\n              </button>\n            </li>\n            <li>\n              <button\n                onClick={() => scrollToRef(beautyRef)}\n                className=\"px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600\"\n              >\n                <FontAwesomeIcon icon={faHeart} />\n              </button>\n            </li>\n            <li>\n              <button\n                onClick={() => scrollToRef(teaRef)}\n                className=\"px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600\"\n              >\n                <FontAwesomeIcon icon={faLeaf} />\n              </button>\n            </li>\n            <li>\n              <button\n                onClick={() => scrollToRef(fashionRef)}\n                className=\"px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600\"\n              >\n                <FontAwesomeIcon icon={faTshirt} />\n              </button>\n            </li>\n            <li>\n              <button\n                onClick={() => scrollToRef(gourmetRef)}\n                className=\"px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600\"\n              >\n                <FontAwesomeIcon icon={faUtensils} />\n              </button>\n                      </li>\n                      <li>\n              <button\n                onClick={() => scrollToRef(listRef)}\n                className=\"px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600\"\n              >\n                <FontAwesomeIcon icon={faMagnifyingGlass} />\n              </button>\n            </li>\n          </ul>\n        </nav>\n      )}\n    </div>\n  );\n};\n\nexport default NUListPage;\n"],"names":["Card","React","_ref","ref","className","props","_jsx","cn","displayName","CardHeader","_ref2","CardTitle","_ref3","_ref4","CardContent","_ref5","CardFooter","_ref6","_len","arguments","length","inputs","Array","_key","twMerge","clsx","host","API_SERVER_HOST","initState","dtoList","pageNumList","pageRequestDTO","prev","next","totalCount","prevPage","nextPage","totalPage","current","NUListComponent","page","size","refresh","moveToList","moveToProductReadNU","useCustomMove","serverData","setServerData","useState","error","setError","fetching","setFetching","categories","setCategories","selectedCategory","setSelectedCategory","keyword","setKeyword","type","setType","useEffect","getProductCategoriesNU","then","data","getListNU","category","isArray","catch","_jsxs","children","value","onChange","e","target","map","categoryName","index","Input","placeholder","console","log","Button","onClick","handleSearch","SearchIcon","product","pno","src","uploadFileNames","alt","pname","pprice","toLocaleString","PageComponent","movePage","NUListPage","aboutRef","useRef","beautyRef","teaRef","fashionRef","gourmetRef","mostPopularRef","listRef","imageRef","showNav","setShowNav","scrollToRef","scrollIntoView","behavior","handleScroll","imageBottom","getBoundingClientRect","bottom","window","addEventListener","removeEventListener","style","backgroundColor","ProductImage","onScrollToAbout","onScrollToBeauty","onScrollToTea","onScrollToFashion","onScrollToGourmet","onScrollToMostPopular","onScrollToList","ProcessSteps","MostPopularProduct","AboutProduct","ProductCategoryBeauty","ProductCategoryTea","ProductCategoryFashion","ProductCategoryGourmet","title","FontAwesomeIcon","icon","faFire","faCircleInfo","faHeart","faLeaf","faTshirt","faUtensils","faMagnifyingGlass"],"sourceRoot":""}