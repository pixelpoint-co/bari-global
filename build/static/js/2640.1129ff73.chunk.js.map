{"version":3,"file":"static/js/2640.1129ff73.chunk.js","mappings":"yfAOA,MAAM,YAAEA,GAAgBC,EAAAA,EAIlBC,EAAa,CACf,CAAEC,MAAO,8BAA+BC,MAAO,+BAC/C,CAAED,MAAO,uBAAwBC,MAAO,wBACxC,CAAED,MAAO,2BAA4BC,MAAO,4BAC5C,CAAED,MAAO,mBAAoBC,MAAO,oBACpC,CAAED,MAAO,mBAAoBC,MAAO,qBAGlCC,EAAY,CACdC,IAAK,EACLC,MAAO,GACPC,MAAO,GACPC,OAAQ,EACRC,YAAa,EACbC,SAAU,GACVC,aAAc,GACdC,aAAc,OACdC,MAAO,GACPC,MAAO,IAuZX,EApZiBC,IAAuD,IAADC,EAAA,IAArD,UAAEC,EAAS,YAAEC,EAAW,QAAEC,EAAO,YAAEC,GAAaL,EAC9D,MAAOM,EAAMC,IAAWC,EAAAA,EAAAA,UAASN,EAAYC,EAAc,IAAKd,KACzDoB,EAAaC,IAAkBF,EAAAA,EAAAA,UAAS,KACxCG,EAAeC,IAAoBJ,EAAAA,EAAAA,UAAS,KAEnDK,EAAAA,EAAAA,YAAU,KACNN,GAAQO,IAAI,IACLA,EACHjB,aAAc,UACf,GACJ,CAACK,IAEJ,MAwBMa,EAAoBC,IACtB,MAAM,KAAEC,EAAI,MAAE9B,GAAU6B,EAAEE,OAGtBX,EADS,iBAATU,EACQ,IACDX,EACHV,aAAcT,EACdU,aAAc,QAEF,aAAToB,EAEC,IACDX,EACHX,SAAUR,GAGN,IACDmB,EACH,CAACW,GAAO9B,IAGhBgC,QAAQC,IAAI,qCAAad,EAAK,GAyClCO,EAAAA,EAAAA,YAAU,IACC,KACHJ,EAAYY,SAAQC,IAChBC,IAAIC,gBAAgBF,EAAKG,QAAQ,IAEjCnB,EAAKP,OACLO,EAAKP,MAAMsB,SAAQK,IACXA,aAAgBC,MAChBJ,IAAIC,gBAAgBD,IAAIK,gBAAgBF,GAC5C,GAER,GAEL,CAACjB,EAAaH,EAAKP,QAmHtB,OA9CAc,EAAAA,EAAAA,YAAU,KACN,GAAIX,GAAaC,EAAa,CACA0B,WAAa,IAADC,EAClC,IAA+B,QAA3BA,EAAA3B,EAAY4B,uBAAe,IAAAD,OAAA,EAA3BA,EAA6BE,QAAS,EACtC,IACI,MAAMC,EAAe9B,EAAY4B,gBAAgBG,KAAIL,UACjD,MAAMM,QAAiBC,MAAM,wCAAsBC,KAC7CC,QAAaH,EAASG,OAC5B,OAAO,IAAIX,KAAK,CAACW,GAAOD,EAAU,CAAEE,KAAMD,EAAKC,MAAO,IAEpDxC,QAAcyC,QAAQC,IAAIR,GAChC1B,EAAQ,IACDJ,EACHJ,MAAOA,GAEf,CAAE,MAAO2C,GACLvB,QAAQuB,MAAM,gDAAcA,EAChC,CACJ,EAEJC,EACJ,IACD,CAACzC,EAAWC,KAEfU,EAAAA,EAAAA,YAAU,KACN,GAAIX,GAAaC,GAAeA,EAAYL,MAAO,CAE/C,IAAI8C,EACJ,IACIA,EAAqC,kBAAtBzC,EAAYL,MACrB+C,KAAKC,MAAM3C,EAAYL,OACvBK,EAAYL,KACtB,CAAE,MAAOkB,GACL4B,EAAQzC,EAAYL,KACxB,CAGIiD,MAAMC,QAAQJ,IAAUA,EAAMZ,OAAS,GACvCzB,GAAQO,IAAI,IACLA,EACHhB,MAAO8C,KAGnB,IACD,CAAC1C,EAAWC,KAGX8C,EAAAA,EAAAA,MAACC,EAAAA,EAAM,CAACC,MAAM,EAAM/C,QAASA,EAASgD,SAAS,KAAKC,WAAS,EAAAC,SAAA,EACzDC,EAAAA,EAAAA,KAACC,EAAAA,EAAW,CAAAF,SACPpD,EAAY,4BAAU,sCAE3BqD,EAAAA,EAAAA,KAACE,EAAAA,EAAa,CAAAH,UACVC,EAAAA,EAAAA,KAACG,EAAAA,EAAG,CAACC,UAAU,OAAOC,SAvHR/B,UAAc,IAADgC,EACnC7C,EAAE8C,iBAIF,IADuB,qCACHC,KAAKzD,EAAKX,UAE1B,YADAqE,MAAM,0KAKE9D,IAAqC,OAAXC,QAAW,IAAXA,OAAW,EAAXA,EAAab,MAAOgB,EAAKhB,IAE/D,GAAIY,IAAcI,EAAKhB,IAEnB,YADA0E,MAAM,sFAIV,MAAMC,EAAW,IAAIC,SAErBD,EAASE,OAAO,QAAS7D,EAAKf,OAC9B0E,EAASE,OAAO,QAAS7D,EAAKd,OAC9ByE,EAASE,OAAO,SAAU7D,EAAKb,QAC/BwE,EAASE,OAAO,cAAe7D,EAAKZ,aACpCuE,EAASE,OAAO,WAAY7D,EAAKX,UACjCsE,EAASE,OAAO,eAAgB7D,EAAKV,cAIrCU,EAAKR,MAAMuB,SAAQ+C,IACfH,EAASE,OAAO,QAASC,GACzBjD,QAAQC,IAAI,eAAgBgD,EAAK,KAGvB,QAAVP,EAAAvD,EAAKP,aAAK,IAAA8D,OAAA,EAAVA,EAAY7B,QAAS,GACrB1B,EAAKP,MAAMsB,SAAQK,IACXA,aAAgBC,MAChBsC,EAASE,OAAO,QAASzC,EAC7B,IAIR,IAAK,IAAI2C,KAAQJ,EAASK,UACtBnD,QAAQC,IAAIiD,EAAK,GAAK,KAAOA,EAAK,IAEtC,IACI,GAAInE,EAAW,CACX,GAAIS,EAAcqB,OAAS,EACvB,IAAK,MAAMuC,KAAS5D,QACV6D,EAAAA,EAAAA,IAAgBD,EAAMjF,IAAKiF,EAAMlC,gBAGzCoC,EAAAA,EAAAA,IAAWnE,EAAKhB,IAAK2E,GAC3BD,MAAM,iEACV,YACUU,EAAAA,EAAAA,IAAQT,GACd9C,QAAQC,IAAI6C,GACZD,MAAM,kEAEV5D,IACAuE,OAAOC,SAASC,QACpB,CAAE,MAAOnC,GACLvB,QAAQuB,MAAM,iDAAeA,GAC7BsB,MAAM,+EACV,GAuD2Dc,GAAI,CAAEC,GAAI,GAAIzB,UAC7DL,EAAAA,EAAAA,MAACS,EAAAA,EAAG,CAACoB,GAAI,CAAEE,QAAS,OAAQC,cAAe,SAAUC,IAAK,GAAI5B,SAAA,EAC1DC,EAAAA,EAAAA,KAAC4B,EAAAA,EAAS,CACN9B,WAAS,EACTjE,MAAM,qBACN6B,KAAK,QACL9B,MAAOmB,EAAKf,MACZ6F,SAAUrE,EACVsE,UAAQ,KAEZpC,EAAAA,EAAAA,MAACqC,EAAAA,EAAW,CAACjC,WAAS,EAAAC,SAAA,EAClBC,EAAAA,EAAAA,KAACgC,EAAAA,EAAU,CAACC,GAAG,wBAAuBlC,SAAC,8BACvCC,EAAAA,EAAAA,KAACkC,EAAAA,EAAM,CACHC,QAAQ,wBACRF,GAAG,kBACHvE,KAAK,eACL7B,MAAM,2BACND,MAAOmB,EAAKV,aACZwF,SAAUrE,EACVsE,UAAQ,EAAA/B,SAEPpE,EAAWgD,KAAIyD,IACZpC,EAAAA,EAAAA,KAACqC,EAAAA,EAAQ,CAAsBzG,MAAOwG,EAASxG,MAAMmE,SAChDqC,EAASvG,OADCuG,EAASxG,eAgBpCoE,EAAAA,EAAAA,KAAC4B,EAAAA,EAAS,CACN9B,WAAS,EACTjE,MAAM,eACN6B,KAAK,WACL9B,MAAOmB,EAAKX,SACZyF,SAAUrE,EACVsE,UAAQ,EACRQ,WAAW,+CACXC,YAAY,gDAGhBvC,EAAAA,EAAAA,KAACvE,EAAW,CACR+G,MAAO,CACHC,MAAO,OACPC,OAAQ,MAEZ9G,MAAOmB,EAAKR,OAASQ,EAAKR,MAAMkC,QAAU,EAAI,CAC1CkE,IAAM5F,EAAKR,MAAM,IACjBoG,IAAM5F,EAAKR,MAAMQ,EAAKR,MAAMkC,OAAS,KACrC,KACJoD,SAtRExC,IACtB,IAAKA,EAKD,YAJArC,GAAQO,IAAI,IACLA,EACHhB,MAAO,OAKf,MAAOqG,EAAWC,GAAWxD,EACvByD,EAAY,GAClB,IAAIC,EAAcH,EAElB,KAAOG,GAAeF,GAClBC,EAAUE,KAAKD,EAAYE,OAAO,eAClCF,EAAcA,EAAYG,IAAI,EAAG,OAGrClG,GAAQO,IAAI,IACLA,EACHhB,MAAOuG,KACR,EAkQiBG,OAAO,aACPV,YAAa,CAAC,4BAAS,6BACvBY,WAAY,CAAET,OAAQ,SAG1B1C,EAAAA,EAAAA,KAAC4B,EAAAA,EAAS,CACN9B,WAAS,EACTsD,WAAS,EACTC,KAAM,EACNxH,MAAM,4BACN6B,KAAK,QACL9B,MAAOmB,EAAKd,MACZ4F,SAAUrE,KAGdkC,EAAAA,EAAAA,MAACS,EAAAA,EAAG,CAACoB,GAAI,CAAEE,QAAS,OAAQE,IAAK,GAAI5B,SAAA,EACjCC,EAAAA,EAAAA,KAAC4B,EAAAA,EAAS,CACN9B,WAAS,EACTd,KAAK,SACLnD,MAAM,eACN6B,KAAK,SACL9B,MAAOmB,EAAKb,OACZ2F,SAAUrE,EACVsE,UAAQ,KAEZ9B,EAAAA,EAAAA,KAAC4B,EAAAA,EAAS,CACN9B,WAAS,EACTd,KAAK,SACLnD,MAAM,4BACN6B,KAAK,cACL9B,MAAOmB,EAAKZ,YACZ0F,SAAUrE,EACVsE,UAAQ,QAIhBpC,EAAAA,EAAAA,MAAC4D,EAAAA,EAAM,CACHC,QAAQ,YACRnD,UAAU,QACVoD,WAAWxD,EAAAA,EAAAA,KAACyD,EAAAA,EAAU,IAAI1D,SAAA,CAC7B,yCAEGC,EAAAA,EAAAA,KAAA,SACIhB,KAAK,OACL0E,QAAM,EACNC,UAAQ,EACRC,OAAO,UACP/B,SAtRFpE,IACtB,MAAMoG,EAAWrE,MAAMsE,KAAKrG,EAAEE,OAAOnB,OAAS,IAC9C,IAAKqH,EAASpF,OAAQ,OAEtB,MAAMsF,EAAehH,EAAKP,OAAS,GAChBuH,EAAatF,OAASoF,EAASpF,OAxFvC,GA2FPgC,MAAM,iHAILoD,EAASG,OAAM7F,GAAQA,EAAKa,KAAKiF,WAAW,YAKjDjH,GAAQO,IAAI,IACLA,EACHf,MAAO,IAAIuH,KAAiBF,OAN5BpD,MAAM,2FAOP,QAuQwB,QAAV/D,EAAAK,EAAKP,aAAK,IAAAE,OAAA,EAAVA,EAAY+B,QAAS,IAClBuB,EAAAA,EAAAA,KAACG,EAAAA,EAAG,CAACoB,GAAI,CAAEE,QAAS,OAAQE,IAAK,EAAGuC,SAAU,QAASnE,SAClDhD,EAAKP,MAAMmC,KAAI,CAACR,EAAMgG,KACnBzE,EAAAA,EAAAA,MAACS,EAAAA,EAAG,CAAaoB,GAAI,CAAE6C,SAAU,WAAY3B,MAAO,IAAK4B,OAAQ,KAAMtE,SAAA,EACnEC,EAAAA,EAAAA,KAAA,OACIsE,IAAKtG,IAAIK,gBAAgBF,GACzBoG,IAAK,WAAWJ,EAAQ,IACxB3B,MAAO,CACHC,MAAO,OACP4B,OAAQ,OACRG,UAAW,QACXC,aAAc,UAGtBzE,EAAAA,EAAAA,KAACsD,EAAAA,EAAM,CACHoB,QAASA,IAnR7BP,KAChB,GAAIxH,GAAaI,EAAKyB,iBAAmBzB,EAAKyB,gBAAgB2F,GAAQ,CAClE,MAAMrF,EAAW/B,EAAKyB,gBAAgB2F,GACtC9G,GAAiBE,GAAQ,IAAIA,EAAM,CAAEuB,WAAU/C,IAAKgB,EAAKhB,OAC7D,CAEAiB,GAAQO,IAAI,IACLA,EACHf,MAAOe,EAAKf,MAAMmI,QAAO,CAACC,EAAGC,IAAMA,IAAMV,IACzC3F,gBAAiBjB,EAAKiB,gBAClBjB,EAAKiB,gBAAgBmG,QAAO,CAACC,EAAGC,IAAMA,IAAMV,IAC5C,MACL,EAuQgDW,CAAWX,GAC1B5C,GAAI,CACA6C,SAAU,WACVW,KAAM,EACNC,OAAQ,EACRC,SAAU,OACVxC,MAAO,OACP4B,OAAQ,OACRI,aAAc,OACdS,EAAG,EACHC,QAAS,aACTC,MAAO,QACP,UAAW,CACPD,QAAS,eAEfpF,SACL,WA5BKoE,QAoCtBzE,EAAAA,EAAAA,MAACS,EAAAA,EAAG,CAACoB,GAAI,CAAEE,QAAS,OAAQE,IAAK,EAAG0D,eAAgB,WAAY7D,GAAI,GAAIzB,SAAA,EACpEC,EAAAA,EAAAA,KAACsD,EAAAA,EAAM,CACHtE,KAAK,SACLuE,QAAQ,YACR6B,MAAM,UAASrF,SAEdpD,EAAY,2BAAS,8BAE1BqD,EAAAA,EAAAA,KAACsD,EAAAA,EAAM,CACHC,QAAQ,WACRmB,QAAS7H,EAAQkD,SACpB,6BAOZ,E,0BC/YjB,MAEMjE,EAAY,CACdwJ,QAAS,GACTC,YAAa,GACbC,eAAgB,KAChBjI,MAAM,EACNkI,MAAM,EACNC,WAAY,EACZC,SAAU,EACVC,SAAU,EACVC,UAAW,EACXC,QAAS,GA2kBb,EAxkB4BC,KAAO,IAADC,EAAAC,EAC9B,MAAOC,EAAYC,IAAiBlJ,EAAAA,EAAAA,UAASnB,IACtCa,EAAWyJ,IAAgBnJ,EAAAA,EAAAA,WAAS,IACpCoJ,EAAUC,IAAerJ,EAAAA,EAAAA,UAAS,IAClCsJ,EAAYC,IAAiBvJ,EAAAA,EAAAA,WAAS,IACtCwJ,EAAYC,IAAiBzJ,EAAAA,EAAAA,UAAS,KAEtC0J,EAAgBC,IAAqB3J,EAAAA,EAAAA,WAAS,IAE9CH,EAAa+J,IAAkB5J,EAAAA,EAAAA,UAAS,OACxC6J,EAAcC,IAAmB9J,EAAAA,EAAAA,UAAS,OAI1C+J,EAAMC,IAAWhK,EAAAA,EAAAA,UAAS,IAC1BiK,EAAMC,IAAWlK,EAAAA,EAAAA,UAAS,IAC1BmK,EAASC,IAAcpK,EAAAA,EAAAA,UAAS,KAChC+B,EAAMsI,IAAWrK,EAAAA,EAAAA,UAAS,MAE3B,gBAAEsK,KAAoBC,EAAAA,EAAAA,MAErBC,GAAoBC,KAAyBzK,EAAAA,EAAAA,WAAS,IACtD0K,GAAcC,KAAmB3K,EAAAA,EAAAA,UAAS,OAC1C4K,GAAaC,KAAkB7K,EAAAA,EAAAA,UAAS,IAEzC8K,GAAgBA,KAClBnK,QAAQC,IAAI,0CAAa,CACrBmK,qBAAKhB,EACLiB,qBAAKf,EACLgB,qBAAKd,EACLe,eAAInJ,KAGRoJ,EAAAA,EAAAA,IAAc,CAAEpB,OAAME,OAAME,UAASpI,SAChCqJ,MAAMC,IACHnC,EAAcmC,EAAK,IAEtBC,OAAOC,IACJ5K,QAAQuB,MAAM,gDAAcqJ,GAC5BjB,GAAgBiB,EAAI,GACtB,EAGJC,GAAoBC,IACtB9K,QAAQC,IAAI,gDAAc,CACtB8K,iCAAO3B,EACP4B,2BAAMF,EACNG,iCAAO3C,EAAWL,YAGtB,IACIoB,EAAQyB,EACZ,CAAE,MAAOF,GACL5K,QAAQuB,MAAM,sEAAqBqJ,EACvC,GAiEEM,GAAcA,KAChBtC,GAAc,GACdJ,GAAa,GACbW,EAAgB,MAChBgB,IAAe,EAenB,OAJAzK,EAAAA,EAAAA,YAAU,KACNyK,IAAe,GAChB,CAACf,EAAME,EAAME,EAASpI,KAGrBU,EAAAA,EAAAA,MAAAqJ,EAAAA,SAAA,CAAAhJ,SAAA,EACIC,EAAAA,EAAAA,KAAA,OAAKwC,MAAO,CACRf,QAAS,OACT4D,eAAgB,SAChB5C,MAAO,OACPuG,UAAW,OACXC,aAAc,QAChBlJ,UACEL,EAAAA,EAAAA,MAAA,OAAK8C,MAAO,CACRf,QAAS,OACTgB,MAAO,MACPd,IAAK,QACP5B,SAAA,EACEC,EAAAA,EAAAA,KAAA,SACIwC,MAAO,CACH0G,KAAM,EACNC,QAAS,SACT1E,aAAc,MACd2E,OAAQ,kBAEZ7G,YAAY,+EACZ3G,MAAOwL,EACPvF,SAAWpE,GAAM4J,EAAW5J,EAAEE,OAAO/B,UAEzC8D,EAAAA,EAAAA,MAAC4D,EAAAA,EAAM,CACHC,QAAQ,YACRmB,QAASqD,GACTvF,MAAO,CAAEyC,SAAU,SAAUlF,SAAA,EAE7BC,EAAAA,EAAAA,KAACqJ,EAAAA,EAAM,CAACnC,KAAM,GAAI1E,MAAO,CAAE8G,YAAa,YAAc,wBAMlE5J,EAAAA,EAAAA,MAACS,EAAAA,EAAG,CAACoB,GAAI,CAAEkB,MAAO,OAAQyC,EAAG,GAAInF,SAAA,EAC7BC,EAAAA,EAAAA,KAACG,EAAAA,EAAG,CAACoB,GAAI,CAAEgI,aAAc,EAAGC,YAAa,UAAWC,GAAI,GAAI1J,UACxDL,EAAAA,EAAAA,MAACgK,EAAAA,EAAI,CAAC9N,MAAOyK,EAAUxE,SAAUA,CAACpE,EAAGkM,IAAarD,EAAYqD,GAAU5J,SAAA,EACpEC,EAAAA,EAAAA,KAAC4J,EAAAA,EAAG,CAAC/N,MAAM,wBACXmE,EAAAA,EAAAA,KAAC4J,EAAAA,EAAG,CAAC/N,MAAM,wBACXmE,EAAAA,EAAAA,KAAC4J,EAAAA,EAAG,CAAC/N,MAAM,6BAInBmE,EAAAA,EAAAA,KAACG,EAAAA,EAAG,CAACoB,GAAI,CAAEE,QAAS,OAAQ4D,eAAgB,WAAYoE,GAAI,GAAI1J,UAC5DC,EAAAA,EAAAA,KAACsD,EAAAA,EAAM,CACHC,QAAQ,YACRC,WAAWxD,EAAAA,EAAAA,KAAC6J,EAAAA,EAAO,IACnBnF,QAASA,KACL8B,GAAc,GACdE,EAAc,OACdN,GAAa,GACbW,EAAgB,KAAK,EACvBhH,SACL,wCAKLC,EAAAA,EAAAA,KAAC8J,EAAAA,EAAc,CAAC1J,UAAW2J,EAAAA,EAAMhK,UAC7BL,EAAAA,EAAAA,MAACsK,EAAAA,EAAK,CAAAjK,SAAA,EACFC,EAAAA,EAAAA,KAACiK,EAAAA,EAAS,CAAAlK,UACNL,EAAAA,EAAAA,MAACwK,EAAAA,EAAQ,CAAAnK,SAAA,EACLC,EAAAA,EAAAA,KAACmK,EAAAA,EAAS,CAAApK,SAAC,wBACXC,EAAAA,EAAAA,KAACmK,EAAAA,EAAS,CAAApK,SAAC,kBACXC,EAAAA,EAAAA,KAACmK,EAAAA,EAAS,CAAApK,SAAC,wBACXC,EAAAA,EAAAA,KAACmK,EAAAA,EAAS,CAAApK,SAAC,kBACXC,EAAAA,EAAAA,KAACmK,EAAAA,EAAS,CAAApK,SAAC,kBACXC,EAAAA,EAAAA,KAACmK,EAAAA,EAAS,CAAApK,SAAC,uBAGnBC,EAAAA,EAAAA,KAACoK,EAAAA,EAAS,CAAArK,SACa,QADbiG,EACLE,EAAWZ,eAAO,IAAAU,OAAA,EAAlBA,EAAoBrH,KAAK5B,IAAU,IAADsN,EAAAC,EAAAC,EAAAC,EAE/B,MAAMC,EAAsB,QAAbJ,EAAGtN,EAAKR,aAAK,IAAA8N,OAAA,EAAVA,EAAY1L,KAAI+L,IAC9B,IACI,OAAOpL,KAAKC,MAAMmL,EACtB,CAAE,MAAOjN,GAEL,OADAG,QAAQuB,MAAM,0CAAa1B,GACpB,IACX,KACDkH,QAAO9D,GAAiB,OAATA,IAGZ+B,EAAqB,OAAT6H,QAAS,IAATA,GAAc,QAALH,EAATG,EAAY,UAAE,IAAAH,OAAL,EAATA,EAAgB/N,MAC5BsG,EAAmB,OAAT4H,QAAS,IAATA,GAAiC,QAAxBF,EAATE,EAAYA,EAAUhM,OAAS,UAAE,IAAA8L,OAAxB,EAATA,EAAmChO,MAGnD,OADAqB,QAAQC,IAAI,+BAAY4M,IAEpB/K,EAAAA,EAAAA,MAACwK,EAAAA,EAAQ,CAAAnK,SAAA,EACLC,EAAAA,EAAAA,KAACmK,EAAAA,EAAS,CAAApK,SAAEhD,EAAKf,SACjBgE,EAAAA,EAAAA,KAACmK,EAAAA,EAAS,CAAApK,UACNL,EAAAA,EAAAA,MAACS,EAAAA,EAAG,CAACoB,GAAI,CACLE,QAAS,OACTC,cAAe,SACfC,IAAK,OACP5B,SAAA,EACEL,EAAAA,EAAAA,MAACS,EAAAA,EAAG,CAACoB,GAAI,CACLE,QAAS,OACTkJ,WAAY,SACZ,gBAAiB,CACb1F,SAAU,OACVG,MAAO,eACPwF,WAAY,SAElB7K,SAAA,EACEC,EAAAA,EAAAA,KAAA,QAAM6K,UAAU,aAAY9K,SAAC,yBAC7BC,EAAAA,EAAAA,KAACG,EAAAA,EAAG,CAACoB,GAAI,CACLuJ,GAAI,EACJ3B,QAAS,UACT1E,aAAc,OAChB1E,SACG6C,GAAa,kCAGtBlD,EAAAA,EAAAA,MAACS,EAAAA,EAAG,CAACoB,GAAI,CACLE,QAAS,OACTkJ,WAAY,SACZ,gBAAiB,CACb1F,SAAU,OACVG,MAAO,aACPwF,WAAY,SAElB7K,SAAA,EACEC,EAAAA,EAAAA,KAAA,QAAM6K,UAAU,aAAY9K,SAAC,yBAC7BC,EAAAA,EAAAA,KAACG,EAAAA,EAAG,CAACoB,GAAI,CACLuJ,GAAI,EACJ3B,QAAS,UACT1E,aAAc,OAChB1E,SACG8C,GAAW,uCAK5BnD,EAAAA,EAAAA,MAACyK,EAAAA,EAAS,CAAApK,SAAA,EACNL,EAAAA,EAAAA,MAAC4D,EAAAA,EAAM,CACHoB,QAASA,IAAMmC,EAAe/J,IAAgBC,EAAKhB,IAAM,KAAOgB,EAAKhB,KACrEwF,GAAI,CACAwJ,cAAe,OACf3F,MAAO,eACP3D,QAAS,OACTkJ,WAAY,SACZhJ,IAAK,GACP5B,SAAA,EAEFL,EAAAA,EAAAA,MAACsL,EAAAA,EAAU,CAACzH,QAAQ,QAAQqH,WAAY,IAAI7K,SAAA,CAAC,oCACvB,OAAT0K,QAAS,IAATA,OAAS,EAATA,EAAWhM,OAAO,oBAE/BuB,EAAAA,EAAAA,KAACiL,EAAAA,EAAc,CACX1J,GAAI,CACA2J,UAAWpO,IAAgBC,EAAKhB,IAAM,iBAAmB,eACzDoP,WAAY,wBAIxBnL,EAAAA,EAAAA,KAACoL,EAAAA,EAAQ,CAACC,GAAIvO,IAAgBC,EAAKhB,IAAIgE,UACnCC,EAAAA,EAAAA,KAACG,EAAAA,EAAG,CAACoB,GAAI,CACLE,QAAS,OACTC,cAAe,SACfC,IAAK,MACLH,GAAI,EACJ8J,UAAW,QACXC,UAAW,OACX,uBAAwB,CACpB9I,MAAO,OAEX,6BAA8B,CAC1B+I,gBAAiB,kBACjB/G,aAAc,QAEpB1E,SACY,OAAT0K,QAAS,IAATA,OAAS,EAATA,EAAW9L,KAAK8M,IACb/L,EAAAA,EAAAA,MAACS,EAAAA,EAAG,CAAsBoB,GAAI,CAC1BE,QAAS,OACTkJ,WAAY,SACZtF,eAAgB,gBAChBF,QAAS,QACTuG,UAAW,4BACXjH,aAAc,MACd0E,QAAS,YACXpJ,SAAA,EACEC,EAAAA,EAAAA,KAACgL,EAAAA,EAAU,CAACzH,QAAQ,QAAQhC,GAAI,CAAE6D,MAAO,WAAYrF,SAChD,IAAI4L,KAAKF,EAASlP,OAAOqP,mBAAmB,QAAS,CAClDC,MAAO,QACPC,IAAK,UACLC,QAAS,aAGjBrM,EAAAA,EAAAA,MAACS,EAAAA,EAAG,CAACoB,GAAI,CACLE,QAAS,OACTkJ,WAAY,SACZhJ,IAAK,MACLwD,QAAwC,IAA/BsG,EAASO,kBAA0B,UAAY,UACxD5C,OAAQ,cAA4C,IAA/BqC,EAASO,kBAA0B,UAAY,WACpEvH,aAAc,OACd0E,QAAS,YACXpJ,SAAA,EACEL,EAAAA,EAAAA,MAACsL,EAAAA,EAAU,CAACzJ,GAAI,CACZ0K,SAAU,SACVrB,WAAY,IACZxF,MAAsC,IAA/BqG,EAASO,kBAA0B,UAAY,WACxDjM,SAAA,CACG0L,EAASO,kBAAkB,MAAIjP,EAAKZ,gBAEzC6D,EAAAA,EAAAA,KAACgL,EAAAA,EAAU,CACPzH,QAAQ,UACRhC,GAAI,CACAuJ,GAAI,EACJ1F,MAAsC,IAA/BqG,EAASO,kBAA0B,UAAY,UACtDpB,WAAY,KACd7K,SAE8B,IAA/B0L,EAASO,kBAA0B,eAAO,kCAxC7CP,EAASlP,iBAgDnCyD,EAAAA,EAAAA,KAACmK,EAAAA,EAAS,CAAApK,UACNL,EAAAA,EAAAA,MAACsL,EAAAA,EAAU,CAACzH,QAAQ,QAAQqH,WAAW,SAAQ7K,SAAA,CAC/B,QAD+ByK,EAC1CzN,EAAKb,cAAM,IAAAsO,OAAA,EAAXA,EAAa0B,kBACdlM,EAAAA,EAAAA,KAACgL,EAAAA,EAAU,CAAC5K,UAAU,OAAOgF,MAAM,iBAAiB0F,GAAI,GAAI/K,SAAC,iBAKrEC,EAAAA,EAAAA,KAACmK,EAAAA,EAAS,CAAApK,SAAEhD,EAAKX,YACjBsD,EAAAA,EAAAA,MAACyK,EAAAA,EAAS,CAAApK,SAAA,EACNC,EAAAA,EAAAA,KAACmM,EAAAA,EAAU,CACPzH,QAASA,KAAM0H,OA7RvCrQ,EA6RkDgB,EAAKhB,SA5RvEsQ,EAAAA,EAAAA,IAAQtQ,GACHsM,MAAMC,IACH9B,GAAc,GACdJ,GAAa,GACbW,EAAgBuB,EAAK,IAExBC,OAAOpJ,IACJvB,QAAQuB,MAAM,kBAAmBA,EAAM,IAR/BpD,KA6R4D,EACpCwF,GAAI,CAAE6D,MAAO,gBAAiBrF,UAE9BC,EAAAA,EAAAA,KAACsM,EAAAA,EAAQ,OAEbtM,EAAAA,EAAAA,KAACmM,EAAAA,EAAU,CACPzH,QAASA,IAvR/B3I,KAClB,GAAKqF,OAAOmL,QAAQ,kEACpB,KACIC,EAAAA,EAAAA,IAAWzQ,GACX0E,MAAM,8CACNqI,KACA1H,OAAOC,SAASC,QACpB,CAAE,MAAOnC,GACLvB,QAAQuB,MAAM,gBAAiBA,GAC/BoI,GAAgBpI,EACpB,GA6QuDsN,CAAa1P,EAAKhB,KACjCwF,GAAI,CAAE6D,MAAO,cAAerF,UAE5BC,EAAAA,EAAAA,KAAC0M,EAAAA,EAAU,WAxJR3P,EAAKhB,IA2JT,YAO/B2D,EAAAA,EAAAA,MAAA,OAAKmL,UAAU,iCAAgC9K,SAAA,EAC3CC,EAAAA,EAAAA,KAACsD,EAAAA,EAAM,CACHC,QAAQ,WACRmB,QAASA,IAAM+D,GAAiBvC,EAAW3I,KAAOyJ,EAAO,EAAIA,GAC7D2F,UAAWzG,EAAW3I,KAAKwC,SAC9B,iBAGsB,QADdkG,EACRC,EAAWX,mBAAW,IAAAU,OAAA,EAAtBA,EAAwBtH,KAAKiO,IAC1B5M,EAAAA,EAAAA,KAACsD,EAAAA,EAAM,CAEHC,QAASyD,IAAS4F,EAAU,YAAc,WAC1ClI,QAASA,IAAM+D,GAAiBmE,GAAS7M,SAExC6M,GAJIA,MAOb5M,EAAAA,EAAAA,KAACsD,EAAAA,EAAM,CACHC,QAAQ,WACRmB,QAASA,IAAM+D,GAAiBvC,EAAWT,KAAOuB,EAAO,EAAIA,GAC7D2F,UAAWzG,EAAWT,KAAK1F,SAC9B,oBAKJwG,IACGvG,EAAAA,EAAAA,KAAC6M,EAAQ,CACLlQ,UAAWA,EACXC,YAAaD,EAAYmK,EAAeZ,EACxC7F,SAtSMK,IAClB/D,EAxDkB+D,KACjBoG,IACL5F,EAAAA,EAAAA,IAAW4F,EAAa/K,IAAK2E,GACxB2H,MAAK,KACFN,KACAvB,GAAc,GACdJ,GAAa,GACbW,EAAgB,KAAK,IAExBwB,OAAOpJ,IACJvB,QAAQuB,MAAM,yBAA0BA,GACxCoI,GAAgBpI,EAAM,GACxB,EA6CF2N,CAAiBpM,GAvEHpC,WAClB,IACI,MAAMM,QAAiBuC,EAAAA,EAAAA,IAAQT,GAC/B9C,QAAQC,IAAI,0CAAae,SACnBmJ,KACNvB,GAAc,GACdJ,GAAa,GACbW,EAAgB,KACpB,CAAE,MAAO5H,GACLvB,QAAQuB,MAAM,0CAAaA,GAC3BsB,MAAMtB,EAAM4N,SAAW,wEAC3B,GA8DIC,CAActM,EAClB,EAkSgB7D,QAASiM,SAKrB9I,EAAAA,EAAAA,KAACL,EAAAA,EAAM,CACHC,KAAM6H,GACN5K,QAASA,IAAM6K,IAAsB,GACrC7H,SAAS,KACTC,WAAS,EACTmN,WAAY,CACRC,UAAW,EACX3L,GAAI,CACAkD,aAAc,OACdiH,UAAW,8BACXyB,SAAU,WAEhBpN,UAEFL,EAAAA,EAAAA,MAACS,EAAAA,EAAG,CAACoB,GAAI,CACL6C,SAAU,WACVe,QAAS,OACTiI,GAAI,GACNrN,SAAA,EACEL,EAAAA,EAAAA,MAACS,EAAAA,EAAG,CAACoB,GAAI,CACL2D,EAAG,EACHmI,WAAY,4CACZjI,MAAO,QACPkI,UAAW,SACXlJ,SAAU,YACZrE,SAAA,EACEC,EAAAA,EAAAA,KAACmM,EAAAA,EAAU,CACPzH,QAASA,IAAMgD,IAAsB,GACrCnG,GAAI,CACA6C,SAAU,WACVY,MAAO,EACPD,IAAK,EACLK,MAAO,SACTrF,UAEFC,EAAAA,EAAAA,KAACuN,EAAAA,EAAS,OAEdvN,EAAAA,EAAAA,KAACgL,EAAAA,EAAU,CAACzH,QAAQ,KAAKhC,GAAI,CAAEqJ,WAAY,IAAKnB,GAAI,GAAI1J,SAAC,qCAGzDC,EAAAA,EAAAA,KAACgL,EAAAA,EAAU,CAACzH,QAAQ,QAAQhC,GAAI,CAAEiM,QAAS,IAAMzN,UAChC,OAAZ4H,SAAY,IAAZA,QAAY,EAAZA,GAAcpL,QAAS,IAAIoP,KAAKhE,GAAapL,OAAOqP,mBAAmB,QAAS,CAC7E6B,KAAM,UACN5B,MAAO,OACPC,IAAK,UACLC,QAAS,eAKrBrM,EAAAA,EAAAA,MAACS,EAAAA,EAAG,CAACoB,GAAI,CAAE2D,EAAG,GAAInF,SAAA,EACdL,EAAAA,EAAAA,MAACS,EAAAA,EAAG,CAACoB,GAAI,CACLkI,GAAI,EACJvE,EAAG,EACHC,QAAS,UACTV,aAAc,OACd6I,UAAW,UACbvN,SAAA,EACEC,EAAAA,EAAAA,KAACgL,EAAAA,EAAU,CAACzH,QAAQ,YAAY6B,MAAM,iBAAiBsI,cAAY,EAAA3N,SAAC,qCAGpEL,EAAAA,EAAAA,MAACS,EAAAA,EAAG,CAACoB,GAAI,CAAEE,QAAS,OAAQkJ,WAAY,WAAYtF,eAAgB,SAAU1D,IAAK,GAAI5B,SAAA,EACnFC,EAAAA,EAAAA,KAACgL,EAAAA,EAAU,CAACzH,QAAQ,KAAK6B,MAAM,UAAU7D,GAAI,CAAEqJ,WAAY,KAAM7K,SAChD,OAAZ4H,SAAY,IAAZA,QAAY,EAAZA,GAAcqE,qBAEnBtM,EAAAA,EAAAA,MAACsL,EAAAA,EAAU,CAACzH,QAAQ,KAAK6B,MAAM,iBAAgBrF,SAAA,CAAC,KAC7B,OAAZ4H,SAAY,IAAZA,QAAY,EAAZA,GAAcxL,sBAK7BuD,EAAAA,EAAAA,MAACS,EAAAA,EAAG,CAAAJ,SAAA,EACAC,EAAAA,EAAAA,KAACgL,EAAAA,EAAU,CAACzH,QAAQ,YAAY6B,MAAM,iBAAiBsI,cAAY,EAAA3N,SAAC,2CAGpEC,EAAAA,EAAAA,KAAC4B,EAAAA,EAAS,CACN9B,WAAS,EACTd,KAAK,SACLuE,QAAQ,WACR3H,MAAOiM,GACPhG,SAAWpE,IACP,MAAM7B,EAAQ+R,KAAKC,IAAI,EAAGD,KAAKE,KAAgB,OAAZlG,SAAY,IAAZA,QAAY,EAAZA,GAAcxL,cAAe,EAAG2R,SAASrQ,EAAEE,OAAO/B,QAAU,IAC/FkM,GAAelM,EAAMmS,WAAW,EAEpCC,WAAY,CACRH,IAAK,EACLD,KAAiB,OAAZjG,SAAY,IAAZA,QAAY,EAAZA,GAAcxL,cAAe,EAClCqG,MAAO,CAAEyJ,SAAU,QAASqB,UAAW,WAE3C/L,GAAI,CACA,2BAA4B,CACxBkD,aAAc,YAI1B/E,EAAAA,EAAAA,MAACsL,EAAAA,EAAU,CAACzH,QAAQ,UAAU6B,MAAM,iBAAiB7D,GAAI,CAAEC,GAAI,EAAGC,QAAS,QAAS6L,UAAW,UAAWvN,SAAA,CAAC,iBACvF,OAAZ4H,SAAY,IAAZA,QAAY,EAAZA,GAAcxL,cAAe,EAAE,2EAK/CuD,EAAAA,EAAAA,MAACS,EAAAA,EAAG,CAACoB,GAAI,CACL0M,GAAI,EACJzM,GAAI,EACJC,QAAS,OACTE,IAAK,GACP5B,SAAA,EACEC,EAAAA,EAAAA,KAACsD,EAAAA,EAAM,CACHxD,WAAS,EACT4E,QAASA,IAAMgD,IAAsB,GACrCnG,GAAI,CACA2M,GAAI,IACJzJ,aAAc,OACdW,MAAO,iBACPD,QAAS,UACT,UAAW,CACPA,QAAS,YAEfpF,SACL,kBAGDC,EAAAA,EAAAA,KAACsD,EAAAA,EAAM,CACHxD,WAAS,EACTyD,QAAQ,YACRmB,QAASpG,UACL,IACIV,QAAQC,IAAI,mBAAoB,CAC5B9B,IAAiB,OAAZ4L,SAAY,IAAZA,QAAY,EAAZA,GAAc5L,IACnB8E,KAAkB,OAAZ8G,SAAY,IAAZA,QAAY,EAAZA,GAAcpL,MACpBsL,YAAaiG,SAASjG,MAE1BH,IAAsB,SAChBK,IACV,CAAE,MAAO5I,GACLvB,QAAQuB,MAAM,gDAAcA,GAC5BsB,MAAM,8EACV,GAEJc,GAAI,CACA2M,GAAI,IACJzJ,aAAc,OACdiH,UAAW,OACX,UAAW,CACPA,UAAW,OACXvG,QAAS,iBAEfpF,SACL,uCAMd,ECzmBX,EARsBoO,KAEdnO,EAAAA,EAAAA,KAAA,OAAK6K,UAAU,SAAQ9K,UACnBC,EAAAA,EAAAA,KAAC+F,EAAmB,K","sources":["components/admin/ui/TourForm.js","components/admin/AdminTourComponents.js","pages/admin/AdminTour.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { addTour, modifyTour, deleteTourImage } from '../../../api/AdminApi';\nimport { Box, Dialog, DialogTitle, DialogContent, TextField, Button, FormControl, InputLabel, Select, MenuItem } from '@mui/material';\nimport { Upload as UploadIcon } from '@mui/icons-material';\nimport { DatePicker } from 'antd';\nimport dayjs from 'dayjs';\n\nconst { RangePicker } = DatePicker;\nconst host = `http://localhost:8080/api`;\nconst MAX_IMAGES = 10;\n\nconst CATEGORIES = [\n    { value: \"Historical & Cultural Sites\", label: \"Historical & Cultural Sites\" },\n    { value: \"Shopping & Lifestyle\", label: \"Shopping & Lifestyle\" },\n    { value: \"Landmarks & Scenic Views\", label: \"Landmarks & Scenic Views\" },\n    { value: \"Nature & Outdoor\", label: \"Nature & Outdoor\" },\n    { value: \"Art & Creativity\", label: \"Art & Creativity\" },\n];\n\nconst initState = {\n    tno: 0,\n    tname: '',\n    tdesc: '',\n    tprice: 0,\n    maxCapacity: 0,\n    taddress: '',\n    categoryName: '',\n    categoryType: 'tour',\n    tdate: [],\n    files: []\n};\n\nconst TourForm = ({ isEditing, initialData, onClose, selectedTno }) => {\n    const [tour, setTour] = useState(isEditing ? initialData : { ...initState });\n    const [uploadQueue, setUploadQueue] = useState([]);\n    const [removedImages, setRemovedImages] = useState([]);\n\n    useEffect(() => {\n        setTour(prev => ({\n            ...prev,\n            categoryType: \"tour\"\n        }));\n    }, [isEditing]);\n\n    const handleDateChange = (dates) => {\n        if (!dates) {\n            setTour(prev => ({\n                ...prev,\n                tdate: []\n            }));\n            return;\n        }\n\n        const [startDate, endDate] = dates;\n        const dateArray = [];\n        let currentDate = startDate;\n\n        while (currentDate <= endDate) {\n            dateArray.push(currentDate.format('YYYY-MM-DD'));\n            currentDate = currentDate.add(1, 'day');\n        }\n\n        setTour(prev => ({\n            ...prev,\n            tdate: dateArray\n        }));\n    };\n\n    const handleChangeTour = (e) => {\n        const { name, value } = e.target;\n\n        if (name === 'categoryName') {\n            setTour({\n                ...tour,\n                categoryName: value,\n                categoryType: \"tour\"\n            });\n        } else if (name === 'taddress') {\n            // 입력은 자유롭게 허용하고, 제출할 때만 검증\n            setTour({\n                ...tour,\n                taddress: value\n            });\n        } else {\n            setTour({\n                ...tour,\n                [name]: value\n            });\n        }\n        console.log(\"투어 데이터 : \", tour);\n    };\n\n    const handleFileChange = (e) => {\n        const newFiles = Array.from(e.target.files || []);\n        if (!newFiles.length) return;\n\n        const currentFiles = tour.files || [];\n        const totalFiles = currentFiles.length + newFiles.length;\n\n        if (totalFiles > MAX_IMAGES) {\n            alert(`이미지는 최대 ${MAX_IMAGES}개까지만 선택 가능합니다.`);\n            return;\n        }\n\n        if (!newFiles.every(file => file.type.startsWith('image/'))) {\n            alert('이미지 파일만 업로드 가능합니다.');\n            return;\n        }\n\n        setTour(prev => ({\n            ...prev,\n            files: [...currentFiles, ...newFiles]\n        }));\n    };\n\n    const removeFile = (index) => {\n        if (isEditing && tour.uploadFileNames && tour.uploadFileNames[index]) {\n            const fileName = tour.uploadFileNames[index];\n            setRemovedImages(prev => [...prev, { fileName, tno: tour.tno }]);\n        }\n\n        setTour(prev => ({\n            ...prev,\n            files: prev.files.filter((_, i) => i !== index),\n            uploadFileNames: prev.uploadFileNames ?\n                prev.uploadFileNames.filter((_, i) => i !== index) :\n                []\n        }));\n    };\n\n    useEffect(() => {\n        return () => {\n            uploadQueue.forEach(item => {\n                URL.revokeObjectURL(item.preview);\n            });\n            if (tour.files) {\n                tour.files.forEach(file => {\n                    if (file instanceof File) {\n                        URL.revokeObjectURL(URL.createObjectURL(file));\n                    }\n                });\n            }\n        };\n    }, [uploadQueue, tour.files]);\n\n    const handleClickSubmit = async (e) => {\n        e.preventDefault();\n\n        // 주소 형식 검증\n        const addressPattern = /^[\\w\\s-]+,\\s*[\\w\\s-]+-gu,\\s*Seoul$/;\n        if (!addressPattern.test(tour.taddress)) {\n            alert('주소는 \"상세주소, 구-gu, Seoul\" 형식으로 입력해주세요.\\n예: 161 Sajik-ro, Jongno-gu, Seoul');\n            return;\n        }\n\n        // selectedPno가 없을 경우 initialData.pno 사용\n        const tno = isEditing ? selectedTno : initialData?.tno || tour.tno;\n\n        if (isEditing && !tour.tno) {\n            alert('투어 번호가 유효하지 않습니다.');\n            return;\n        }\n\n        const formData = new FormData();\n\n        formData.append(\"tname\", tour.tname)\n        formData.append(\"tdesc\", tour.tdesc)\n        formData.append(\"tprice\", tour.tprice)\n        formData.append(\"maxCapacity\", tour.maxCapacity)\n        formData.append(\"taddress\", tour.taddress)\n        formData.append(\"categoryName\", tour.categoryName)\n        // formData.append(\"tourDate\", JSON.stringify(tour.tourDate))\n        // formData.append(\"tourDate[]\", tour.tourDate)\n\n        tour.tdate.forEach(date => {\n            formData.append(\"tdate\", date);\n            console.log(\"tdate added:\", date);\n        });\n\n        if (tour.files?.length > 0) {\n            tour.files.forEach(file => {\n                if (file instanceof File) {\n                    formData.append(\"files\", file);\n                }\n            });\n        }\n\n        for (let pair of formData.entries()) {\n            console.log(pair[0] + ': ' + pair[1]);\n        }\n        try {\n            if (isEditing) {\n                if (removedImages.length > 0) {\n                    for (const image of removedImages) {\n                        await deleteTourImage(image.tno, image.fileName);\n                    }\n                }\n                await modifyTour(tour.tno, formData);\n                alert('투어가 수정되었습니다.');\n            } else {\n                await addTour(formData);\n                console.log(formData);\n                alert('투어가 등록되었습니다.');\n            }\n            onClose();\n            window.location.reload();\n        } catch (error) {\n            console.error('투어 처리 중 오류:', error);\n            alert('처리 중 오류가 발생했습니다.');\n        }\n    };\n\n    useEffect(() => {\n        if (isEditing && initialData) {\n            const loadInitialImages = async () => {\n                if (initialData.uploadFileNames?.length > 0) {\n                    try {\n                        const filePromises = initialData.uploadFileNames.map(async fileName => {\n                            const response = await fetch(`${host}/tour/image/${fileName}`);\n                            const blob = await response.blob();\n                            return new File([blob], fileName, { type: blob.type });\n                        });\n                        const files = await Promise.all(filePromises);\n                        setTour({\n                            ...initialData,\n                            files: files\n                        });\n                    } catch (error) {\n                        console.error('이미지 로드 실패:', error);\n                    }\n                }\n            };\n            loadInitialImages();\n        }\n    }, [isEditing, initialData]);\n\n    useEffect(() => {\n        if (isEditing && initialData && initialData.tdate) {\n            // 문자열로 된 tourDate를 파싱\n            let dates;\n            try {\n                dates = typeof initialData.tdate === 'string'\n                    ? JSON.parse(initialData.tdate)\n                    : initialData.tdate;\n            } catch (e) {\n                dates = initialData.tdate;\n            }\n\n            // 날짜 배열이 있으면 설정\n            if (Array.isArray(dates) && dates.length > 0) {\n                setTour(prev => ({\n                    ...prev,\n                    tdate: dates\n                }));\n            }\n        }\n    }, [isEditing, initialData]);\n\n    return (\n        <Dialog open={true} onClose={onClose} maxWidth=\"md\" fullWidth>\n            <DialogTitle>\n                {isEditing ? '투어 수정' : '새 투어 추가'}\n            </DialogTitle>\n            <DialogContent>\n                <Box component=\"form\" onSubmit={handleClickSubmit} sx={{ mt: 2 }}>\n                    <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2 }}>\n                        <TextField\n                            fullWidth\n                            label=\"투어명\"\n                            name=\"tname\"\n                            value={tour.tname}\n                            onChange={handleChangeTour}\n                            required\n                        />\n                        <FormControl fullWidth>\n                            <InputLabel id=\"category-select-label\">카테고리</InputLabel>\n                            <Select\n                                labelId=\"category-select-label\"\n                                id=\"category-select\"\n                                name=\"categoryName\"\n                                label=\"카테고리\"\n                                value={tour.categoryName}\n                                onChange={handleChangeTour}\n                                required\n                            >\n                                {CATEGORIES.map(category => (\n                                    <MenuItem key={category.value} value={category.value}>\n                                        {category.label}\n                                    </MenuItem>\n                                ))}\n                            </Select>\n                        </FormControl>\n                        {/* \n                        <TextField\n                            fullWidth\n                            label=\"위치\"\n                            name=\"tlocation\"\n                            value={tour.tlocation}\n                            onChange={handleChangeTour}\n                            required\n                        /> */}\n\n                        <TextField\n                            fullWidth\n                            label=\"주소\"\n                            name=\"taddress\"\n                            value={tour.taddress}\n                            onChange={handleChangeTour}\n                            required\n                            helperText=\"예시: 161 Sajik-ro, Jongno-gu, Seoul\"\n                            placeholder=\"상세주소, 구-gu, Seoul\"\n                        />\n\n                        <RangePicker\n                            style={{\n                                width: '100%',\n                                zIndex: 9999\n                            }}\n                            value={tour.tdate && tour.tdate.length >= 2 ? [\n                                dayjs(tour.tdate[0]),\n                                dayjs(tour.tdate[tour.tdate.length - 1])\n                            ] : null}\n                            onChange={handleDateChange}\n                            format=\"YYYY-MM-DD\"\n                            placeholder={['시작 날짜', '종료 날짜']}\n                            popupStyle={{ zIndex: 9999 }}\n                        />\n\n                        <TextField\n                            fullWidth\n                            multiline\n                            rows={4}\n                            label=\"투어 설명\"\n                            name=\"tdesc\"\n                            value={tour.tdesc}\n                            onChange={handleChangeTour}\n                        />\n\n                        <Box sx={{ display: 'flex', gap: 2 }}>\n                            <TextField\n                                fullWidth\n                                type=\"number\"\n                                label=\"가격\"\n                                name=\"tprice\"\n                                value={tour.tprice}\n                                onChange={handleChangeTour}\n                                required\n                            />\n                            <TextField\n                                fullWidth\n                                type=\"number\"\n                                label=\"최대 인원\"\n                                name=\"maxCapacity\"\n                                value={tour.maxCapacity}\n                                onChange={handleChangeTour}\n                                required\n                            />\n                        </Box>\n\n                        <Button\n                            variant=\"contained\"\n                            component=\"label\"\n                            startIcon={<UploadIcon />}\n                        >\n                            이미지 업로드\n                            <input\n                                type=\"file\"\n                                hidden\n                                multiple\n                                accept=\"image/*\"\n                                onChange={handleFileChange}\n                            />\n                        </Button>\n\n                        {/* 이미지 미리보기 */}\n                        {tour.files?.length > 0 && (\n                            <Box sx={{ display: 'flex', gap: 1, flexWrap: 'wrap' }}>\n                                {tour.files.map((file, index) => (\n                                    <Box key={index} sx={{ position: 'relative', width: 100, height: 100 }}>\n                                        <img\n                                            src={URL.createObjectURL(file)}\n                                            alt={`Preview ${index + 1}`}\n                                            style={{\n                                                width: '100%',\n                                                height: '100%',\n                                                objectFit: 'cover',\n                                                borderRadius: '4px'\n                                            }}\n                                        />\n                                        <Button\n                                            onClick={() => removeFile(index)}\n                                            sx={{\n                                                position: 'absolute',\n                                                top: -8,\n                                                right: -8,\n                                                minWidth: '24px',\n                                                width: '24px',\n                                                height: '24px',\n                                                borderRadius: '12px',\n                                                p: 0,\n                                                bgcolor: 'error.main',\n                                                color: 'white',\n                                                '&:hover': {\n                                                    bgcolor: 'error.dark'\n                                                }\n                                            }}\n                                        >\n                                            ×\n                                        </Button>\n                                    </Box>\n                                ))}\n                            </Box>\n                        )}\n\n                        <Box sx={{ display: 'flex', gap: 2, justifyContent: 'flex-end', mt: 2 }}>\n                            <Button\n                                type=\"submit\"\n                                variant=\"contained\"\n                                color=\"primary\"\n                            >\n                                {isEditing ? '수정하기' : '등록하기'}\n                            </Button>\n                            <Button\n                                variant=\"outlined\"\n                                onClick={onClose}\n                            >\n                                취소\n                            </Button>\n                        </Box>\n                    </Box>\n                </Box>\n            </DialogContent>\n        </Dialog>\n    );\n};\n\nexport default TourForm;\n","import React, { useEffect, useState } from 'react';\nimport {\n    Box,\n    Tabs,\n    Tab,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    Paper,\n    Button,\n    IconButton,\n    Typography,\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    TextField,\n    Collapse,\n} from '@mui/material';\nimport {\n    Add as AddIcon,   // // 'Add' 아이콘을 'AddIcon'이라는 이름으로 가져옴\n    Edit as EditIcon,\n    Delete as DeleteIcon,\n    Close as CloseIcon,\n    ExpandMore as ExpandMoreIcon,\n} from '@mui/icons-material';\nimport TourForm from './ui/TourForm';\nimport useCustomLogin from '../../hooks/useCustomLogin';\nimport { addTour, adminTourList, deleteTour, getTour, modifyTour } from '../../api/AdminApi';\nimport { Search } from 'lucide-react';\n\nconst host = `http://localhost:8080/api`;\n\nconst initState = {\n    dtoList: [],\n    pageNumList: [],\n    pageRequestDTO: null,\n    prev: false,\n    next: false,\n    totalCount: 0,\n    prevPage: 0,\n    nextPage: 0,\n    totalPage: 0,\n    current: 1,\n};\n\nconst AdminTourComponents = () => {\n    const [serverData, setServerData] = useState(initState)\n    const [isEditing, setIsEditing] = useState(false)\n    const [tabValue, setTabValue] = useState(0);  // tabValue: 현재 선택된 탭을 나타내며, 기본값은 0\n    const [openDialog, setOpenDialog] = useState(false);  // 대화상자 (모달창)가 열려있는지 여부를 저장하는 상태\n    const [dialogType, setDialogType] = useState('');\n\n    const [showTourDetail, setShowTourDetail] = useState(false);\n\n    const [selectedTno, setSelectedTno] = useState(null)\n    const [selectedTour, setSelectedTour] = useState(null);  // 이미지 미리보기 URL 목록을 저장하는 상태\n\n    // const [imagePreview, setImagePreview] = useState([]);\n\n    const [page, setPage] = useState(1);\n    const [size, setSize] = useState(9);\n    const [keyword, setKeyword] = useState(\"\");\n    const [type, setType] = useState(\"t\");\n\n    const { exceptionHandle } = useCustomLogin();\n\n    const [openCapacityDialog, setOpenCapacityDialog] = useState(false);\n    const [selectedDate, setSelectedDate] = useState(null);\n    const [newCapacity, setNewCapacity] = useState('');\n\n    const fetchTourList = () => {\n        console.log(\"투어 목록 요청:\", {\n            페이지: page,\n            사이즈: size,\n            검색어: keyword,\n            타입: type,\n        });\n\n        adminTourList({ page, size, keyword, type })\n            .then((data) => {\n                setServerData(data);\n            })\n            .catch((err) => {\n                console.error(\"데이터 조회 실패:\", err);\n                exceptionHandle(err);\n            })\n    };\n\n    const handlePageChange = (newPage) => {\n        console.log('페이지 변경 시도:', {\n            현제페이지: page,\n            새페이지: newPage,\n            전체페이지: serverData.totalPage,\n        })\n\n        try {\n            setPage(newPage)\n        } catch (err) {\n            console.error(\"페이지 변경 중 오류 발생 : \", err)\n        }\n    }\n\n    const handleAddTour = async (formData) => {\n        try {\n            const response = await addTour(formData);\n            console.log(\"투어 등록 결과:\", response);\n            await fetchTourList();\n            setOpenDialog(false);\n            setIsEditing(false);\n            setSelectedTour(null);\n        } catch (error) {\n            console.error(\"투어 등록 실패:\", error);\n            alert(error.message || \"투어 등록에 실패했습니다.\");\n        }\n    };\n\n    const handleModifyTour = (formData) => {\n        if (!selectedTour) return;\n        modifyTour(selectedTour.tno, formData)\n            .then(() => {\n                fetchTourList();\n                setOpenDialog(false);\n                setIsEditing(false);\n                setSelectedTour(null);\n            })\n            .catch((error) => {\n                console.error(\"Modify or fetch error:\", error);\n                exceptionHandle(error);\n            })\n    };\n\n    const handleEdit = (tno) => {\n        getTour(tno)\n            .then((data) => {\n                setOpenDialog(true);\n                setIsEditing(true);\n                setSelectedTour(data);\n            })\n            .catch((error) => {\n                console.error(\"Get tour error:\", error);\n            });\n    };\n\n    const handleDelete = (tno) => {\n        if (!window.confirm(\"정말 삭제하시겠습니까?\")) return;\n        try {\n            deleteTour(tno);\n            alert(\"삭제되었습니다\");\n            handleClose();\n            window.location.reload();\n        } catch (error) {\n            console.error(\"Delete error:\", error);\n            exceptionHandle(error);\n        }\n    };\n\n    const handleGetTour = (tno) => {\n        getTour(tno)\n            .then((data) => {\n                setSelectedTour(data);\n                setShowTourDetail(true);\n            })\n    };\n\n    const handleClose = () => {\n        setOpenDialog(false);\n        setIsEditing(false);\n        setSelectedTour(null);\n        fetchTourList();\n    };\n\n    const handleFormSubmit = (formData) => {\n        if (isEditing) {\n            handleModifyTour(formData);\n        } else {\n            handleAddTour(formData);\n        }\n    };\n\n    useEffect(() => {\n        fetchTourList();\n    }, [page, size, keyword, type]);\n\n    return (\n        <>\n            <div style={{\n                display: 'flex',\n                justifyContent: 'center',  // 가운데 정렬\n                width: '100%',\n                marginTop: '2rem',\n                marginBottom: '1rem'\n            }}>\n                <div style={{\n                    display: 'flex',\n                    width: '50%',          // 검색창 너비\n                    gap: '1rem'            // 검색창과 버튼 사이 간격\n                }}>\n                    <input\n                        style={{\n                            flex: 1,\n                            padding: '0.5rem',\n                            borderRadius: '4px',\n                            border: '1px solid #ddd'\n                        }}\n                        placeholder=\"투어 이름 또는 카테고리 검색\"\n                        value={keyword}\n                        onChange={(e) => setKeyword(e.target.value)}\n                    />\n                    <Button\n                        variant=\"contained\"\n                        onClick={fetchTourList}\n                        style={{ minWidth: '100px' }}\n                    >\n                        <Search size={16} style={{ marginRight: '0.5rem' }} />\n                        검색\n                    </Button>\n                </div>\n            </div>\n\n            <Box sx={{ width: '100%', p: 3 }}>\n                <Box sx={{ borderBottom: 1, borderColor: 'divider', mb: 3 }}>\n                    <Tabs value={tabValue} onChange={(e, newValue) => setTabValue(newValue)}>\n                        <Tab label=\"진행중\" />\n                        <Tab label=\"예정됨\" />\n                        <Tab label=\"종료됨\" />\n                    </Tabs>\n                </Box>\n\n                <Box sx={{ display: 'flex', justifyContent: 'flex-end', mb: 2 }}>\n                    <Button\n                        variant=\"contained\"\n                        startIcon={<AddIcon />}\n                        onClick={() => {\n                            setOpenDialog(true);\n                            setDialogType('add');\n                            setIsEditing(false);\n                            setSelectedTour(null);\n                        }}\n                    >\n                        새 투어 추가\n                    </Button>\n                </Box>\n\n                <TableContainer component={Paper}>\n                    <Table>\n                        <TableHead>\n                            <TableRow>\n                                <TableCell>투어명</TableCell>\n                                <TableCell>날짜</TableCell>\n                                <TableCell>잔여석</TableCell>\n                                <TableCell>가격</TableCell>\n                                <TableCell>위치</TableCell>\n                                <TableCell>관리</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {serverData.dtoList?.map((tour) => {\n                                // tourDate JSON 파싱\n                                const tourDates = tour.tdate?.map(dateStr => {\n                                    try {\n                                        return JSON.parse(dateStr);\n                                    } catch (e) {\n                                        console.error('날짜 파싱 오류:', e);\n                                        return null;\n                                    }\n                                }).filter(date => date !== null);\n\n                                // 시작일과 종료일 계산\n                                const startDate = tourDates?.[0]?.tdate;\n                                const endDate = tourDates?.[tourDates.length - 1]?.tdate;\n\n                                console.log(\"투어 날짜 : \", tourDates);\n                                return (\n                                    <TableRow key={tour.tno}>\n                                        <TableCell>{tour.tname}</TableCell>\n                                        <TableCell>\n                                            <Box sx={{\n                                                display: 'flex',\n                                                flexDirection: 'column',\n                                                gap: '8px'\n                                            }}>\n                                                <Box sx={{\n                                                    display: 'flex',\n                                                    alignItems: 'center',\n                                                    '& .date-label': {\n                                                        minWidth: '60px',\n                                                        color: 'primary.main',\n                                                        fontWeight: 'bold'\n                                                    }\n                                                }}>\n                                                    <span className=\"date-label\">시작일:</span>\n                                                    <Box sx={{\n                                                        ml: 1,\n                                                        padding: '4px 8px',\n                                                        borderRadius: '4px',\n                                                    }}>\n                                                        {startDate || '날짜 없음'}\n                                                    </Box>\n                                                </Box>\n                                                <Box sx={{\n                                                    display: 'flex',\n                                                    alignItems: 'center',\n                                                    '& .date-label': {\n                                                        minWidth: '60px',\n                                                        color: 'error.main',\n                                                        fontWeight: 'bold'\n                                                    }\n                                                }}>\n                                                    <span className=\"date-label\">종료일:</span>\n                                                    <Box sx={{\n                                                        ml: 1,\n                                                        padding: '4px 8px',\n                                                        borderRadius: '4px',\n                                                    }}>\n                                                        {endDate || '날짜 없음'}\n                                                    </Box>\n                                                </Box>\n                                            </Box>\n                                        </TableCell>\n                                        <TableCell>\n                                            <Button\n                                                onClick={() => setSelectedTno(selectedTno === tour.tno ? null : tour.tno)}\n                                                sx={{\n                                                    textTransform: 'none',\n                                                    color: 'primary.main',\n                                                    display: 'flex',\n                                                    alignItems: 'center',\n                                                    gap: 1\n                                                }}\n                                            >\n                                                <Typography variant=\"body2\" fontWeight={500}>\n                                                    잔여석 보기 ({tourDates?.length}일정)\n                                                </Typography>\n                                                <ExpandMoreIcon\n                                                    sx={{\n                                                        transform: selectedTno === tour.tno ? 'rotate(180deg)' : 'rotate(0deg)',\n                                                        transition: 'transform 0.3s'\n                                                    }}\n                                                />\n                                            </Button>\n                                            <Collapse in={selectedTno === tour.tno}>\n                                                <Box sx={{\n                                                    display: 'flex',\n                                                    flexDirection: 'column',\n                                                    gap: '8px',\n                                                    mt: 1,\n                                                    maxHeight: '200px',\n                                                    overflowY: 'auto',\n                                                    '&::-webkit-scrollbar': {\n                                                        width: '4px'\n                                                    },\n                                                    '&::-webkit-scrollbar-thumb': {\n                                                        backgroundColor: 'rgba(0,0,0,0.2)',\n                                                        borderRadius: '4px'\n                                                    }\n                                                }}>\n                                                    {tourDates?.map((dateInfo) => (\n                                                        <Box key={dateInfo.tdate} sx={{\n                                                            display: 'flex',\n                                                            alignItems: 'center',\n                                                            justifyContent: 'space-between',\n                                                            bgcolor: 'white',\n                                                            boxShadow: '0 1px 3px rgba(0,0,0,0.1)',\n                                                            borderRadius: '8px',\n                                                            padding: '8px 16px',\n                                                        }}>\n                                                            <Typography variant=\"body2\" sx={{ color: '#1a237e' }}>\n                                                                {new Date(dateInfo.tdate).toLocaleDateString('ko-KR', {\n                                                                    month: 'short',\n                                                                    day: 'numeric',\n                                                                    weekday: 'short'\n                                                                })}\n                                                            </Typography>\n                                                            <Box sx={{\n                                                                display: 'flex',\n                                                                alignItems: 'center',\n                                                                gap: '4px',\n                                                                bgcolor: dateInfo.availableCapacity === 0 ? '#fff4f4' : '#f0f7ff',\n                                                                border: `1px solid ${dateInfo.availableCapacity === 0 ? '#ffcdd2' : '#90caf9'}`,\n                                                                borderRadius: '20px',\n                                                                padding: '6px 12px',\n                                                            }}>\n                                                                <Typography sx={{\n                                                                    fontSize: '0.9rem',\n                                                                    fontWeight: 600,\n                                                                    color: dateInfo.availableCapacity === 0 ? '#d32f2f' : '#1976d2',\n                                                                }}>\n                                                                    {dateInfo.availableCapacity} / {tour.maxCapacity}\n                                                                </Typography>\n                                                                <Typography\n                                                                    variant=\"caption\"\n                                                                    sx={{\n                                                                        ml: 1,\n                                                                        color: dateInfo.availableCapacity === 0 ? '#ef5350' : '#66bb6a',\n                                                                        fontWeight: 500\n                                                                    }}\n                                                                >\n                                                                    {dateInfo.availableCapacity === 0 ? '마감' : '예약가능'}\n                                                                </Typography>\n                                                            </Box>\n                                                        </Box>\n                                                    ))}\n                                                </Box>\n                                            </Collapse>\n                                        </TableCell>\n                                        <TableCell>\n                                            <Typography variant=\"body1\" fontWeight=\"medium\">\n                                                {tour.tprice?.toLocaleString()}\n                                                <Typography component=\"span\" color=\"text.secondary\" ml={0.5}>\n                                                    원\n                                                </Typography>\n                                            </Typography>\n                                        </TableCell>\n                                        <TableCell>{tour.taddress}</TableCell>\n                                        <TableCell>\n                                            <IconButton\n                                                onClick={() => handleEdit(tour.tno)}\n                                                sx={{ color: 'primary.main' }}\n                                            >\n                                                <EditIcon />\n                                            </IconButton>\n                                            <IconButton\n                                                onClick={() => handleDelete(tour.tno)}\n                                                sx={{ color: 'error.main' }}\n                                            >\n                                                <DeleteIcon />\n                                            </IconButton>\n                                        </TableCell>\n                                    </TableRow>\n                                );\n                            })}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n\n                <div className=\"flex justify-center gap-2 mt-4\">\n                    <Button\n                        variant=\"outlined\"\n                        onClick={() => handlePageChange(serverData.prev ? page - 1 : page)}\n                        disabled={!serverData.prev}\n                    >\n                        이전\n                    </Button>\n                    {serverData.pageNumList?.map((pageNum) => (\n                        <Button\n                            key={pageNum}\n                            variant={page === pageNum ? \"contained\" : \"outlined\"}\n                            onClick={() => handlePageChange(pageNum)}\n                        >\n                            {pageNum}\n                        </Button>\n                    ))}\n                    <Button\n                        variant=\"outlined\"\n                        onClick={() => handlePageChange(serverData.next ? page + 1 : page)}\n                        disabled={!serverData.next}\n                    >\n                        다음\n                    </Button>\n                </div>\n\n                {openDialog && (\n                    <TourForm\n                        isEditing={isEditing}\n                        initialData={isEditing ? selectedTour : serverData}\n                        onSubmit={handleFormSubmit}\n                        onClose={handleClose}\n                    />\n                )}\n            </Box>\n\n            <Dialog\n                open={openCapacityDialog}\n                onClose={() => setOpenCapacityDialog(false)}\n                maxWidth=\"xs\"\n                fullWidth\n                PaperProps={{\n                    elevation: 0,\n                    sx: {\n                        borderRadius: '16px',\n                        boxShadow: '0 10px 40px rgba(0,0,0,0.1)',\n                        overflow: 'hidden'\n                    }\n                }}\n            >\n                <Box sx={{\n                    position: 'relative',\n                    bgcolor: '#fff',\n                    pb: 2\n                }}>\n                    <Box sx={{\n                        p: 3,\n                        background: 'linear-gradient(135deg, #1976d2, #64b5f6)',\n                        color: 'white',\n                        textAlign: 'center',\n                        position: 'relative'\n                    }}>\n                        <IconButton\n                            onClick={() => setOpenCapacityDialog(false)}\n                            sx={{\n                                position: 'absolute',\n                                right: 8,\n                                top: 8,\n                                color: 'white'\n                            }}\n                        >\n                            <CloseIcon />\n                        </IconButton>\n                        <Typography variant=\"h6\" sx={{ fontWeight: 600, mb: 1 }}>\n                            잔여석 수정\n                        </Typography>\n                        <Typography variant=\"body2\" sx={{ opacity: 0.9 }}>\n                            {selectedDate?.tdate && new Date(selectedDate.tdate).toLocaleDateString('ko-KR', {\n                                year: 'numeric',\n                                month: 'long',\n                                day: 'numeric',\n                                weekday: 'long'\n                            })}\n                        </Typography>\n                    </Box>\n\n                    <Box sx={{ p: 3 }}>\n                        <Box sx={{\n                            mb: 4,\n                            p: 2,\n                            bgcolor: '#f8fafc',\n                            borderRadius: '12px',\n                            textAlign: 'center'\n                        }}>\n                            <Typography variant=\"subtitle2\" color=\"text.secondary\" gutterBottom>\n                                현재 잔여석\n                            </Typography>\n                            <Box sx={{ display: 'flex', alignItems: 'baseline', justifyContent: 'center', gap: 1 }}>\n                                <Typography variant=\"h3\" color=\"primary\" sx={{ fontWeight: 700 }}>\n                                    {selectedDate?.availableCapacity}\n                                </Typography>\n                                <Typography variant=\"h6\" color=\"text.secondary\">\n                                    / {selectedDate?.maxCapacity}\n                                </Typography>\n                            </Box>\n                        </Box>\n\n                        <Box>\n                            <Typography variant=\"subtitle2\" color=\"text.secondary\" gutterBottom>\n                                수정할 잔여석\n                            </Typography>\n                            <TextField\n                                fullWidth\n                                type=\"number\"\n                                variant=\"outlined\"\n                                value={newCapacity}\n                                onChange={(e) => {\n                                    const value = Math.max(0, Math.min(selectedDate?.maxCapacity || 0, parseInt(e.target.value) || 0));\n                                    setNewCapacity(value.toString());\n                                }}\n                                inputProps={{\n                                    min: 0,\n                                    max: selectedDate?.maxCapacity || 0,\n                                    style: { fontSize: '1.2em', textAlign: 'center' }\n                                }}\n                                sx={{\n                                    '& .MuiOutlinedInput-root': {\n                                        borderRadius: '12px'\n                                    }\n                                }}\n                            />\n                            <Typography variant=\"caption\" color=\"text.secondary\" sx={{ mt: 1, display: 'block', textAlign: 'center' }}>\n                                최대 {selectedDate?.maxCapacity || 0}명까지 설정 가능합니다\n                            </Typography>\n                        </Box>\n                    </Box>\n\n                    <Box sx={{\n                        px: 3,\n                        mt: 2,\n                        display: 'flex',\n                        gap: 2\n                    }}>\n                        <Button\n                            fullWidth\n                            onClick={() => setOpenCapacityDialog(false)}\n                            sx={{\n                                py: 1.5,\n                                borderRadius: '10px',\n                                color: 'text.secondary',\n                                bgcolor: '#f5f5f5',\n                                '&:hover': {\n                                    bgcolor: '#eeeeee'\n                                }\n                            }}\n                        >\n                            취소\n                        </Button>\n                        <Button\n                            fullWidth\n                            variant=\"contained\"\n                            onClick={async () => {\n                                try {\n                                    console.log('Update capacity:', {\n                                        tno: selectedDate?.tno,\n                                        date: selectedDate?.tdate,\n                                        newCapacity: parseInt(newCapacity)\n                                    });\n                                    setOpenCapacityDialog(false);\n                                    await fetchTourList();\n                                } catch (error) {\n                                    console.error('잔여석 수정 실패:', error);\n                                    alert('잔여석 수정에 실패했습니다.');\n                                }\n                            }}\n                            sx={{\n                                py: 1.5,\n                                borderRadius: '10px',\n                                boxShadow: 'none',\n                                '&:hover': {\n                                    boxShadow: 'none',\n                                    bgcolor: 'primary.dark'\n                                }\n                            }}\n                        >\n                            저장하기\n                        </Button>\n                    </Box>\n                </Box>\n            </Dialog>\n        </>\n    )\n}\n\nexport default AdminTourComponents;","import React from 'react'\nimport AdminTourComponents from '../../components/admin/AdminTourComponents'\n\nconst AdminTourPage = () => {\n    return (\n        <div className='w-full'>\n            <AdminTourComponents />\n        </div>\n    )\n}\n\nexport default AdminTourPage"],"names":["RangePicker","DatePicker","CATEGORIES","value","label","initState","tno","tname","tdesc","tprice","maxCapacity","taddress","categoryName","categoryType","tdate","files","_ref","_tour$files2","isEditing","initialData","onClose","selectedTno","tour","setTour","useState","uploadQueue","setUploadQueue","removedImages","setRemovedImages","useEffect","prev","handleChangeTour","e","name","target","console","log","forEach","item","URL","revokeObjectURL","preview","file","File","createObjectURL","async","_initialData$uploadFi","uploadFileNames","length","filePromises","map","response","fetch","fileName","blob","type","Promise","all","error","loadInitialImages","dates","JSON","parse","Array","isArray","_jsxs","Dialog","open","maxWidth","fullWidth","children","_jsx","DialogTitle","DialogContent","Box","component","onSubmit","_tour$files","preventDefault","test","alert","formData","FormData","append","date","pair","entries","image","deleteTourImage","modifyTour","addTour","window","location","reload","sx","mt","display","flexDirection","gap","TextField","onChange","required","FormControl","InputLabel","id","Select","labelId","category","MenuItem","helperText","placeholder","style","width","zIndex","dayjs","startDate","endDate","dateArray","currentDate","push","format","add","popupStyle","multiline","rows","Button","variant","startIcon","UploadIcon","hidden","multiple","accept","newFiles","from","currentFiles","every","startsWith","flexWrap","index","position","height","src","alt","objectFit","borderRadius","onClick","filter","_","i","removeFile","top","right","minWidth","p","bgcolor","color","justifyContent","dtoList","pageNumList","pageRequestDTO","next","totalCount","prevPage","nextPage","totalPage","current","AdminTourComponents","_serverData$dtoList","_serverData$pageNumLi","serverData","setServerData","setIsEditing","tabValue","setTabValue","openDialog","setOpenDialog","dialogType","setDialogType","showTourDetail","setShowTourDetail","setSelectedTno","selectedTour","setSelectedTour","page","setPage","size","setSize","keyword","setKeyword","setType","exceptionHandle","useCustomLogin","openCapacityDialog","setOpenCapacityDialog","selectedDate","setSelectedDate","newCapacity","setNewCapacity","fetchTourList","페이지","사이즈","검색어","타입","adminTourList","then","data","catch","err","handlePageChange","newPage","현제페이지","새페이지","전체페이지","handleClose","_Fragment","marginTop","marginBottom","flex","padding","border","Search","marginRight","borderBottom","borderColor","mb","Tabs","newValue","Tab","AddIcon","TableContainer","Paper","Table","TableHead","TableRow","TableCell","TableBody","_tour$tdate","_tourDates$","_tourDates","_tour$tprice","tourDates","dateStr","alignItems","fontWeight","className","ml","textTransform","Typography","ExpandMoreIcon","transform","transition","Collapse","in","maxHeight","overflowY","backgroundColor","dateInfo","boxShadow","Date","toLocaleDateString","month","day","weekday","availableCapacity","fontSize","toLocaleString","IconButton","handleEdit","getTour","EditIcon","confirm","deleteTour","handleDelete","DeleteIcon","disabled","pageNum","TourForm","handleModifyTour","message","handleAddTour","PaperProps","elevation","overflow","pb","background","textAlign","CloseIcon","opacity","year","gutterBottom","Math","max","min","parseInt","toString","inputProps","px","py","AdminTourPage"],"sourceRoot":""}