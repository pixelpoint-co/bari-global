{"version":3,"file":"static/js/4488.fca0f949.chunk.js","mappings":"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","sources":["api/nuProductApi.js","components/products/ProductPolicy.js","components/review/ReviewModal.js","components/review/ReviewsSection.js","components/products/NUReadComponent.js","pages/products/NUReadPage.js"],"sourcesContent":["import axios from \"axios\";\nimport { API_SERVER_HOST } from \"./reviewApi\";\n\nconst host = `${API_SERVER_HOST}/api/products`;\n\n//p264, 서버에서 목록 데이터를 가져오기 위한 함수\nexport const getListNU = async ({ page, size, keyword = \"\", type = \"t\", category = \"\" }) => {\n  try {\n    const res = await axios.get(`${host}/list`, {\n      params: {\n        page,\n        size:9,\n        keyword, // Search keyword\n        type, // Search type\n        category\n      },\n    });\n    return res.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const getProductsByCategoryNU = async ({ page, size, category }) => {\n  try {\n    const res = await axios.get(`${host}/listByCategory`, {\n      params: {\n        page,\n        size,\n        category,\n      },\n    });\n    return res.data;\n  } catch (error) {\n    console.error(\"Error fetching products by category:\", error);\n    throw error;\n  }\n};\n\nexport const getProductCategoriesNU = async () => {\n  try {\n    const response = await axios.get(`${host}/categories`);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching tour categories:\", error.message);\n    throw error;\n  }\n};\n\nexport const getListForMain = async (pageParam) => {\n  const { page, size } = pageParam;\n  const res = await axios.get(`${host}/list`, {\n    params: { page: page, size: 3 },\n  });\n  return res.data;\n};\n\n//p273, Axios로 특정 상품 데이터 조회\nexport const getOneNU = async (pno) => {\n  const res = await axios.get(`${host}/${pno}`);\n  return res.data;\n};\n\nexport const getTopSellingProductsNU = async (limit = 3) => {\n  try {\n    const response = await axios.get(`${host}/top-selling`, {\n      params: { limit }, // Pass the limit as a query parameter\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching top-selling products:\", error.message);\n    throw error;\n  }\n};","import React from \"react\";\nimport {\n  CalendarOutlined,\n  CreditCardOutlined,\n  ClockCircleOutlined,\n  SafetyOutlined,\n  UserSwitchOutlined,\n  CheckCircleOutlined,\n} from \"@ant-design/icons\";\n\nconst ProductPolicy = () => {\n  const details = [\n    {\n      icon: <CalendarOutlined className=\"text-2xl text-blue-500\" />,\n      title: \"30-Day Refund Policy\",\n      description:\n        \"Enjoy a hassle-free refund if you're unsatisfied within 30 days of purchase.\",\n    },\n    {\n      icon: <SafetyOutlined className=\"text-2xl text-blue-500\" />,\n      title: \"100% Satisfaction Guarantee\",\n      description:\n        \"We stand behind our product quality. If you're not satisfied, we'll make it right.\",\n    },\n    {\n      icon: <CreditCardOutlined className=\"text-2xl text-blue-500\" />,\n      title: \"Secure Payment\",\n      description: \"Your transactions are encrypted and safe with us.\",\n    },\n    {\n      icon: <CheckCircleOutlined className=\"text-2xl text-blue-500\" />,\n      title: \"Quality Assurance\",\n      description: \"Every product is inspected to meet the highest standards.\",\n    },\n    {\n      icon: <UserSwitchOutlined className=\"text-2xl text-blue-500\" />,\n      title: \"Dedicated Support Team\",\n      description:\n        \"Reach out to our customer service team for any questions or concerns.\",\n    },\n  ];\n\n  return (\n    <div className=\"space-y-4\">\n      {details.map((detail, index) => (\n        <div key={index} className=\"flex items-start space-x-4\">\n          {detail.icon}\n          <div>\n            <h3 className=\"text-lg font-semibold text-gray-800\">{detail.title}</h3>\n            <p className=\"text-gray-600\">{detail.description}</p>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default ProductPolicy;\n","import React, { useState } from \"react\";\nimport { StarFilled, StarOutlined } from \"@ant-design/icons\";\nimport useCustomLogin from \"../../hooks/useCustomLogin\";\n\nconst ReviewModal = ({ selectedReview, closeEditModal, deleteOne ,putOne}) => {\n  console.log(\"selectedReview.trid\",selectedReview.trid)\n  const { loginState } = useCustomLogin();\n  const [isEditMode, setIsEditMode] = useState(false);\n  const [editData, setEditData] = useState({\n    prid: selectedReview.prid,\n    trid: selectedReview.trid,\n    title: selectedReview.title,\n    reviewContent: selectedReview.reviewContent,\n    rating: selectedReview.rating,\n  });\n\n  if (!selectedReview) return null;\n\n  const handleClickDelete = (rid) => {\n    console.log(\"rid\" ,rid)\n    deleteOne(rid).then(() => {\n      closeEditModal();\n    });\n  };\n\n  // 수정 핸들러\n  const handleClickModify = () => {\n    setIsEditMode(true); \n  };\n\n  // 수정 폼 제출 핸들러\n  const handleSubmitEdit = () => {\n    console.log(\"editData.trid\",editData.trid)\n    console.log(editData.reviewContent)\n    putOne(editData).then(() => {\n      closeEditModal();\n    });\n  };\n\n  // 입력값 핸들러\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setEditData((prev) => ({\n      ...prev,\n      [name]: value,\n    }));\n  };\n\n  // 평점 업데이트 핸들러\n  const handleRatingChange = (rating) => {\n    setEditData((prev) => ({\n      ...prev,\n      rating,\n    }));\n  };\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n      <div className=\"relative bg-white p-6 rounded-lg shadow-lg w-full max-w-md\">\n         {selectedReview.email === loginState.email && (\n                <div className=\"absolute top-5 right-5 px-3 py-1 text-sm font-semibold text-white bg-teal-500 rounded-lg shadow-md\">\n                  My Review\n                </div>\n              )}\n        {!isEditMode ? (\n          <>\n            {/* 읽기 모드 */}\n            <div className=\" flex items-center mb-4\">\n              \n              <div className=\"bg-stone-400 text-white rounded-full w-12 h-12 flex items-center justify-center font-bold text-lg\">\n                {selectedReview.nickName[0]}\n              </div>\n              <div className=\"ml-4\">\n                <h3 className=\"text-lg font-semibold text-gray-800\">{selectedReview.nickName}</h3>\n                <p className=\"text-sm text-gray-500\">{selectedReview.dueDate}</p>\n                <p className=\"text-sm text-gray-500\">{selectedReview.itemName}</p>\n              </div>\n            </div>\n            <div className=\"flex items-center mb-4\">\n              {[1, 2, 3, 4, 5].map((star) => (\n                <span key={star}>\n                  {selectedReview.rating >= star ? (\n                    <StarFilled className=\"text-yellow-400 text-2xl\" />\n                  ) : (\n                    <StarOutlined className=\"text-gray-300 text-2xl\" />\n                  )}\n                </span>\n              ))}\n            </div>\n              <h4 className=\"text-xl font-semibold text-gray-800 mb-2\">{selectedReview.title}</h4>\n            <p className=\"bg-gray-50 p-4 rounded-lg border border-gray-200 text-gray-800 leading-relaxed\">\n              {selectedReview.reviewContent}\n            </p>\n            <div className=\"flex justify-end mt-6\">\n              {selectedReview.email === loginState.email && (\n                <>\n                  <button\n                    className=\"px-4 py-2 bg-yellow-400 text-white rounded-lg mr-2 hover:bg-yellow-500\"\n                    onClick={handleClickModify}\n                  >\n                    Modify\n                  </button>\n                  <button\n                    className=\"px-4 py-2 bg-stone-400 text-white rounded-lg mr-2 hover:bg-stone-500\"\n                    onClick={() => handleClickDelete(selectedReview.prid||selectedReview.trid)}\n                  >\n                    Delete\n                  </button>\n                </>\n              )}\n              <button\n                className=\"px-4 py-2 bg-gray-300 text-gray-800 rounded-lg hover:bg-gray-400\"\n                onClick={closeEditModal}\n              >\n                Close\n              </button>\n            </div>\n          </>\n        ) : (\n          <>\n            {/* 수정 모드 */}\n            <div className=\"flex items-center mb-4\">\n              <div className=\"bg-stone-400 text-white rounded-full w-12 h-12 flex items-center justify-center font-bold text-lg\">\n                {selectedReview.nickName[0]}\n              </div>\n              <div className=\"ml-4\">\n                <h3 className=\"text-lg font-semibold text-gray-800\">{selectedReview.nickName}</h3>\n                <p className=\"text-sm text-gray-500\">{selectedReview.itemName}</p>\n              </div>\n            </div>\n            <div className=\"flex flex-col items-center mb-4\">\n              <p className=\"text-gray-600 font-medium\">Update your rating:</p>\n              <div className=\"flex items-center\">\n                {[1, 2, 3, 4, 5].map((star) => (\n                  <span\n                    key={star}\n                    onClick={() => handleRatingChange(star)}\n                    className=\"cursor-pointer\"\n                  >\n                    {editData.rating >= star ? (\n                      <StarFilled className=\"text-yellow-400 text-2xl\" />\n                    ) : (\n                      <StarOutlined className=\"text-gray-300 text-2xl\" />\n                    )}\n                  </span>\n                ))}\n              </div>\n            </div>\n            <div className=\"flex flex-row justify-between mb-4\">\n            \n              <input\n                type=\"text\"\n                name=\"title\"\n                value={editData.title}\n                onChange={handleChange}\n                className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-yellow-500\"\n                placeholder=\"Enter title\"\n              />\n            </div>\n            <div className=\"mb-4\">\n              <textarea\n                name=\"reviewContent\"\n                value={editData.reviewContent}\n                onChange={handleChange}\n                className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-yellow-500\"\n                placeholder=\"Enter review content\"\n              />\n            </div>\n            <div className=\"flex justify-end mt-6\">\n              <button\n                className=\"px-4 py-2 bg-yellow-400 text-white rounded-lg mr-2 hover:bg-yellow-500\"\n                onClick={handleSubmitEdit}\n              >\n                Save\n              </button>\n              <button\n                className=\"px-4 py-2 bg-gray-300 text-gray-800 rounded-lg hover:bg-gray-400\"\n                onClick={() => setIsEditMode(false)}\n              >\n                Cancel\n              </button>\n            </div>\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ReviewModal;\n","import React, { useState } from 'react';\nimport { ChevronRight, ChevronLeft } from 'lucide-react';\nimport { StarFilled, StarOutlined } from '@ant-design/icons';\nimport { useNavigate } from 'react-router-dom';\nimport ReviewModal from './ReviewModal'; \nimport useCustomLogin from '../../hooks/useCustomLogin';\n\nconst ReviewsSection = ({ refresh,\n  setRefresh,\n  reviews,\n  putOne, \n  deleteOne }) => {\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const navigate = useNavigate();\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n  const [selectedReview, setSelectedReview] = useState(null); \n  const [isModalOpen, setIsModalOpen] = useState(false); \n  const { isLogin,loginState } = useCustomLogin();\n\n  console.log(reviews)\n  // Update layout on window resize\n  React.useEffect(() => {\n    const handleResize = () => setWindowWidth(window.innerWidth);\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  const reviewsPerSlide = windowWidth >= 1024 ? 2 : 1; // 2 reviews on large screens, 1 on small screens\n\n  const handleNavigation = () => {\n    navigate('/mypage/review'); \n};\n\n  const nextSlide = () => {\n    setCurrentIndex((prevIndex) =>\n      prevIndex + reviewsPerSlide < reviews.length ? prevIndex + reviewsPerSlide : 0\n    );\n  };\n\n  const prevSlide = () => {\n    setCurrentIndex((prevIndex) =>\n      prevIndex - reviewsPerSlide >= 0 ? prevIndex - reviewsPerSlide : reviews.length - reviewsPerSlide\n    );\n  };\n\n  const openModal = (review) => {\n    setSelectedReview(review);\n    setIsModalOpen(true);\n};\n\nconst closeModal = () => {\n    setSelectedReview(null);\n    setIsModalOpen(false);\n    setRefresh(!refresh)\n};\n\n  return (\n    <div className=\"mt-10 bg-gray-50 p-6 border border-gray-200 rounded-lg shadow-lg\">\n      <div className=\"flex justify-between items-center mb-6\">\n        <h2 className=\"text-xl font-bold text-gray-800\">What Customers Say About This Item</h2>\n        {isLogin?\n            (<button\n                className=\"px-4 py-2 text-gray-500 underline hover:text-gray-600\"\n                onClick={handleNavigation}\n            >\n                Go to Your Review List\n            </button>):''}\n      </div>\n\n      <div className=\"relative flex items-center\">\n        <button\n          className=\"absolute left-[-20px] z-10 bg-white border border-gray-300 rounded-full w-8 h-8 flex items-center justify-center shadow-md hover:bg-gray-100\"\n          onClick={prevSlide}\n        >\n          <ChevronLeft className=\"h-5 w-5 text-gray-700\" />\n        </button>\n\n        <div className=\"flex space-x-4 overflow-hidden w-full\">\n          {reviews &&reviews.slice(currentIndex, currentIndex + reviewsPerSlide).map((review) => (\n            <div\n              key={review.prid || review.trid}\n              className=\"relative bg-white rounded-lg shadow-md p-4 w-full lg:w-1/2 border border-gray-200\"\n              onClick={() => openModal(review)} \n            >\n              <div className=\"flex items-center mb-2\">\n                <div className=\"bg-stone-400 text-white rounded-full w-8 h-8 flex items-center justify-center font-bold\">\n                  {review.nickName[0]}\n                </div>\n                <div className=\"ml-3\">\n                  <h3 className=\"text-sm font-semibold text-gray-800\">{review.nickName}</h3>\n                  <p className=\"text-xs text-gray-500\">{review.dueDate}</p>\n                </div>\n              </div>\n              {isLogin && review.email === loginState.email && (\n                                <div className=\"absolute top-5 right-5 px-3 py-1 text-sm font-semibold text-white bg-teal-500 rounded-lg shadow-md\">\n                                My Review\n                                </div>\n                            )}\n              <div className=\"flex items-center\">\n                {[1, 2, 3, 4, 5].map((star) => (\n                  <span key={star}>\n                    {review.rating >= star ? (\n                      <StarFilled className=\"text-yellow-400 text-xl\" />\n                    ) : (\n                      <StarOutlined className=\"text-gray-300 text-xl\" />\n                    )}\n                  </span>\n                ))}\n              </div>\n              <h3 className=\"text-gray-800 leading-relaxed mb-2 font-semibold\">{review.title}</h3>\n              <p className=\"text-sm text-gray-700\">{review.reviewContent}</p>\n            </div>\n          ))}\n        </div>\n\n        <button\n          className=\"absolute right-[-20px] z-10 bg-white border border-gray-300 rounded-full w-8 h-8 flex items-center justify-center shadow-md hover:bg-gray-100\"\n          onClick={nextSlide}\n        >\n          <ChevronRight className=\"h-5 w-5 text-gray-700\" />\n        </button>\n      </div>\n      {isModalOpen && (\n                <ReviewModal\n                    selectedReview={selectedReview}\n                    closeEditModal={closeModal}\n                    putOne={putOne}\n                    deleteOne={deleteOne}\n                />\n            )}\n    </div>\n  );\n};\n\nexport default ReviewsSection;\n","import React, { useEffect, useState } from 'react';\nimport { API_SERVER_HOST, getProductItemReview } from '../../api/reviewApi';\nimport ReviewsSection from '../review/ReviewsSection';\nimport { ShoppingCart } from 'lucide-react';\nimport {StarFilled, StarOutlined } from \"@ant-design/icons\";\nimport useCustomLogin from '../../hooks/useCustomLogin';\nimport { getOneNU } from '../../api/nuProductApi';\nimport { useNavigate } from 'react-router-dom';\nimport ProductPolicy from './ProductPolicy';\nimport { Badge } from 'antd';\n\nconst initState = {\n  pno: 0,\n  pname: '',\n  pdesc: '',\n  pprice: 0,\n  pqty: 0,\n  shippingFee:0,\n  uploadFileNames: []\n};\nconst host = API_SERVER_HOST;\n\nconst NUReadComponent = ({ pno }) => {\n  // const { moveToList, moveToModify, page, size } = useCustomMove();\n  const [product, setProduct] = useState(initState);\n  const [fetching, setFetching] = useState(false);\n  const [currentImage, setCurrentImage] = useState(0)\n  const { loginState } = useCustomLogin();\n  const [selectedQuantity, setSelectedQuantity] = useState(0);\n  const [reviewAvg, setReviewAvg] = useState(0)\n  const [reviews, setReviews] = useState([]);\n  const [refresh, setRefresh] = useState(false);\n  const [detailsVisible, setDetailsVisible] = useState(false);\n  const navigate = useNavigate();\n\n  const calculateAverage = (reviews) => {\n    if (reviews.length === 0) return 0;\n    const sum = reviews.reduce((acc, review) => acc + review.rating, 0);\n    const avg = sum / reviews.length; \n    return Number(avg.toFixed(1));\n  };\n\n  const handleClickAddCart = () => {\n    const answer = window.confirm(\"Please log in first to purchase the product.\")\n    if(answer){\n      navigate('/member/login')\n    }\n    return\n  }\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    setFetching(true);\n    getOneNU(pno).then(data => {\n      setProduct(data);\n      setFetching(false);\n    });\n\n    // Review 데이터 가져오기\n    console.log(loginState.email);\n    getProductItemReview(pno).then((reviews) => {\n        console.log(reviews);\n        setReviews(reviews);\n        setReviewAvg(calculateAverage(reviews))\n    });\n  }, [pno,refresh]);\n\n  return (\n    <div className=\"min-h-screen py-12 px-6 lg:px-32 relative\">\n      <div className=\"flex flex-col lg:flex-row lg:space-x-12\">\n        {/* Left Section: Image Gallery */}\n        <div className=\"w-full lg:w-[450px] flex flex-col items-center space-y-6\">\n          <div className=\"w-full h-64 md:h-[450px] lg:h-[650px]\">\n            <img\n              src={`${host}/api/products/view/${product.uploadFileNames[currentImage]}`}\n              alt={product.pname}\n              className=\"w-full h-full object-cover\"\n            />\n          </div>\n          <div className=\"flex space-x-3 overflow-x-auto w-full\">\n            {product.uploadFileNames.map((image, index) => (\n              <button\n                key={index}\n                onClick={() => setCurrentImage(index)}\n                className={`w-20 h-20 overflow-hidden ${currentImage === index ? 'ring-2 ring-blue-500' : ''\n                  }`}\n              >\n                <img\n                  src={`${host}/api/products/view/${image}`}\n                  alt={`${product.pname} thumbnail`}\n                  className=\"w-full h-full object-cover\"\n                />\n              </button>\n            ))}\n          </div>\n        </div>\n\n        {/* Right Section: Product Details */}\n        <div className=\"lg:w-1/2 space-y-6\">\n          <h1 className=\"text-4xl font-light text-gray-900\">{product.pname}</h1>\n          <div className=\"flex items-center space-x-2\">\n           {[...Array(5)].map((_, star) => \n            (\n            <span key={star}>\n              {reviewAvg >= star+1 ? (\n                        <StarFilled className=\"text-yellow-400 text-xl\" />\n                    ) : (\n                        <StarOutlined className=\"text-gray-300 text-xl\" />\n                    )}\n              </span>\n            )\n            )}\n            <span className=\"text-gray-600\">({reviewAvg}) {reviews.length} reviews</span>\n          </div>\n          <p className=\"text-2xl text-gray-900\">₩{product.pprice.toLocaleString()}</p>\n          <Badge\n            count={product.shippingFee ? `Shipping Fee ₩${product.shippingFee}` : \"Free Shipping\"}\n            style={{\n              backgroundColor: product.shippingFee ? \"#718C5A\" : \"#0097A7\", // 유료 배송과 무료 배송에 따라 색상 변경\n              color: \"#fff\",\n              padding: \"0 10px\",\n              borderRadius: \"5px\",\n            }}\n          />\n          <p className=\"text-gray-700 mb-6\">{product.pdesc}</p>\n\n          {/* Quantity Selector */}\n          <div className=\"flex items-center space-x-4\">\n            <label htmlFor=\"quantity\" className=\"text-gray-700\">\n              Quantity\n            </label>\n            <input\n              type=\"number\"\n              id=\"quantity\"\n              min=\"0\"\n              max={product.pqty}\n              value={selectedQuantity}\n              onChange={(e) => setSelectedQuantity(Number(e.target.value))}\n              className=\"border rounded-lg p-2 w-20\"\n            />\n            {product.pqty ? '': <p className='text-red-600 font-semibold'>out of stock</p>}\n          </div>\n\n          {/* Action Buttons */}\n          <div className=\"flex space-x-4\">\n            <button\n              onClick={handleClickAddCart}\n              className=\"flex-1 bg-stone-400 hover:bg-stone-600 text-white py-3 rounded-lg flex items-center justify-center\"\n            >\n              <ShoppingCart className=\"mr-2\" />\n              Add to Cart\n            </button>\n          </div>\n\n           {/* Product Details */}\n           <div className=\"mt-10 bg-gray-100 p-6 rounded-lg\">\n            <div className=\"flex justify-between items-center\">\n              <h2 className=\"text-lg font-semibold text-gray-900\">\n                Product Policies\n              </h2>\n              <button\n                onClick={() => setDetailsVisible(!detailsVisible)}\n                className=\"text-gray-500 hover:text-gray-700 text-2xl\"\n              >\n                {detailsVisible ? \"-\" : \"+\"}\n              </button>\n            </div>\n            {detailsVisible && <ProductPolicy />}\n          </div>\n        </div>\n      </div>\n\n      {/* Reviews Section */}\n      <div className=\"mt-5\">\n        <ReviewsSection\n            refresh={refresh}\n            setRefresh={setRefresh}\n            reviews={reviews}\n          />\n      </div>\n    </div>\n  )\n}\n\nexport default NUReadComponent;\n","import React from 'react'\nimport { useParams } from 'react-router-dom'\nimport NUReadComponent from '../../components/products/NUReadComponent'\n\nconst NUReadPage = () => {\n\n    const {pno} = useParams()\n\n  return (\n    <div className='p-4 w-full bg-white mt-20'>\n        <NUReadComponent pno={pno}></NUReadComponent>\n    </div>\n  )\n}\n\nexport default NUReadPage"],"names":["host","API_SERVER_HOST","getListNU","async","page","size","keyword","type","category","_ref","axios","get","params","data","error","getProductsByCategoryNU","_ref2","console","getProductCategoriesNU","message","getOneNU","pno","getTopSellingProductsNU","limit","arguments","length","undefined","ProductPolicy","details","icon","_jsx","CalendarOutlined","className","title","description","SafetyOutlined","CreditCardOutlined","CheckCircleOutlined","UserSwitchOutlined","children","map","detail","index","_jsxs","selectedReview","closeEditModal","deleteOne","putOne","log","trid","loginState","useCustomLogin","isEditMode","setIsEditMode","useState","editData","setEditData","prid","reviewContent","rating","handleChange","e","name","value","target","prev","email","_Fragment","nickName","itemName","star","onClick","handleRatingChange","StarFilled","StarOutlined","onChange","placeholder","handleSubmitEdit","then","dueDate","handleClickModify","handleClickDelete","rid","refresh","setRefresh","reviews","currentIndex","setCurrentIndex","navigate","useNavigate","windowWidth","setWindowWidth","window","innerWidth","setSelectedReview","isModalOpen","setIsModalOpen","isLogin","React","handleResize","addEventListener","removeEventListener","reviewsPerSlide","handleNavigation","prevSlide","prevIndex","ChevronLeft","slice","review","openModal","nextSlide","ChevronRight","ReviewModal","closeModal","initState","pname","pdesc","pprice","pqty","shippingFee","uploadFileNames","product","setProduct","fetching","setFetching","currentImage","setCurrentImage","selectedQuantity","setSelectedQuantity","reviewAvg","setReviewAvg","setReviews","detailsVisible","setDetailsVisible","useEffect","scrollTo","getProductItemReview","avg","reduce","acc","Number","toFixed","calculateAverage","src","alt","image","Array","_","toLocaleString","Badge","count","style","backgroundColor","color","padding","borderRadius","htmlFor","id","min","max","handleClickAddCart","confirm","ShoppingCart","ReviewsSection","NUReadPage","useParams","NUReadComponent"],"sourceRoot":""}